ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.bss
  20              		.align	2
  21              	pxPort:
  22 0000 00000000 		.space	4
  23              		.global	gatekeeper
  24              		.align	2
  25              		.type	gatekeeper, %object
  26              		.size	gatekeeper, 4
  27              	gatekeeper:
  28 0004 00000000 		.space	4
  29              		.global	queue_handle
  30              		.align	2
  31              		.type	queue_handle, %object
  32              		.size	queue_handle, 4
  33              	queue_handle:
  34 0008 00000000 		.space	4
  35              		.comm	rx_receive,1,1
  36              		.comm	buffer,64,4
  37              		.comm	left_wheel,36,4
  38              		.comm	right_wheel,36,4
  39              		.comm	k,24,8
  40              		.global	isMaster
  41              		.data
  42              		.align	2
  43              		.type	isMaster, %object
  44              		.size	isMaster, 4
  45              	isMaster:
  46 0000 01000000 		.word	1
  47              		.global	first_run
  48              		.align	2
  49              		.type	first_run, %object
  50              		.size	first_run, 4
  51              	first_run:
  52 0004 01000000 		.word	1
  53              		.section	.rodata
  54              		.align	2
  55              	.LC0:
  56 0000 0A3D3D3D 		.ascii	"\012=== Master ===\012\012\000"
  56      204D6173 
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 2


  56      74657220 
  56      3D3D3D0A 
  56      0A00
  57 0012 0000     		.align	2
  58              	.LC1:
  59 0014 0A3D3D3D 		.ascii	"\012=== Slave ===\012\012\000"
  59      20536C61 
  59      7665203D 
  59      3D3D0A0A 
  59      00
  60 0025 000000   		.align	2
  61              	.LC2:
  62 0028 0A3D3D3D 		.ascii	"\012=== NEW RUN ===\012\012\000"
  62      204E4557 
  62      2052554E 
  62      203D3D3D 
  62      0A0A00
  63 003b 00       		.align	2
  64              	.LC3:
  65 003c 696E6974 		.ascii	"initialise the PID\000"
  65      69616C69 
  65      73652074 
  65      68652050 
  65      494400
  66 004f 00       		.align	2
  67              	.LC4:
  68 0050 77616974 		.ascii	"waiting for a serial bus to come in\000"
  68      696E6720 
  68      666F7220 
  68      61207365 
  68      7269616C 
  69              		.section	.text.main,"ax",%progbits
  70              		.align	2
  71              		.global	main
  72              		.thumb
  73              		.thumb_func
  74              		.type	main, %function
  75              	main:
  76              	.LFB69:
  77              		.file 1 "main.c"
   1:main.c        **** /*
   2:main.c        ****  * FreeRTOS Kernel V10.0.1
   3:main.c        ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:main.c        ****  *
   5:main.c        ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:main.c        ****  * this software and associated documentation files (the "Software"), to deal in
   7:main.c        ****  * the Software without restriction, including without limitation the rights to
   8:main.c        ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:main.c        ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:main.c        ****  * subject to the following conditions:
  11:main.c        ****  *
  12:main.c        ****  * The above copyright notice and this permission notice shall be included in all
  13:main.c        ****  * copies or substantial portions of the Software.
  14:main.c        ****  *
  15:main.c        ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:main.c        ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:main.c        ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 3


  18:main.c        ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:main.c        ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:main.c        ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:main.c        ****  *
  22:main.c        ****  * http://www.FreeRTOS.org
  23:main.c        ****  * http://aws.amazon.com/freertos
  24:main.c        ****  *
  25:main.c        ****  * 1 tab == 4 spaces!
  26:main.c        ****  */
  27:main.c        **** 
  28:main.c        **** /* This is the master file !!!!!!  */
  29:main.c        **** 
  30:main.c        **** 
  31:main.c        **** 
  32:main.c        **** 
  33:main.c        **** /* Standard includes */
  34:main.c        **** #include <device.h>
  35:main.c        **** #include <stdio.h>
  36:main.c        **** #include <stdint.h>
  37:main.c        **** #include <stdio.h>
  38:main.c        **** #include <stdint.h>
  39:main.c        **** #include <stdlib.h>
  40:main.c        **** #include <string.h>
  41:main.c        ****  
  42:main.c        **** 
  43:main.c        **** /* FreeRTOS includes */
  44:main.c        **** #include "FreeRTOS.h"
  45:main.c        **** #include "task.h"
  46:main.c        **** #include "semphr.h"
  47:main.c        **** #include "serial.h"
  48:main.c        **** 
  49:main.c        **** /* My headers */
  50:main.c        **** #include "movement.h"
  51:main.c        **** 
  52:main.c        **** /* The time between cycles of the 'check' functionality (defined within the
  53:main.c        **** tick hook. */
  54:main.c        **** #define mainCHECK_DELAY						( ( TickType_t ) 5000 / portTICK_PERIOD_MS )
  55:main.c        **** #define mainCOM_LED							( 3 )
  56:main.c        **** 
  57:main.c        **** /* The number of nano seconds between each processor clock. */
  58:main.c        **** #define mainNS_PER_CLOCK ( ( unsigned long ) ( ( 1.0 / ( double ) configCPU_CLOCK_HZ ) * 1000000000
  59:main.c        **** 
  60:main.c        **** /* Task priorities. */
  61:main.c        **** #define mainSENDER_PRIORITY       			( tskIDLE_PRIORITY )
  62:main.c        **** #define mainRECEIVER_PRIORITY        		( tskIDLE_PRIORITY )
  63:main.c        **** 
  64:main.c        **** #define comRX_BLOCK_TIME			( ( TickType_t ) 0xffff )
  65:main.c        **** 
  66:main.c        **** 
  67:main.c        **** void PID_initialise( void *p );
  68:main.c        **** void receive_data( void *p );
  69:main.c        **** void DMA_config();
  70:main.c        **** static void prvHardwareSetup( void );
  71:main.c        **** 
  72:main.c        **** 
  73:main.c        **** static xComPortHandle pxPort = NULL;
  74:main.c        **** xSemaphoreHandle gatekeeper = 0;
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 4


  75:main.c        **** xQueueHandle queue_handle = NULL;
  76:main.c        **** 
  77:main.c        **** 
  78:main.c        **** /* global variables */
  79:main.c        **** signed char rx_receive;
  80:main.c        **** unsigned char buffer[64];
  81:main.c        **** 
  82:main.c        **** 
  83:main.c        **** wheel_data left_wheel;
  84:main.c        **** wheel_data right_wheel;
  85:main.c        **** PID_data k;
  86:main.c        **** 
  87:main.c        **** int isMaster = 1;           // use 1 if it is the master, 0 if it is the slave.
  88:main.c        **** int first_run=1;
  89:main.c        **** 
  90:main.c        **** // START OF FUNCTIONS
  91:main.c        **** int main( void ) {
  78              		.loc 1 91 0
  79              		.cfi_startproc
  80              		@ args = 0, pretend = 0, frame = 256
  81              		@ frame_needed = 1, uses_anonymous_args = 0
  82 0000 B0B5     		push	{r4, r5, r7, lr}
  83              		.cfi_def_cfa_offset 16
  84              		.cfi_offset 4, -16
  85              		.cfi_offset 5, -12
  86              		.cfi_offset 7, -8
  87              		.cfi_offset 14, -4
  88 0002 C2B0     		sub	sp, sp, #264
  89              		.cfi_def_cfa_offset 280
  90 0004 02AF     		add	r7, sp, #8
  91              		.cfi_def_cfa 7, 272
  92:main.c        **** 	const signed char * run[64];
  93:main.c        ****     if (isMaster){
  92              		.loc 1 93 0
  93 0006 2D4B     		ldr	r3, .L5
  94 0008 1B68     		ldr	r3, [r3]
  95 000a 002B     		cmp	r3, #0
  96 000c 0ED0     		beq	.L2
  94:main.c        ****     /* This is the for loop for the master system */
  95:main.c        ****         sprintf((char *) run, "\n=== Master ===\n\n");
  97              		.loc 1 95 0
  98 000e 3B46     		mov	r3, r7
  99 0010 2B4A     		ldr	r2, .L5+4
 100 0012 1C46     		mov	r4, r3
 101 0014 1546     		mov	r5, r2
 102 0016 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 103 0018 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 104 001a 2B68     		ldr	r3, [r5]
 105 001c 2380     		strh	r3, [r4]	@ movhi
  96:main.c        ****         vSerialPutString(pxPort, (const signed char *) run, 64);
 106              		.loc 1 96 0
 107 001e 294B     		ldr	r3, .L5+8
 108 0020 1B68     		ldr	r3, [r3]
 109 0022 3946     		mov	r1, r7
 110 0024 4022     		movs	r2, #64
 111 0026 1846     		mov	r0, r3
 112 0028 FFF7FEFF 		bl	vSerialPutString
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 5


 113              	.L2:
  97:main.c        ****     }
  98:main.c        ****     if (~isMaster){
 114              		.loc 1 98 0
 115 002c 234B     		ldr	r3, .L5
 116 002e 1B68     		ldr	r3, [r3]
 117 0030 B3F1FF3F 		cmp	r3, #-1
 118 0034 0ED0     		beq	.L3
  99:main.c        ****     /* This is the for loop for the slave system */
 100:main.c        ****         sprintf((char *) run, "\n=== Slave ===\n\n");
 119              		.loc 1 100 0
 120 0036 3B46     		mov	r3, r7
 121 0038 234A     		ldr	r2, .L5+12
 122 003a 1C46     		mov	r4, r3
 123 003c 1546     		mov	r5, r2
 124 003e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 125 0040 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 126 0042 2B68     		ldr	r3, [r5]
 127 0044 2370     		strb	r3, [r4]
 101:main.c        ****         vSerialPutString(pxPort, (const signed char *) run, 64);
 128              		.loc 1 101 0
 129 0046 1F4B     		ldr	r3, .L5+8
 130 0048 1B68     		ldr	r3, [r3]
 131 004a 3946     		mov	r1, r7
 132 004c 4022     		movs	r2, #64
 133 004e 1846     		mov	r0, r3
 134 0050 FFF7FEFF 		bl	vSerialPutString
 135              	.L3:
 102:main.c        ****       }  
 103:main.c        ****     prvHardwareSetup();     
 136              		.loc 1 103 0
 137 0054 FFF7FEFF 		bl	prvHardwareSetup
 104:main.c        ****     sprintf((char *) run, "\n=== NEW RUN ===\n\n");
 138              		.loc 1 104 0
 139 0058 3B46     		mov	r3, r7
 140 005a 1C4A     		ldr	r2, .L5+16
 141 005c 1C46     		mov	r4, r3
 142 005e 1546     		mov	r5, r2
 143 0060 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 144 0062 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 145 0064 2B68     		ldr	r3, [r5]
 146 0066 1A46     		mov	r2, r3	@ movhi
 147 0068 2280     		strh	r2, [r4]	@ movhi
 148 006a 0234     		adds	r4, r4, #2
 149 006c 1B0C     		lsrs	r3, r3, #16
 150 006e 2370     		strb	r3, [r4]
 105:main.c        ****     vSerialPutString(pxPort, (const signed char *) run, 64);
 151              		.loc 1 105 0
 152 0070 144B     		ldr	r3, .L5+8
 153 0072 1B68     		ldr	r3, [r3]
 154 0074 3946     		mov	r1, r7
 155 0076 4022     		movs	r2, #64
 156 0078 1846     		mov	r0, r3
 157 007a FFF7FEFF 		bl	vSerialPutString
 106:main.c        ****     
 107:main.c        ****     gatekeeper = xSemaphoreCreateMutex();
 158              		.loc 1 107 0
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 6


 159 007e 0120     		movs	r0, #1
 160 0080 FFF7FEFF 		bl	xQueueCreateMutex
 161 0084 0246     		mov	r2, r0
 162 0086 124B     		ldr	r3, .L5+20
 163 0088 1A60     		str	r2, [r3]
 108:main.c        ****     
 109:main.c        ****     xTaskCreate( PID_initialise, (const char*) "initialise the PID", 1024, NULL, 2, NULL );
 164              		.loc 1 109 0
 165 008a 0023     		movs	r3, #0
 166 008c 0193     		str	r3, [sp, #4]
 167 008e 0223     		movs	r3, #2
 168 0090 0093     		str	r3, [sp]
 169 0092 0023     		movs	r3, #0
 170 0094 4FF48062 		mov	r2, #1024
 171 0098 0E49     		ldr	r1, .L5+24
 172 009a 0F48     		ldr	r0, .L5+28
 173 009c FFF7FEFF 		bl	xTaskCreate
 110:main.c        ****     xTaskCreate( receive_data, (const char*) "waiting for a serial bus to come in", 1024, NULL, 1, 
 174              		.loc 1 110 0
 175 00a0 0023     		movs	r3, #0
 176 00a2 0193     		str	r3, [sp, #4]
 177 00a4 0123     		movs	r3, #1
 178 00a6 0093     		str	r3, [sp]
 179 00a8 0023     		movs	r3, #0
 180 00aa 4FF48062 		mov	r2, #1024
 181 00ae 0B49     		ldr	r1, .L5+32
 182 00b0 0B48     		ldr	r0, .L5+36
 183 00b2 FFF7FEFF 		bl	xTaskCreate
 111:main.c        ****     
 112:main.c        **** 	vTaskStartScheduler();
 184              		.loc 1 112 0
 185 00b6 FFF7FEFF 		bl	vTaskStartScheduler
 186              	.L4:
 113:main.c        **** 
 114:main.c        **** 	for( ;; );  // You won't actually reach this for loop.
 187              		.loc 1 114 0 discriminator 1
 188 00ba FEE7     		b	.L4
 189              	.L6:
 190              		.align	2
 191              	.L5:
 192 00bc 00000000 		.word	isMaster
 193 00c0 00000000 		.word	.LC0
 194 00c4 00000000 		.word	pxPort
 195 00c8 14000000 		.word	.LC1
 196 00cc 28000000 		.word	.LC2
 197 00d0 00000000 		.word	gatekeeper
 198 00d4 3C000000 		.word	.LC3
 199 00d8 00000000 		.word	PID_initialise
 200 00dc 50000000 		.word	.LC4
 201 00e0 00000000 		.word	receive_data
 202              		.cfi_endproc
 203              	.LFE69:
 204              		.size	main, .-main
 205              		.section	.rodata
 206              		.align	2
 207              	.LC5:
 208 0074 62756666 		.ascii	"buffer read as %s\012\000"
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 7


 208      65722072 
 208      65616420 
 208      61732025 
 208      730A00
 209 0087 00       		.align	2
 210              	.LC6:
 211 0088 6C656674 		.ascii	"left inc: %i\012right inc: %i\012\000"
 211      20696E63 
 211      3A202569 
 211      0A726967 
 211      68742069 
 212              		.align	2
 213              	.LC7:
 214 00a4 56455254 		.ascii	"VERTICAL \012\000"
 214      4943414C 
 214      200A00
 215 00af 00       		.align	2
 216              	.LC8:
 217 00b0 484F5249 		.ascii	"HORIZONTAL \012\000"
 217      5A4F4E54 
 217      414C200A 
 217      00
 218 00bd 000000   		.align	2
 219              	.LC9:
 220 00c0 4C454420 		.ascii	"LED BLUE TURN ON\000"
 220      424C5545 
 220      20545552 
 220      4E204F4E 
 220      00
 221 00d1 000000   		.align	2
 222              	.LC10:
 223 00d4 4C454420 		.ascii	"LED RED TURN ON\000"
 223      52454420 
 223      5455524E 
 223      204F4E00 
 224              		.align	2
 225              	.LC11:
 226 00e4 4C454420 		.ascii	"LED BLUE TURN OFF\000"
 226      424C5545 
 226      20545552 
 226      4E204F46 
 226      4600
 227 00f6 0000     		.align	2
 228              	.LC12:
 229 00f8 4C454420 		.ascii	"LED RED TURN OFF\000"
 229      52454420 
 229      5455524E 
 229      204F4646 
 229      00
 230              		.section	.text.receive_data,"ax",%progbits
 231              		.align	2
 232              		.global	receive_data
 233              		.thumb
 234              		.thumb_func
 235              		.type	receive_data, %function
 236              	receive_data:
 237              	.LFB70:
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 8


 115:main.c        **** }
 116:main.c        **** 
 117:main.c        **** void receive_data( void *p ) {
 238              		.loc 1 117 0
 239              		.cfi_startproc
 240              		@ args = 0, pretend = 0, frame = 288
 241              		@ frame_needed = 1, uses_anonymous_args = 0
 242 0000 B0B5     		push	{r4, r5, r7, lr}
 243              		.cfi_def_cfa_offset 16
 244              		.cfi_offset 4, -16
 245              		.cfi_offset 5, -12
 246              		.cfi_offset 7, -8
 247              		.cfi_offset 14, -4
 248 0002 C8B0     		sub	sp, sp, #288
 249              		.cfi_def_cfa_offset 304
 250 0004 00AF     		add	r7, sp, #0
 251              		.cfi_def_cfa_register 7
 252 0006 3B1D     		adds	r3, r7, #4
 253 0008 1860     		str	r0, [r3]
 118:main.c        ****     
 119:main.c        ****     p = NULL;
 254              		.loc 1 119 0
 255 000a 3B1D     		adds	r3, r7, #4
 256 000c 0022     		movs	r2, #0
 257 000e 1A60     		str	r2, [r3]
 120:main.c        ****     
 121:main.c        ****     const signed char * local_write[64];
 122:main.c        ****     int i = 0;
 258              		.loc 1 122 0
 259 0010 0023     		movs	r3, #0
 260 0012 C7F81C31 		str	r3, [r7, #284]
 123:main.c        ****     int go = 0;
 261              		.loc 1 123 0
 262 0016 0023     		movs	r3, #0
 263 0018 C7F81831 		str	r3, [r7, #280]
 124:main.c        ****     signed char type = 0;
 264              		.loc 1 124 0
 265 001c 0023     		movs	r3, #0
 266 001e 87F81731 		strb	r3, [r7, #279]
 267              	.L21:
 125:main.c        ****     char temp[10];
 126:main.c        ****     
 127:main.c        ****     while(1) {
 128:main.c        ****         if (pdTRUE == xSerialGetChar(pxPort, &rx_receive, comRX_BLOCK_TIME)) {
 268              		.loc 1 128 0
 269 0022 A24B     		ldr	r3, .L22
 270 0024 1B68     		ldr	r3, [r3]
 271 0026 4FF6FF72 		movw	r2, #65535
 272 002a A149     		ldr	r1, .L22+4
 273 002c 1846     		mov	r0, r3
 274 002e FFF7FEFF 		bl	xSerialGetChar
 275 0032 0346     		mov	r3, r0
 276 0034 012B     		cmp	r3, #1
 277 0036 F4D1     		bne	.L21
 129:main.c        ****             type = rx_receive;
 278              		.loc 1 129 0
 279 0038 9D4B     		ldr	r3, .L22+4
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 9


 280 003a 1B78     		ldrb	r3, [r3]
 281 003c 87F81731 		strb	r3, [r7, #279]
 130:main.c        ****             if(xSemaphoreTake(gatekeeper, 50000)) {
 282              		.loc 1 130 0
 283 0040 9C4B     		ldr	r3, .L22+8
 284 0042 1B68     		ldr	r3, [r3]
 285 0044 4CF25031 		movw	r1, #50000
 286 0048 1846     		mov	r0, r3
 287 004a FFF7FEFF 		bl	xQueueSemaphoreTake
 288 004e 0346     		mov	r3, r0
 289 0050 002B     		cmp	r3, #0
 290 0052 E6D0     		beq	.L21
 131:main.c        ****                 if(type=='1'){//
 291              		.loc 1 131 0
 292 0054 97F91731 		ldrsb	r3, [r7, #279]
 293 0058 312B     		cmp	r3, #49
 294 005a 43D1     		bne	.L9
 132:main.c        ****                     for(i=0;i<8;i++){
 295              		.loc 1 132 0
 296 005c 0023     		movs	r3, #0
 297 005e C7F81C31 		str	r3, [r7, #284]
 298 0062 16E0     		b	.L10
 299              	.L11:
 133:main.c        ****                         xSerialGetChar(pxPort, &rx_receive, comRX_BLOCK_TIME);
 300              		.loc 1 133 0 discriminator 3
 301 0064 914B     		ldr	r3, .L22
 302 0066 1B68     		ldr	r3, [r3]
 303 0068 4FF6FF72 		movw	r2, #65535
 304 006c 9049     		ldr	r1, .L22+4
 305 006e 1846     		mov	r0, r3
 306 0070 FFF7FEFF 		bl	xSerialGetChar
 134:main.c        ****                         buffer[i] = rx_receive;
 307              		.loc 1 134 0 discriminator 3
 308 0074 8E4B     		ldr	r3, .L22+4
 309 0076 93F90030 		ldrsb	r3, [r3]
 310 007a D9B2     		uxtb	r1, r3
 311 007c 8E4A     		ldr	r2, .L22+12
 312 007e D7F81C31 		ldr	r3, [r7, #284]
 313 0082 1344     		add	r3, r3, r2
 314 0084 0A46     		mov	r2, r1
 315 0086 1A70     		strb	r2, [r3]
 132:main.c        ****                     for(i=0;i<8;i++){
 316              		.loc 1 132 0 discriminator 3
 317 0088 D7F81C31 		ldr	r3, [r7, #284]
 318 008c 0133     		adds	r3, r3, #1
 319 008e C7F81C31 		str	r3, [r7, #284]
 320              	.L10:
 132:main.c        ****                     for(i=0;i<8;i++){
 321              		.loc 1 132 0 is_stmt 0 discriminator 1
 322 0092 D7F81C31 		ldr	r3, [r7, #284]
 323 0096 072B     		cmp	r3, #7
 324 0098 E4DD     		ble	.L11
 135:main.c        ****                     }
 136:main.c        ****                     sprintf((char *) local_write, "buffer read as %s\n", buffer);
 325              		.loc 1 136 0 is_stmt 1
 326 009a 07F11403 		add	r3, r7, #20
 327 009e 864A     		ldr	r2, .L22+12
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 10


 328 00a0 8649     		ldr	r1, .L22+16
 329 00a2 1846     		mov	r0, r3
 330 00a4 FFF7FEFF 		bl	sprintf
 137:main.c        ****                     vSerialPutString(pxPort, (const signed char *) local_write, 64);
 331              		.loc 1 137 0
 332 00a8 804B     		ldr	r3, .L22
 333 00aa 1B68     		ldr	r3, [r3]
 334 00ac 07F11401 		add	r1, r7, #20
 335 00b0 4022     		movs	r2, #64
 336 00b2 1846     		mov	r0, r3
 337 00b4 FFF7FEFF 		bl	vSerialPutString
 138:main.c        ****                     update_inc( &left_wheel, &right_wheel, buffer);
 338              		.loc 1 138 0
 339 00b8 7F4A     		ldr	r2, .L22+12
 340 00ba 8149     		ldr	r1, .L22+20
 341 00bc 8148     		ldr	r0, .L22+24
 342 00be FFF7FEFF 		bl	update_inc
 139:main.c        ****                     sprintf((char *) local_write, "left inc: %i\nright inc: %i\n", left_wheel.inc, 
 343              		.loc 1 139 0
 344 00c2 804B     		ldr	r3, .L22+24
 345 00c4 9A69     		ldr	r2, [r3, #24]
 346 00c6 7E4B     		ldr	r3, .L22+20
 347 00c8 9B69     		ldr	r3, [r3, #24]
 348 00ca 07F11400 		add	r0, r7, #20
 349 00ce 7E49     		ldr	r1, .L22+28
 350 00d0 FFF7FEFF 		bl	sprintf
 140:main.c        ****                     vSerialPutString(pxPort, (const signed char *) local_write, 64);
 351              		.loc 1 140 0
 352 00d4 754B     		ldr	r3, .L22
 353 00d6 1B68     		ldr	r3, [r3]
 354 00d8 07F11401 		add	r1, r7, #20
 355 00dc 4022     		movs	r2, #64
 356 00de 1846     		mov	r0, r3
 357 00e0 FFF7FEFF 		bl	vSerialPutString
 358              	.L9:
 141:main.c        ****                 }
 142:main.c        ****                 if(type=='2'){
 359              		.loc 1 142 0
 360 00e4 97F91731 		ldrsb	r3, [r7, #279]
 361 00e8 322B     		cmp	r3, #50
 362 00ea 01D1     		bne	.L12
 143:main.c        ****                     CySoftwareReset();
 363              		.loc 1 143 0
 364 00ec FFF7FEFF 		bl	CySoftwareReset
 365              	.L12:
 144:main.c        ****                 }  
 145:main.c        ****             
 146:main.c        ****                 if (type=='4' && ~isMaster){//Camera position for LED CV
 366              		.loc 1 146 0
 367 00f0 97F91731 		ldrsb	r3, [r7, #279]
 368 00f4 342B     		cmp	r3, #52
 369 00f6 21D1     		bne	.L13
 370              		.loc 1 146 0 is_stmt 0 discriminator 1
 371 00f8 744B     		ldr	r3, .L22+32
 372 00fa 1B68     		ldr	r3, [r3]
 373 00fc B3F1FF3F 		cmp	r3, #-1
 374 0100 1CD0     		beq	.L13
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 11


 147:main.c        ****                     sprintf((char *) local_write, "VERTICAL \n");
 375              		.loc 1 147 0 is_stmt 1
 376 0102 07F11403 		add	r3, r7, #20
 377 0106 724A     		ldr	r2, .L22+36
 378 0108 07CA     		ldmia	r2, {r0, r1, r2}
 379 010a 03C3     		stmia	r3!, {r0, r1}
 380 010c 1A80     		strh	r2, [r3]	@ movhi
 381 010e 0233     		adds	r3, r3, #2
 382 0110 120C     		lsrs	r2, r2, #16
 383 0112 1A70     		strb	r2, [r3]
 148:main.c        ****                     vSerialPutString(pxPort, (const signed char *) local_write, 64);
 384              		.loc 1 148 0
 385 0114 654B     		ldr	r3, .L22
 386 0116 1B68     		ldr	r3, [r3]
 387 0118 07F11401 		add	r1, r7, #20
 388 011c 4022     		movs	r2, #64
 389 011e 1846     		mov	r0, r3
 390 0120 FFF7FEFF 		bl	vSerialPutString
 149:main.c        ****                     PWM_1_Wakeup();                 
 391              		.loc 1 149 0
 392 0124 FFF7FEFF 		bl	PWM_1_Wakeup
 150:main.c        ****                     PWM_1_WriteCompare(1200);
 393              		.loc 1 150 0
 394 0128 4FF49660 		mov	r0, #1200
 395 012c FFF7FEFF 		bl	PWM_1_WriteCompare
 151:main.c        ****                     CyDelay(1000);
 396              		.loc 1 151 0
 397 0130 4FF47A70 		mov	r0, #1000
 398 0134 FFF7FEFF 		bl	CyDelay
 152:main.c        ****                     PWM_1_Sleep();
 399              		.loc 1 152 0
 400 0138 FFF7FEFF 		bl	PWM_1_Sleep
 401              	.L13:
 153:main.c        ****                     
 154:main.c        ****                 }
 155:main.c        ****                 if (type=='5' && ~isMaster){//Causes position for Laser DOT CV
 402              		.loc 1 155 0
 403 013c 97F91731 		ldrsb	r3, [r7, #279]
 404 0140 352B     		cmp	r3, #53
 405 0142 20D1     		bne	.L14
 406              		.loc 1 155 0 is_stmt 0 discriminator 1
 407 0144 614B     		ldr	r3, .L22+32
 408 0146 1B68     		ldr	r3, [r3]
 409 0148 B3F1FF3F 		cmp	r3, #-1
 410 014c 1BD0     		beq	.L14
 156:main.c        ****                     sprintf((char *) local_write, "HORIZONTAL \n");
 411              		.loc 1 156 0 is_stmt 1
 412 014e 07F11403 		add	r3, r7, #20
 413 0152 604A     		ldr	r2, .L22+40
 414 0154 1C46     		mov	r4, r3
 415 0156 1346     		mov	r3, r2
 416 0158 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 417 015a 07C4     		stmia	r4!, {r0, r1, r2}
 418 015c 2370     		strb	r3, [r4]
 157:main.c        ****                     vSerialPutString(pxPort, (const signed char *) local_write, 64);
 419              		.loc 1 157 0
 420 015e 534B     		ldr	r3, .L22
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 12


 421 0160 1B68     		ldr	r3, [r3]
 422 0162 07F11401 		add	r1, r7, #20
 423 0166 4022     		movs	r2, #64
 424 0168 1846     		mov	r0, r3
 425 016a FFF7FEFF 		bl	vSerialPutString
 158:main.c        ****                     PWM_1_Wakeup();
 426              		.loc 1 158 0
 427 016e FFF7FEFF 		bl	PWM_1_Wakeup
 159:main.c        ****                     PWM_1_WriteCompare(2100);//0 deg;
 428              		.loc 1 159 0
 429 0172 40F63400 		movw	r0, #2100
 430 0176 FFF7FEFF 		bl	PWM_1_WriteCompare
 160:main.c        ****                     CyDelay(1000);
 431              		.loc 1 160 0
 432 017a 4FF47A70 		mov	r0, #1000
 433 017e FFF7FEFF 		bl	CyDelay
 161:main.c        ****                     PWM_1_Sleep();
 434              		.loc 1 161 0
 435 0182 FFF7FEFF 		bl	PWM_1_Sleep
 436              	.L14:
 162:main.c        ****                     
 163:main.c        ****                 }
 164:main.c        ****                  if (type=='6' && isMaster){//TURN ON LED_BLUE
 437              		.loc 1 164 0
 438 0186 97F91731 		ldrsb	r3, [r7, #279]
 439 018a 362B     		cmp	r3, #54
 440 018c 17D1     		bne	.L15
 441              		.loc 1 164 0 is_stmt 0 discriminator 1
 442 018e 4F4B     		ldr	r3, .L22+32
 443 0190 1B68     		ldr	r3, [r3]
 444 0192 002B     		cmp	r3, #0
 445 0194 13D0     		beq	.L15
 165:main.c        ****                     sprintf((char *) local_write, "LED BLUE TURN ON");
 446              		.loc 1 165 0 is_stmt 1
 447 0196 07F11403 		add	r3, r7, #20
 448 019a 4F4A     		ldr	r2, .L22+44
 449 019c 1C46     		mov	r4, r3
 450 019e 1546     		mov	r5, r2
 451 01a0 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 452 01a2 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 453 01a4 2B68     		ldr	r3, [r5]
 454 01a6 2370     		strb	r3, [r4]
 166:main.c        ****                     vSerialPutString(pxPort, (const signed char *) local_write, 64);
 455              		.loc 1 166 0
 456 01a8 404B     		ldr	r3, .L22
 457 01aa 1B68     		ldr	r3, [r3]
 458 01ac 07F11401 		add	r1, r7, #20
 459 01b0 4022     		movs	r2, #64
 460 01b2 1846     		mov	r0, r3
 461 01b4 FFF7FEFF 		bl	vSerialPutString
 167:main.c        ****                     LED_BLUE_Write(1);                    
 462              		.loc 1 167 0
 463 01b8 0120     		movs	r0, #1
 464 01ba FFF7FEFF 		bl	LED_BLUE_Write
 465              	.L15:
 168:main.c        ****                 }
 169:main.c        ****                 if (type=='7' && isMaster){//TURN ON LED_RED
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 13


 466              		.loc 1 169 0
 467 01be 97F91731 		ldrsb	r3, [r7, #279]
 468 01c2 372B     		cmp	r3, #55
 469 01c4 16D1     		bne	.L16
 470              		.loc 1 169 0 is_stmt 0 discriminator 1
 471 01c6 414B     		ldr	r3, .L22+32
 472 01c8 1B68     		ldr	r3, [r3]
 473 01ca 002B     		cmp	r3, #0
 474 01cc 12D0     		beq	.L16
 170:main.c        ****                     sprintf((char *) local_write, "LED RED TURN ON");
 475              		.loc 1 170 0 is_stmt 1
 476 01ce 07F11403 		add	r3, r7, #20
 477 01d2 424A     		ldr	r2, .L22+48
 478 01d4 1C46     		mov	r4, r3
 479 01d6 1346     		mov	r3, r2
 480 01d8 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 481 01da 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 171:main.c        ****                     vSerialPutString(pxPort, (const signed char *) local_write, 64);
 482              		.loc 1 171 0
 483 01de 334B     		ldr	r3, .L22
 484 01e0 1B68     		ldr	r3, [r3]
 485 01e2 07F11401 		add	r1, r7, #20
 486 01e6 4022     		movs	r2, #64
 487 01e8 1846     		mov	r0, r3
 488 01ea FFF7FEFF 		bl	vSerialPutString
 172:main.c        ****                     LED_RED_Write(1);                    
 489              		.loc 1 172 0
 490 01ee 0120     		movs	r0, #1
 491 01f0 FFF7FEFF 		bl	LED_RED_Write
 492              	.L16:
 173:main.c        ****                 }
 174:main.c        ****                  if (type=='8' && isMaster){//TURN OFF LED_BLUE
 493              		.loc 1 174 0
 494 01f4 97F91731 		ldrsb	r3, [r7, #279]
 495 01f8 382B     		cmp	r3, #56
 496 01fa 17D1     		bne	.L17
 497              		.loc 1 174 0 is_stmt 0 discriminator 1
 498 01fc 334B     		ldr	r3, .L22+32
 499 01fe 1B68     		ldr	r3, [r3]
 500 0200 002B     		cmp	r3, #0
 501 0202 13D0     		beq	.L17
 175:main.c        ****                     sprintf((char *) local_write, "LED BLUE TURN OFF");
 502              		.loc 1 175 0 is_stmt 1
 503 0204 07F11403 		add	r3, r7, #20
 504 0208 354A     		ldr	r2, .L22+52
 505 020a 1C46     		mov	r4, r3
 506 020c 1546     		mov	r5, r2
 507 020e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 508 0210 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 509 0212 2B68     		ldr	r3, [r5]
 510 0214 2380     		strh	r3, [r4]	@ movhi
 176:main.c        ****                     vSerialPutString(pxPort, (const signed char *) local_write, 64);
 511              		.loc 1 176 0
 512 0216 254B     		ldr	r3, .L22
 513 0218 1B68     		ldr	r3, [r3]
 514 021a 07F11401 		add	r1, r7, #20
 515 021e 4022     		movs	r2, #64
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 14


 516 0220 1846     		mov	r0, r3
 517 0222 FFF7FEFF 		bl	vSerialPutString
 177:main.c        ****                     LED_BLUE_Write(0);                    
 518              		.loc 1 177 0
 519 0226 0020     		movs	r0, #0
 520 0228 FFF7FEFF 		bl	LED_BLUE_Write
 521              	.L17:
 178:main.c        ****                 }
 179:main.c        ****                 if (type=='9' && isMaster){//TURN OFF LED_RED
 522              		.loc 1 179 0
 523 022c 97F91731 		ldrsb	r3, [r7, #279]
 524 0230 392B     		cmp	r3, #57
 525 0232 17D1     		bne	.L18
 526              		.loc 1 179 0 is_stmt 0 discriminator 1
 527 0234 254B     		ldr	r3, .L22+32
 528 0236 1B68     		ldr	r3, [r3]
 529 0238 002B     		cmp	r3, #0
 530 023a 13D0     		beq	.L18
 180:main.c        ****                     sprintf((char *) local_write, "LED RED TURN OFF");
 531              		.loc 1 180 0 is_stmt 1
 532 023c 07F11403 		add	r3, r7, #20
 533 0240 284A     		ldr	r2, .L22+56
 534 0242 1C46     		mov	r4, r3
 535 0244 1546     		mov	r5, r2
 536 0246 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 537 0248 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 538 024a 2B68     		ldr	r3, [r5]
 539 024c 2370     		strb	r3, [r4]
 181:main.c        ****                     vSerialPutString(pxPort, (const signed char *) local_write, 64);
 540              		.loc 1 181 0
 541 024e 174B     		ldr	r3, .L22
 542 0250 1B68     		ldr	r3, [r3]
 543 0252 07F11401 		add	r1, r7, #20
 544 0256 4022     		movs	r2, #64
 545 0258 1846     		mov	r0, r3
 546 025a FFF7FEFF 		bl	vSerialPutString
 182:main.c        ****                     LED_RED_Write(0);                    
 547              		.loc 1 182 0
 548 025e 0020     		movs	r0, #0
 549 0260 FFF7FEFF 		bl	LED_RED_Write
 550              	.L18:
 183:main.c        ****                 }
 184:main.c        ****                 for (i=0; i<65; i++) {
 551              		.loc 1 184 0
 552 0264 0023     		movs	r3, #0
 553 0266 C7F81C31 		str	r3, [r7, #284]
 554 026a 0AE0     		b	.L19
 555              	.L20:
 185:main.c        ****                     buffer[i] = ' ';
 556              		.loc 1 185 0 discriminator 3
 557 026c 124A     		ldr	r2, .L22+12
 558 026e D7F81C31 		ldr	r3, [r7, #284]
 559 0272 1344     		add	r3, r3, r2
 560 0274 2022     		movs	r2, #32
 561 0276 1A70     		strb	r2, [r3]
 184:main.c        ****                     buffer[i] = ' ';
 562              		.loc 1 184 0 discriminator 3
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 15


 563 0278 D7F81C31 		ldr	r3, [r7, #284]
 564 027c 0133     		adds	r3, r3, #1
 565 027e C7F81C31 		str	r3, [r7, #284]
 566              	.L19:
 184:main.c        ****                     buffer[i] = ' ';
 567              		.loc 1 184 0 is_stmt 0 discriminator 1
 568 0282 D7F81C31 		ldr	r3, [r7, #284]
 569 0286 402B     		cmp	r3, #64
 570 0288 F0DD     		ble	.L20
 186:main.c        ****                 }
 187:main.c        ****                 go = 0;
 571              		.loc 1 187 0 is_stmt 1
 572 028a 0023     		movs	r3, #0
 573 028c C7F81831 		str	r3, [r7, #280]
 188:main.c        ****                 i = 0;
 574              		.loc 1 188 0
 575 0290 0023     		movs	r3, #0
 576 0292 C7F81C31 		str	r3, [r7, #284]
 189:main.c        ****                 type=0;                   
 577              		.loc 1 189 0
 578 0296 0023     		movs	r3, #0
 579 0298 87F81731 		strb	r3, [r7, #279]
 190:main.c        ****                 xSemaphoreGive(gatekeeper);
 580              		.loc 1 190 0
 581 029c 054B     		ldr	r3, .L22+8
 582 029e 1868     		ldr	r0, [r3]
 583 02a0 0023     		movs	r3, #0
 584 02a2 0022     		movs	r2, #0
 585 02a4 0021     		movs	r1, #0
 586 02a6 FFF7FEFF 		bl	xQueueGenericSend
 191:main.c        ****             }
 192:main.c        ****         }
 193:main.c        ****     }
 587              		.loc 1 193 0
 588 02aa BAE6     		b	.L21
 589              	.L23:
 590              		.align	2
 591              	.L22:
 592 02ac 00000000 		.word	pxPort
 593 02b0 00000000 		.word	rx_receive
 594 02b4 00000000 		.word	gatekeeper
 595 02b8 00000000 		.word	buffer
 596 02bc 74000000 		.word	.LC5
 597 02c0 00000000 		.word	right_wheel
 598 02c4 00000000 		.word	left_wheel
 599 02c8 88000000 		.word	.LC6
 600 02cc 00000000 		.word	isMaster
 601 02d0 A4000000 		.word	.LC7
 602 02d4 B0000000 		.word	.LC8
 603 02d8 C0000000 		.word	.LC9
 604 02dc D4000000 		.word	.LC10
 605 02e0 E4000000 		.word	.LC11
 606 02e4 F8000000 		.word	.LC12
 607              		.cfi_endproc
 608              	.LFE70:
 609              		.size	receive_data, .-receive_data
 610              		.section	.rodata
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 16


 611 0109 000000   		.align	2
 612              	.LC13:
 613 010c 6C656674 		.ascii	"left wheel inc: %li\012\000"
 613      20776865 
 613      656C2069 
 613      6E633A20 
 613      256C690A 
 614              		.section	.text.PID_initialise,"ax",%progbits
 615              		.align	2
 616              		.global	PID_initialise
 617              		.thumb
 618              		.thumb_func
 619              		.type	PID_initialise, %function
 620              	PID_initialise:
 621              	.LFB71:
 194:main.c        **** }
 195:main.c        **** 
 196:main.c        **** void PID_initialise( void *p ) {
 622              		.loc 1 196 0
 623              		.cfi_startproc
 624              		@ args = 0, pretend = 0, frame = 264
 625              		@ frame_needed = 1, uses_anonymous_args = 0
 626 0000 90B5     		push	{r4, r7, lr}
 627              		.cfi_def_cfa_offset 12
 628              		.cfi_offset 4, -12
 629              		.cfi_offset 7, -8
 630              		.cfi_offset 14, -4
 631 0002 C3B0     		sub	sp, sp, #268
 632              		.cfi_def_cfa_offset 280
 633 0004 00AF     		add	r7, sp, #0
 634              		.cfi_def_cfa_register 7
 635 0006 3B1D     		adds	r3, r7, #4
 636 0008 1860     		str	r0, [r3]
 197:main.c        ****     
 198:main.c        ****     p = NULL;
 637              		.loc 1 198 0
 638 000a 3B1D     		adds	r3, r7, #4
 639 000c 0022     		movs	r2, #0
 640 000e 1A60     		str	r2, [r3]
 199:main.c        ****         
 200:main.c        ****     initialise_wheel_data(&left_wheel);
 641              		.loc 1 200 0
 642 0010 2B48     		ldr	r0, .L28
 643 0012 FFF7FEFF 		bl	initialise_wheel_data
 201:main.c        ****     initialise_wheel_data(&right_wheel);
 644              		.loc 1 201 0
 645 0016 2B48     		ldr	r0, .L28+4
 646 0018 FFF7FEFF 		bl	initialise_wheel_data
 202:main.c        ****     
 203:main.c        ****     k.Kp = 40;
 647              		.loc 1 203 0
 648 001c 2A4A     		ldr	r2, .L28+8
 649 001e 4FF00003 		mov	r3, #0
 650 0022 2A4C     		ldr	r4, .L28+12
 651 0024 C2E90234 		strd	r3, [r2, #8]
 204:main.c        ****     k.Ki = 0;
 652              		.loc 1 204 0
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 17


 653 0028 274A     		ldr	r2, .L28+8
 654 002a 4FF00003 		mov	r3, #0
 655 002e 4FF00004 		mov	r4, #0
 656 0032 C2E90034 		strd	r3, [r2]
 205:main.c        ****     k.Kd = 20;
 657              		.loc 1 205 0
 658 0036 244A     		ldr	r2, .L28+8
 659 0038 4FF00003 		mov	r3, #0
 660 003c 244C     		ldr	r4, .L28+16
 661 003e C2E90434 		strd	r3, [r2, #16]
 662              	.L27:
 206:main.c        ****     
 207:main.c        ****     signed char *local_write[64];  
 208:main.c        ****     
 209:main.c        ****     while(1) {
 210:main.c        ****     	if(xSemaphoreTake(gatekeeper, 50000)) {              // wait until semaphore is free:
 663              		.loc 1 210 0
 664 0042 244B     		ldr	r3, .L28+20
 665 0044 1B68     		ldr	r3, [r3]
 666 0046 4CF25031 		movw	r1, #50000
 667 004a 1846     		mov	r0, r3
 668 004c FFF7FEFF 		bl	xQueueSemaphoreTake
 669 0050 0346     		mov	r3, r0
 670 0052 002B     		cmp	r3, #0
 671 0054 30D0     		beq	.L25
 211:main.c        ****             if (first_run==1){
 672              		.loc 1 211 0
 673 0056 204B     		ldr	r3, .L28+24
 674 0058 1B68     		ldr	r3, [r3]
 675 005a 012B     		cmp	r3, #1
 676 005c 08D1     		bne	.L26
 212:main.c        ****                 M1QuadDec_SetCounter(0);
 677              		.loc 1 212 0
 678 005e 0020     		movs	r0, #0
 679 0060 FFF7FEFF 		bl	M1QuadDec_SetCounter
 213:main.c        ****                 M2QuadDec_SetCounter(0);
 680              		.loc 1 213 0
 681 0064 0020     		movs	r0, #0
 682 0066 FFF7FEFF 		bl	M2QuadDec_SetCounter
 214:main.c        ****                 first_run=0;
 683              		.loc 1 214 0
 684 006a 1B4B     		ldr	r3, .L28+24
 685 006c 0022     		movs	r2, #0
 686 006e 1A60     		str	r2, [r3]
 687              	.L26:
 215:main.c        ****             }
 216:main.c        ****                 
 217:main.c        ****             mov_update_error(&left_wheel, &right_wheel);    // update error values
 688              		.loc 1 217 0
 689 0070 1449     		ldr	r1, .L28+4
 690 0072 1348     		ldr	r0, .L28
 691 0074 FFF7FEFF 		bl	mov_update_error
 218:main.c        ****                 sprintf((char *) local_write, "left wheel inc: %li\n", left_wheel.cur_dest);
 692              		.loc 1 218 0
 693 0078 114B     		ldr	r3, .L28
 694 007a 5A68     		ldr	r2, [r3, #4]
 695 007c 07F10803 		add	r3, r7, #8
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 18


 696 0080 1649     		ldr	r1, .L28+28
 697 0082 1846     		mov	r0, r3
 698 0084 FFF7FEFF 		bl	sprintf
 219:main.c        ****                 vSerialPutString(pxPort, (signed char *) local_write, 64);
 699              		.loc 1 219 0
 700 0088 154B     		ldr	r3, .L28+32
 701 008a 1B68     		ldr	r3, [r3]
 702 008c 07F10801 		add	r1, r7, #8
 703 0090 4022     		movs	r2, #64
 704 0092 1846     		mov	r0, r3
 705 0094 FFF7FEFF 		bl	vSerialPutString
 220:main.c        ****             mov_get_PID(&left_wheel, &right_wheel, &k);     // calculate wheel voltage from errors 
 706              		.loc 1 220 0
 707 0098 0B4A     		ldr	r2, .L28+8
 708 009a 0A49     		ldr	r1, .L28+4
 709 009c 0848     		ldr	r0, .L28
 710 009e FFF7FEFF 		bl	mov_get_PID
 221:main.c        ****             
 222:main.c        ****             mov_Adj_Volt(&left_wheel, &right_wheel);        // adjust the voltage of the wheels
 711              		.loc 1 222 0
 712 00a2 0849     		ldr	r1, .L28+4
 713 00a4 0648     		ldr	r0, .L28
 714 00a6 FFF7FEFF 		bl	mov_Adj_Volt
 223:main.c        **** 			xSemaphoreGive(gatekeeper);                     // give the semaphore back
 715              		.loc 1 223 0
 716 00aa 0A4B     		ldr	r3, .L28+20
 717 00ac 1868     		ldr	r0, [r3]
 718 00ae 0023     		movs	r3, #0
 719 00b0 0022     		movs	r2, #0
 720 00b2 0021     		movs	r1, #0
 721 00b4 FFF7FEFF 		bl	xQueueGenericSend
 722              	.L25:
 224:main.c        ****     	}
 225:main.c        ****         vTaskDelay(10);                                     // wait 10ms before going again
 723              		.loc 1 225 0
 724 00b8 0A20     		movs	r0, #10
 725 00ba FFF7FEFF 		bl	vTaskDelay
 226:main.c        ****     }
 726              		.loc 1 226 0
 727 00be C0E7     		b	.L27
 728              	.L29:
 729              		.align	2
 730              	.L28:
 731 00c0 00000000 		.word	left_wheel
 732 00c4 00000000 		.word	right_wheel
 733 00c8 00000000 		.word	k
 734 00cc 00004440 		.word	1078198272
 735 00d0 00003440 		.word	1077149696
 736 00d4 00000000 		.word	gatekeeper
 737 00d8 00000000 		.word	first_run
 738 00dc 0C010000 		.word	.LC13
 739 00e0 00000000 		.word	pxPort
 740              		.cfi_endproc
 741              	.LFE71:
 742              		.size	PID_initialise, .-PID_initialise
 743              		.section	.text.prvHardwareSetup,"ax",%progbits
 744              		.align	2
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 19


 745              		.thumb
 746              		.thumb_func
 747              		.type	prvHardwareSetup, %function
 748              	prvHardwareSetup:
 749              	.LFB72:
 227:main.c        **** }
 228:main.c        **** 
 229:main.c        **** void prvHardwareSetup( void ) {
 750              		.loc 1 229 0
 751              		.cfi_startproc
 752              		@ args = 0, pretend = 0, frame = 0
 753              		@ frame_needed = 1, uses_anonymous_args = 0
 754 0000 80B5     		push	{r7, lr}
 755              		.cfi_def_cfa_offset 8
 756              		.cfi_offset 7, -8
 757              		.cfi_offset 14, -4
 758 0002 00AF     		add	r7, sp, #0
 759              		.cfi_def_cfa_register 7
 230:main.c        ****     
 231:main.c        ****     /* Port layer functions that need to be copied into the vector table. */
 232:main.c        ****     extern void xPortPendSVHandler( void );
 233:main.c        ****     extern void xPortSysTickHandler( void );
 234:main.c        ****     extern void vPortSVCHandler( void );
 235:main.c        ****     extern cyisraddress CyRamVectors[];
 236:main.c        **** 
 237:main.c        **** 	/* Install the OS Interrupt Handlers. */
 238:main.c        **** 	CyRamVectors[ 11 ] = ( cyisraddress ) vPortSVCHandler;
 760              		.loc 1 238 0
 761 0004 1E4B     		ldr	r3, .L33
 762 0006 1F4A     		ldr	r2, .L33+4
 763 0008 DA62     		str	r2, [r3, #44]
 239:main.c        **** 	CyRamVectors[ 14 ] = ( cyisraddress ) xPortPendSVHandler;
 764              		.loc 1 239 0
 765 000a 1D4B     		ldr	r3, .L33
 766 000c 1E4A     		ldr	r2, .L33+8
 767 000e 9A63     		str	r2, [r3, #56]
 240:main.c        **** 	CyRamVectors[ 15 ] = ( cyisraddress ) xPortSysTickHandler;
 768              		.loc 1 240 0
 769 0010 1B4B     		ldr	r3, .L33
 770 0012 1E4A     		ldr	r2, .L33+12
 771 0014 DA63     		str	r2, [r3, #60]
 241:main.c        **** 
 242:main.c        **** 	/* Start-up the shared peripherals. */
 243:main.c        ****     PWM_M1_Start();
 772              		.loc 1 243 0
 773 0016 FFF7FEFF 		bl	PWM_M1_Start
 244:main.c        ****     PWM_M2_Start();
 774              		.loc 1 244 0
 775 001a FFF7FEFF 		bl	PWM_M2_Start
 245:main.c        ****     M1Clock_Start();
 776              		.loc 1 245 0
 777 001e FFF7FEFF 		bl	M1Clock_Start
 246:main.c        ****     MClock_Start();
 778              		.loc 1 246 0
 779 0022 FFF7FEFF 		bl	MClock_Start
 247:main.c        ****     
 248:main.c        ****     M1QuadDec_Start();
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 20


 780              		.loc 1 248 0
 781 0026 FFF7FEFF 		bl	M1QuadDec_Start
 249:main.c        ****     M1QuadDec_Enable();
 782              		.loc 1 249 0
 783 002a FFF7FEFF 		bl	M1QuadDec_Enable
 250:main.c        ****     M1QuadDec_SetCounter(0);
 784              		.loc 1 250 0
 785 002e 0020     		movs	r0, #0
 786 0030 FFF7FEFF 		bl	M1QuadDec_SetCounter
 251:main.c        ****     
 252:main.c        ****     M2QuadDec_Start();
 787              		.loc 1 252 0
 788 0034 FFF7FEFF 		bl	M2QuadDec_Start
 253:main.c        ****     M2QuadDec_Enable();
 789              		.loc 1 253 0
 790 0038 FFF7FEFF 		bl	M2QuadDec_Enable
 254:main.c        ****     M2QuadDec_SetCounter(0);
 791              		.loc 1 254 0
 792 003c 0020     		movs	r0, #0
 793 003e FFF7FEFF 		bl	M2QuadDec_SetCounter
 255:main.c        **** 
 256:main.c        **** 	UART_1_Start();                         // Start the UART
 794              		.loc 1 256 0
 795 0042 FFF7FEFF 		bl	UART_1_Start
 257:main.c        ****     xSerialPortInitMinimal( 57600, 64 );    // Set the serial baud rate and buffer size in bytes
 796              		.loc 1 257 0
 797 0046 4021     		movs	r1, #64
 798 0048 4FF46140 		mov	r0, #57600
 799 004c FFF7FEFF 		bl	xSerialPortInitMinimal
 258:main.c        ****     
 259:main.c        ****     Timer_1_Start();
 800              		.loc 1 259 0
 801 0050 FFF7FEFF 		bl	Timer_1_Start
 260:main.c        **** 
 261:main.c        ****     /* Start up the master peripherals. */
 262:main.c        ****     if (isMaster){
 263:main.c        ****          
 264:main.c        ****     }
 265:main.c        ****     
 266:main.c        ****     /* Start up the slave peripherals. */
 267:main.c        ****     if (~isMaster){
 802              		.loc 1 267 0
 803 0054 0E4B     		ldr	r3, .L33+16
 804 0056 1B68     		ldr	r3, [r3]
 805 0058 B3F1FF3F 		cmp	r3, #-1
 806 005c 0DD0     		beq	.L32
 268:main.c        ****         
 269:main.c        ****         Clock_1_Start();
 807              		.loc 1 269 0
 808 005e FFF7FEFF 		bl	Clock_1_Start
 270:main.c        ****         PWM_1_Start();
 809              		.loc 1 270 0
 810 0062 FFF7FEFF 		bl	PWM_1_Start
 271:main.c        ****         PWM_1_WriteCompare(2100);//90 deg Camera;
 811              		.loc 1 271 0
 812 0066 40F63400 		movw	r0, #2100
 813 006a FFF7FEFF 		bl	PWM_1_WriteCompare
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 21


 272:main.c        ****         CyDelay(1000);
 814              		.loc 1 272 0
 815 006e 4FF47A70 		mov	r0, #1000
 816 0072 FFF7FEFF 		bl	CyDelay
 273:main.c        ****         PWM_1_Sleep();
 817              		.loc 1 273 0
 818 0076 FFF7FEFF 		bl	PWM_1_Sleep
 819              	.L32:
 274:main.c        ****         
 275:main.c        ****         
 276:main.c        ****         
 277:main.c        ****     }
 278:main.c        **** }
 820              		.loc 1 278 0
 821 007a 00BF     		nop
 822 007c 80BD     		pop	{r7, pc}
 823              	.L34:
 824 007e 00BF     		.align	2
 825              	.L33:
 826 0080 00000000 		.word	CyRamVectors
 827 0084 00000000 		.word	vPortSVCHandler
 828 0088 00000000 		.word	xPortPendSVHandler
 829 008c 00000000 		.word	xPortSysTickHandler
 830 0090 00000000 		.word	isMaster
 831              		.cfi_endproc
 832              	.LFE72:
 833              		.size	prvHardwareSetup, .-prvHardwareSetup
 834              		.section	.text.vApplicationStackOverflowHook,"ax",%progbits
 835              		.align	2
 836              		.global	vApplicationStackOverflowHook
 837              		.thumb
 838              		.thumb_func
 839              		.type	vApplicationStackOverflowHook, %function
 840              	vApplicationStackOverflowHook:
 841              	.LFB73:
 279:main.c        **** 
 280:main.c        **** 
 281:main.c        **** // DON'T TOUCH THESE (PART OF FREERTOS)
 282:main.c        **** void vApplicationStackOverflowHook( TaskHandle_t pxTask, char *pcTaskName ) {
 842              		.loc 1 282 0
 843              		.cfi_startproc
 844              		@ args = 0, pretend = 0, frame = 16
 845              		@ frame_needed = 1, uses_anonymous_args = 0
 846              		@ link register save eliminated.
 847 0000 80B4     		push	{r7}
 848              		.cfi_def_cfa_offset 4
 849              		.cfi_offset 7, -4
 850 0002 85B0     		sub	sp, sp, #20
 851              		.cfi_def_cfa_offset 24
 852 0004 00AF     		add	r7, sp, #0
 853              		.cfi_def_cfa_register 7
 854 0006 7860     		str	r0, [r7, #4]
 855 0008 3960     		str	r1, [r7]
 856              	.LBB6:
 857              	.LBB7:
 858              		.file 2 "..\\..\\FreeRTOS_Source\\portable\\GCC\\ARM_CM3/portmacro.h"
   1:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /*
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 22


   2:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * FreeRTOS Kernel V10.0.1
   3:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  *
   5:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * subject to the following conditions:
  11:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  12:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * copies or substantial portions of the Software.
  14:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  15:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  22:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * http://www.FreeRTOS.org
  23:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * http://aws.amazon.com/freertos
  24:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  25:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * 1 tab == 4 spaces!
  26:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  */
  27:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
  28:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
  29:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #ifndef PORTMACRO_H
  30:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define PORTMACRO_H
  31:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
  32:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #ifdef __cplusplus
  33:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** extern "C" {
  34:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
  35:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
  36:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------
  37:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * Port specific definitions.
  38:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  39:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * given hardware and compiler.
  41:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  42:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * These settings should not be altered.
  43:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  *-----------------------------------------------------------
  44:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  */
  45:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
  46:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /* Type definitions. */
  47:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portCHAR		char
  48:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portFLOAT		float
  49:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portDOUBLE		double
  50:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portLONG		long
  51:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portSHORT		short
  52:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portBASE_TYPE	long
  54:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
  55:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** typedef long BaseType_t;
  57:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** typedef unsigned long UBaseType_t;
  58:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 23


  59:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	typedef uint16_t TickType_t;
  61:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #else
  63:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	typedef uint32_t TickType_t;
  64:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
  66:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	not need to be guarded with a critical section. */
  68:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
  70:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  71:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
  72:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /* Architecture specifics. */
  73:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  77:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
  78:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /* Scheduler utilities. */
  79:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portYIELD() 															\
  80:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** {																				\
  81:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 																				\
  84:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile( "isb" );													\
  88:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** }
  89:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
  90:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  95:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
  96:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /* Critical section management. */
  97:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** extern void vPortEnterCritical( void );
  98:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** extern void vPortExitCritical( void );
  99:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 106:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 107:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 108:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** (which build with all the ports) will build. */
 111:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 114:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 115:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /* Tickless idle/low power functionality. */
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 24


 116:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 117:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 118:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 119:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
 120:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 121:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 122:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /* Architecture specific optimisations. */
 123:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 124:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 125:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
 126:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 127:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 128:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 129:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Generic helper function. */
 130:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 131:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	{
 132:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	uint8_t ucReturn;
 133:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 134:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 135:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 		return ucReturn;
 136:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	}
 137:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 138:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Check the configuration. */
 139:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 140:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 141:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	#endif
 142:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 143:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 144:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 145:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 146:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 147:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	/*-----------------------------------------------------------*/
 148:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 149:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 150:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 151:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 152:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 153:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 154:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 155:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #ifdef configASSERT
 156:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 157:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 158:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
 159:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 160:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /* portNOP() is not required by this port. */
 161:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portNOP()
 162:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 163:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portINLINE	__inline
 164:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 165:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #ifndef portFORCE_INLINE
 166:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 167:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
 168:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 169:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 170:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** {
 171:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** uint32_t ulCurrentInterrupt;
 172:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** BaseType_t xReturn;
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 25


 173:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 174:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 175:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 176:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 177:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 178:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	{
 179:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 		xReturn = pdFALSE;
 180:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	}
 181:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	else
 182:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	{
 183:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 		xReturn = pdTRUE;
 184:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	}
 185:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 186:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	return xReturn;
 187:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** }
 188:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 189:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 190:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 191:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 192:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** {
 193:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** uint32_t ulNewBASEPRI;
 194:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 195:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile
 859              		.loc 2 195 0
 860              		.syntax unified
 861              	@ 195 "..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h" 1
 862 000a 4FF0A003 			mov r3, #160												
 863 000e 83F31188 		msr basepri, r3											
 864 0012 BFF36F8F 		isb														
 865 0016 BFF34F8F 		dsb														
 866              	
 867              	@ 0 "" 2
 868              		.thumb
 869              		.syntax unified
 870 001a FB60     		str	r3, [r7, #12]
 871              	.L36:
 872              	.LBE7:
 873              	.LBE6:
 283:main.c        **** 	/* The stack space has been execeeded for a task, considering allocating more. */
 284:main.c        **** 	taskDISABLE_INTERRUPTS();
 285:main.c        **** 	for( ;; );
 874              		.loc 1 285 0 discriminator 1
 875 001c FEE7     		b	.L36
 876              		.cfi_endproc
 877              	.LFE73:
 878              		.size	vApplicationStackOverflowHook, .-vApplicationStackOverflowHook
 879 001e 00BF     		.section	.text.vApplicationMallocFailedHook,"ax",%progbits
 880              		.align	2
 881              		.global	vApplicationMallocFailedHook
 882              		.thumb
 883              		.thumb_func
 884              		.type	vApplicationMallocFailedHook, %function
 885              	vApplicationMallocFailedHook:
 886              	.LFB74:
 286:main.c        **** }
 287:main.c        **** void vApplicationMallocFailedHook( void ) {
 887              		.loc 1 287 0
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 26


 888              		.cfi_startproc
 889              		@ args = 0, pretend = 0, frame = 8
 890              		@ frame_needed = 1, uses_anonymous_args = 0
 891              		@ link register save eliminated.
 892 0000 80B4     		push	{r7}
 893              		.cfi_def_cfa_offset 4
 894              		.cfi_offset 7, -4
 895 0002 83B0     		sub	sp, sp, #12
 896              		.cfi_def_cfa_offset 16
 897 0004 00AF     		add	r7, sp, #0
 898              		.cfi_def_cfa_register 7
 899              	.LBB8:
 900              	.LBB9:
 901              		.loc 2 195 0
 902              		.syntax unified
 903              	@ 195 "..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h" 1
 904 0006 4FF0A003 			mov r3, #160												
 905 000a 83F31188 		msr basepri, r3											
 906 000e BFF36F8F 		isb														
 907 0012 BFF34F8F 		dsb														
 908              	
 909              	@ 0 "" 2
 910              		.thumb
 911              		.syntax unified
 912 0016 7B60     		str	r3, [r7, #4]
 913              	.L38:
 914              	.LBE9:
 915              	.LBE8:
 288:main.c        **** 	/* The heap space has been execeeded. */
 289:main.c        **** 	taskDISABLE_INTERRUPTS();
 290:main.c        **** 	for( ;; );
 916              		.loc 1 290 0 discriminator 1
 917 0018 FEE7     		b	.L38
 918              		.cfi_endproc
 919              	.LFE74:
 920              		.size	vApplicationMallocFailedHook, .-vApplicationMallocFailedHook
 921 001a 00BF     		.text
 922              	.Letext0:
 923              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 924              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 925              		.file 5 "Generated_Source\\PSoC5/cytypes.h"
 926              		.file 6 "..\\..\\FreeRTOS_Source\\include/task.h"
 927              		.file 7 "..\\..\\FreeRTOS_Source\\include/queue.h"
 928              		.file 8 "..\\..\\FreeRTOS_Source\\include/semphr.h"
 929              		.file 9 "..\\..\\FreeRTOS_Source\\include/serial.h"
 930              		.file 10 "movement.h"
 931              		.file 11 "Generated_Source\\PSoC5/core_cm3.h"
 932              		.section	.debug_info,"",%progbits
 933              	.Ldebug_info0:
 934 0000 AD040000 		.4byte	0x4ad
 935 0004 0400     		.2byte	0x4
 936 0006 00000000 		.4byte	.Ldebug_abbrev0
 937 000a 04       		.byte	0x4
 938 000b 01       		.uleb128 0x1
 939 000c 52000000 		.4byte	.LASF60
 940 0010 0C       		.byte	0xc
 941 0011 83030000 		.4byte	.LASF61
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 27


 942 0015 8B010000 		.4byte	.LASF62
 943 0019 00000000 		.4byte	.Ldebug_ranges0+0
 944 001d 00000000 		.4byte	0
 945 0021 00000000 		.4byte	.Ldebug_line0
 946 0025 02       		.uleb128 0x2
 947 0026 01       		.byte	0x1
 948 0027 06       		.byte	0x6
 949 0028 B5020000 		.4byte	.LASF0
 950 002c 03       		.uleb128 0x3
 951 002d 3F020000 		.4byte	.LASF4
 952 0031 03       		.byte	0x3
 953 0032 1D       		.byte	0x1d
 954 0033 37000000 		.4byte	0x37
 955 0037 02       		.uleb128 0x2
 956 0038 01       		.byte	0x1
 957 0039 08       		.byte	0x8
 958 003a 76020000 		.4byte	.LASF1
 959 003e 02       		.uleb128 0x2
 960 003f 02       		.byte	0x2
 961 0040 05       		.byte	0x5
 962 0041 0D010000 		.4byte	.LASF2
 963 0045 02       		.uleb128 0x2
 964 0046 02       		.byte	0x2
 965 0047 07       		.byte	0x7
 966 0048 14030000 		.4byte	.LASF3
 967 004c 03       		.uleb128 0x3
 968 004d AE030000 		.4byte	.LASF5
 969 0051 03       		.byte	0x3
 970 0052 3F       		.byte	0x3f
 971 0053 57000000 		.4byte	0x57
 972 0057 02       		.uleb128 0x2
 973 0058 04       		.byte	0x4
 974 0059 05       		.byte	0x5
 975 005a 0E020000 		.4byte	.LASF6
 976 005e 03       		.uleb128 0x3
 977 005f EC000000 		.4byte	.LASF7
 978 0063 03       		.byte	0x3
 979 0064 41       		.byte	0x41
 980 0065 69000000 		.4byte	0x69
 981 0069 02       		.uleb128 0x2
 982 006a 04       		.byte	0x4
 983 006b 07       		.byte	0x7
 984 006c 8A030000 		.4byte	.LASF8
 985 0070 02       		.uleb128 0x2
 986 0071 08       		.byte	0x8
 987 0072 05       		.byte	0x5
 988 0073 64010000 		.4byte	.LASF9
 989 0077 02       		.uleb128 0x2
 990 0078 08       		.byte	0x8
 991 0079 07       		.byte	0x7
 992 007a C1020000 		.4byte	.LASF10
 993 007e 04       		.uleb128 0x4
 994 007f 04       		.byte	0x4
 995 0080 05       		.byte	0x5
 996 0081 696E7400 		.ascii	"int\000"
 997 0085 02       		.uleb128 0x2
 998 0086 04       		.byte	0x4
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 28


 999 0087 07       		.byte	0x7
 1000 0088 E1020000 		.4byte	.LASF11
 1001 008c 03       		.uleb128 0x3
 1002 008d 21010000 		.4byte	.LASF12
 1003 0091 04       		.byte	0x4
 1004 0092 18       		.byte	0x18
 1005 0093 2C000000 		.4byte	0x2c
 1006 0097 03       		.uleb128 0x3
 1007 0098 41030000 		.4byte	.LASF13
 1008 009c 04       		.byte	0x4
 1009 009d 2C       		.byte	0x2c
 1010 009e 4C000000 		.4byte	0x4c
 1011 00a2 03       		.uleb128 0x3
 1012 00a3 D8020000 		.4byte	.LASF14
 1013 00a7 04       		.byte	0x4
 1014 00a8 30       		.byte	0x30
 1015 00a9 5E000000 		.4byte	0x5e
 1016 00ad 02       		.uleb128 0x2
 1017 00ae 04       		.byte	0x4
 1018 00af 04       		.byte	0x4
 1019 00b0 5E010000 		.4byte	.LASF15
 1020 00b4 02       		.uleb128 0x2
 1021 00b5 08       		.byte	0x8
 1022 00b6 04       		.byte	0x4
 1023 00b7 9C030000 		.4byte	.LASF16
 1024 00bb 02       		.uleb128 0x2
 1025 00bc 01       		.byte	0x1
 1026 00bd 08       		.byte	0x8
 1027 00be 27030000 		.4byte	.LASF17
 1028 00c2 05       		.uleb128 0x5
 1029 00c3 00010000 		.4byte	.LASF18
 1030 00c7 05       		.byte	0x5
 1031 00c8 4E02     		.2byte	0x24e
 1032 00ca CE000000 		.4byte	0xce
 1033 00ce 06       		.uleb128 0x6
 1034 00cf 04       		.byte	0x4
 1035 00d0 D4000000 		.4byte	0xd4
 1036 00d4 07       		.uleb128 0x7
 1037 00d5 02       		.uleb128 0x2
 1038 00d6 08       		.byte	0x8
 1039 00d7 04       		.byte	0x4
 1040 00d8 E0000000 		.4byte	.LASF19
 1041 00dc 02       		.uleb128 0x2
 1042 00dd 04       		.byte	0x4
 1043 00de 07       		.byte	0x7
 1044 00df 28000000 		.4byte	.LASF20
 1045 00e3 08       		.uleb128 0x8
 1046 00e4 04       		.byte	0x4
 1047 00e5 06       		.uleb128 0x6
 1048 00e6 04       		.byte	0x4
 1049 00e7 BB000000 		.4byte	0xbb
 1050 00eb 03       		.uleb128 0x3
 1051 00ec EE020000 		.4byte	.LASF21
 1052 00f0 02       		.byte	0x2
 1053 00f1 38       		.byte	0x38
 1054 00f2 57000000 		.4byte	0x57
 1055 00f6 03       		.uleb128 0x3
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 29


 1056 00f7 84020000 		.4byte	.LASF22
 1057 00fb 02       		.byte	0x2
 1058 00fc 3F       		.byte	0x3f
 1059 00fd A2000000 		.4byte	0xa2
 1060 0101 03       		.uleb128 0x3
 1061 0102 45000000 		.4byte	.LASF23
 1062 0106 06       		.byte	0x6
 1063 0107 3E       		.byte	0x3e
 1064 0108 0C010000 		.4byte	0x10c
 1065 010c 06       		.uleb128 0x6
 1066 010d 04       		.byte	0x4
 1067 010e 12010000 		.4byte	0x112
 1068 0112 09       		.uleb128 0x9
 1069 0113 2C020000 		.4byte	.LASF63
 1070 0117 03       		.uleb128 0x3
 1071 0118 B8030000 		.4byte	.LASF24
 1072 011c 07       		.byte	0x7
 1073 011d 2E       		.byte	0x2e
 1074 011e E3000000 		.4byte	0xe3
 1075 0122 03       		.uleb128 0x3
 1076 0123 99020000 		.4byte	.LASF25
 1077 0127 08       		.byte	0x8
 1078 0128 25       		.byte	0x25
 1079 0129 17010000 		.4byte	0x117
 1080 012d 03       		.uleb128 0x3
 1081 012e 5C030000 		.4byte	.LASF26
 1082 0132 09       		.byte	0x9
 1083 0133 1F       		.byte	0x1f
 1084 0134 E3000000 		.4byte	0xe3
 1085 0138 0A       		.uleb128 0xa
 1086 0139 24       		.byte	0x24
 1087 013a 0A       		.byte	0xa
 1088 013b 03       		.byte	0x3
 1089 013c AD010000 		.4byte	0x1ad
 1090 0140 0B       		.uleb128 0xb
 1091 0141 AB020000 		.4byte	.LASF27
 1092 0145 0A       		.byte	0xa
 1093 0146 04       		.byte	0x4
 1094 0147 57000000 		.4byte	0x57
 1095 014b 00       		.byte	0
 1096 014c 0B       		.uleb128 0xb
 1097 014d 1F000000 		.4byte	.LASF28
 1098 0151 0A       		.byte	0xa
 1099 0152 05       		.byte	0x5
 1100 0153 57000000 		.4byte	0x57
 1101 0157 04       		.byte	0x4
 1102 0158 0B       		.uleb128 0xb
 1103 0159 09030000 		.4byte	.LASF29
 1104 015d 0A       		.byte	0xa
 1105 015e 06       		.byte	0x6
 1106 015f 7E000000 		.4byte	0x7e
 1107 0163 08       		.byte	0x8
 1108 0164 0B       		.uleb128 0xb
 1109 0165 C6030000 		.4byte	.LASF30
 1110 0169 0A       		.byte	0xa
 1111 016a 07       		.byte	0x7
 1112 016b 7E000000 		.4byte	0x7e
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 30


 1113 016f 0C       		.byte	0xc
 1114 0170 0B       		.uleb128 0xb
 1115 0171 8F020000 		.4byte	.LASF31
 1116 0175 0A       		.byte	0xa
 1117 0176 08       		.byte	0x8
 1118 0177 7E000000 		.4byte	0x7e
 1119 017b 10       		.byte	0x10
 1120 017c 0B       		.uleb128 0xb
 1121 017d 2C030000 		.4byte	.LASF32
 1122 0181 0A       		.byte	0xa
 1123 0182 09       		.byte	0x9
 1124 0183 7E000000 		.4byte	0x7e
 1125 0187 14       		.byte	0x14
 1126 0188 0C       		.uleb128 0xc
 1127 0189 696E6300 		.ascii	"inc\000"
 1128 018d 0A       		.byte	0xa
 1129 018e 0A       		.byte	0xa
 1130 018f 7E000000 		.4byte	0x7e
 1131 0193 18       		.byte	0x18
 1132 0194 0B       		.uleb128 0xb
 1133 0195 04030000 		.4byte	.LASF33
 1134 0199 0A       		.byte	0xa
 1135 019a 0B       		.byte	0xb
 1136 019b A2000000 		.4byte	0xa2
 1137 019f 1C       		.byte	0x1c
 1138 01a0 0B       		.uleb128 0xb
 1139 01a1 22020000 		.4byte	.LASF34
 1140 01a5 0A       		.byte	0xa
 1141 01a6 0C       		.byte	0xc
 1142 01a7 A2000000 		.4byte	0xa2
 1143 01ab 20       		.byte	0x20
 1144 01ac 00       		.byte	0
 1145 01ad 03       		.uleb128 0x3
 1146 01ae 17020000 		.4byte	.LASF35
 1147 01b2 0A       		.byte	0xa
 1148 01b3 0D       		.byte	0xd
 1149 01b4 38010000 		.4byte	0x138
 1150 01b8 0A       		.uleb128 0xa
 1151 01b9 18       		.byte	0x18
 1152 01ba 0A       		.byte	0xa
 1153 01bb 0F       		.byte	0xf
 1154 01bc E2010000 		.4byte	0x1e2
 1155 01c0 0C       		.uleb128 0xc
 1156 01c1 4B6900   		.ascii	"Ki\000"
 1157 01c4 0A       		.byte	0xa
 1158 01c5 10       		.byte	0x10
 1159 01c6 B4000000 		.4byte	0xb4
 1160 01ca 00       		.byte	0
 1161 01cb 0C       		.uleb128 0xc
 1162 01cc 4B7000   		.ascii	"Kp\000"
 1163 01cf 0A       		.byte	0xa
 1164 01d0 11       		.byte	0x11
 1165 01d1 B4000000 		.4byte	0xb4
 1166 01d5 08       		.byte	0x8
 1167 01d6 0C       		.uleb128 0xc
 1168 01d7 4B6400   		.ascii	"Kd\000"
 1169 01da 0A       		.byte	0xa
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 31


 1170 01db 12       		.byte	0x12
 1171 01dc B4000000 		.4byte	0xb4
 1172 01e0 10       		.byte	0x10
 1173 01e1 00       		.byte	0
 1174 01e2 03       		.uleb128 0x3
 1175 01e3 F7000000 		.4byte	.LASF36
 1176 01e7 0A       		.byte	0xa
 1177 01e8 13       		.byte	0x13
 1178 01e9 B8010000 		.4byte	0x1b8
 1179 01ed 0D       		.uleb128 0xd
 1180 01ee CC030000 		.4byte	.LASF64
 1181 01f2 02       		.byte	0x2
 1182 01f3 BF       		.byte	0xbf
 1183 01f4 03       		.byte	0x3
 1184 01f5 05020000 		.4byte	0x205
 1185 01f9 0E       		.uleb128 0xe
 1186 01fa 11040000 		.4byte	.LASF65
 1187 01fe 02       		.byte	0x2
 1188 01ff C1       		.byte	0xc1
 1189 0200 A2000000 		.4byte	0xa2
 1190 0204 00       		.byte	0
 1191 0205 0F       		.uleb128 0xf
 1192 0206 37030000 		.4byte	.LASF66
 1193 020a 01       		.byte	0x1
 1194 020b 5B       		.byte	0x5b
 1195 020c 7E000000 		.4byte	0x7e
 1196 0210 00000000 		.4byte	.LFB69
 1197 0214 E4000000 		.4byte	.LFE69-.LFB69
 1198 0218 01       		.uleb128 0x1
 1199 0219 9C       		.byte	0x9c
 1200 021a 2E020000 		.4byte	0x22e
 1201 021e 10       		.uleb128 0x10
 1202 021f 72756E00 		.ascii	"run\000"
 1203 0223 01       		.byte	0x1
 1204 0224 5C       		.byte	0x5c
 1205 0225 2E020000 		.4byte	0x22e
 1206 0229 03       		.uleb128 0x3
 1207 022a 91       		.byte	0x91
 1208 022b F07D     		.sleb128 -272
 1209 022d 00       		.byte	0
 1210 022e 11       		.uleb128 0x11
 1211 022f 3E020000 		.4byte	0x23e
 1212 0233 3E020000 		.4byte	0x23e
 1213 0237 12       		.uleb128 0x12
 1214 0238 DC000000 		.4byte	0xdc
 1215 023c 3F       		.byte	0x3f
 1216 023d 00       		.byte	0
 1217 023e 06       		.uleb128 0x6
 1218 023f 04       		.byte	0x4
 1219 0240 44020000 		.4byte	0x244
 1220 0244 13       		.uleb128 0x13
 1221 0245 25000000 		.4byte	0x25
 1222 0249 14       		.uleb128 0x14
 1223 024a 0D000000 		.4byte	.LASF40
 1224 024e 01       		.byte	0x1
 1225 024f 75       		.byte	0x75
 1226 0250 00000000 		.4byte	.LFB70
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 32


 1227 0254 E8020000 		.4byte	.LFE70-.LFB70
 1228 0258 01       		.uleb128 0x1
 1229 0259 9C       		.byte	0x9c
 1230 025a B1020000 		.4byte	0x2b1
 1231 025e 15       		.uleb128 0x15
 1232 025f 7000     		.ascii	"p\000"
 1233 0261 01       		.byte	0x1
 1234 0262 75       		.byte	0x75
 1235 0263 E3000000 		.4byte	0xe3
 1236 0267 03       		.uleb128 0x3
 1237 0268 91       		.byte	0x91
 1238 0269 D47D     		.sleb128 -300
 1239 026b 16       		.uleb128 0x16
 1240 026c 7F010000 		.4byte	.LASF37
 1241 0270 01       		.byte	0x1
 1242 0271 79       		.byte	0x79
 1243 0272 2E020000 		.4byte	0x22e
 1244 0276 03       		.uleb128 0x3
 1245 0277 91       		.byte	0x91
 1246 0278 E47D     		.sleb128 -284
 1247 027a 10       		.uleb128 0x10
 1248 027b 6900     		.ascii	"i\000"
 1249 027d 01       		.byte	0x1
 1250 027e 7A       		.byte	0x7a
 1251 027f 7E000000 		.4byte	0x7e
 1252 0283 02       		.uleb128 0x2
 1253 0284 91       		.byte	0x91
 1254 0285 6C       		.sleb128 -20
 1255 0286 10       		.uleb128 0x10
 1256 0287 676F00   		.ascii	"go\000"
 1257 028a 01       		.byte	0x1
 1258 028b 7B       		.byte	0x7b
 1259 028c 7E000000 		.4byte	0x7e
 1260 0290 02       		.uleb128 0x2
 1261 0291 91       		.byte	0x91
 1262 0292 68       		.sleb128 -24
 1263 0293 16       		.uleb128 0x16
 1264 0294 3C030000 		.4byte	.LASF38
 1265 0298 01       		.byte	0x1
 1266 0299 7C       		.byte	0x7c
 1267 029a 25000000 		.4byte	0x25
 1268 029e 02       		.uleb128 0x2
 1269 029f 91       		.byte	0x91
 1270 02a0 67       		.sleb128 -25
 1271 02a1 16       		.uleb128 0x16
 1272 02a2 1A000000 		.4byte	.LASF39
 1273 02a6 01       		.byte	0x1
 1274 02a7 7D       		.byte	0x7d
 1275 02a8 B1020000 		.4byte	0x2b1
 1276 02ac 03       		.uleb128 0x3
 1277 02ad 91       		.byte	0x91
 1278 02ae D87D     		.sleb128 -296
 1279 02b0 00       		.byte	0
 1280 02b1 11       		.uleb128 0x11
 1281 02b2 BB000000 		.4byte	0xbb
 1282 02b6 C1020000 		.4byte	0x2c1
 1283 02ba 12       		.uleb128 0x12
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 33


 1284 02bb DC000000 		.4byte	0xdc
 1285 02bf 09       		.byte	0x9
 1286 02c0 00       		.byte	0
 1287 02c1 14       		.uleb128 0x14
 1288 02c2 02040000 		.4byte	.LASF41
 1289 02c6 01       		.byte	0x1
 1290 02c7 C4       		.byte	0xc4
 1291 02c8 00000000 		.4byte	.LFB71
 1292 02cc E4000000 		.4byte	.LFE71-.LFB71
 1293 02d0 01       		.uleb128 0x1
 1294 02d1 9C       		.byte	0x9c
 1295 02d2 F3020000 		.4byte	0x2f3
 1296 02d6 15       		.uleb128 0x15
 1297 02d7 7000     		.ascii	"p\000"
 1298 02d9 01       		.byte	0x1
 1299 02da C4       		.byte	0xc4
 1300 02db E3000000 		.4byte	0xe3
 1301 02df 03       		.uleb128 0x3
 1302 02e0 91       		.byte	0x91
 1303 02e1 EC7D     		.sleb128 -276
 1304 02e3 16       		.uleb128 0x16
 1305 02e4 7F010000 		.4byte	.LASF37
 1306 02e8 01       		.byte	0x1
 1307 02e9 CF       		.byte	0xcf
 1308 02ea F3020000 		.4byte	0x2f3
 1309 02ee 03       		.uleb128 0x3
 1310 02ef 91       		.byte	0x91
 1311 02f0 F07D     		.sleb128 -272
 1312 02f2 00       		.byte	0
 1313 02f3 11       		.uleb128 0x11
 1314 02f4 03030000 		.4byte	0x303
 1315 02f8 03030000 		.4byte	0x303
 1316 02fc 12       		.uleb128 0x12
 1317 02fd DC000000 		.4byte	0xdc
 1318 0301 3F       		.byte	0x3f
 1319 0302 00       		.byte	0
 1320 0303 06       		.uleb128 0x6
 1321 0304 04       		.byte	0x4
 1322 0305 25000000 		.4byte	0x25
 1323 0309 17       		.uleb128 0x17
 1324 030a 6B030000 		.4byte	.LASF67
 1325 030e 01       		.byte	0x1
 1326 030f E5       		.byte	0xe5
 1327 0310 00000000 		.4byte	.LFB72
 1328 0314 94000000 		.4byte	.LFE72-.LFB72
 1329 0318 01       		.uleb128 0x1
 1330 0319 9C       		.byte	0x9c
 1331 031a 3F030000 		.4byte	0x33f
 1332 031e 18       		.uleb128 0x18
 1333 031f 49030000 		.4byte	.LASF42
 1334 0323 01       		.byte	0x1
 1335 0324 E8       		.byte	0xe8
 1336 0325 18       		.uleb128 0x18
 1337 0326 31000000 		.4byte	.LASF43
 1338 032a 01       		.byte	0x1
 1339 032b E9       		.byte	0xe9
 1340 032c 18       		.uleb128 0x18
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 34


 1341 032d 29010000 		.4byte	.LASF44
 1342 0331 01       		.byte	0x1
 1343 0332 EA       		.byte	0xea
 1344 0333 19       		.uleb128 0x19
 1345 0334 00000000 		.4byte	.LASF50
 1346 0338 01       		.byte	0x1
 1347 0339 EB       		.byte	0xeb
 1348 033a 3F030000 		.4byte	0x33f
 1349 033e 00       		.byte	0
 1350 033f 11       		.uleb128 0x11
 1351 0340 C2000000 		.4byte	0xc2
 1352 0344 4A030000 		.4byte	0x34a
 1353 0348 1A       		.uleb128 0x1a
 1354 0349 00       		.byte	0
 1355 034a 1B       		.uleb128 0x1b
 1356 034b 39010000 		.4byte	.LASF45
 1357 034f 01       		.byte	0x1
 1358 0350 1A01     		.2byte	0x11a
 1359 0352 00000000 		.4byte	.LFB73
 1360 0356 1E000000 		.4byte	.LFE73-.LFB73
 1361 035a 01       		.uleb128 0x1
 1362 035b 9C       		.byte	0x9c
 1363 035c A2030000 		.4byte	0x3a2
 1364 0360 1C       		.uleb128 0x1c
 1365 0361 57010000 		.4byte	.LASF46
 1366 0365 01       		.byte	0x1
 1367 0366 1A01     		.2byte	0x11a
 1368 0368 01010000 		.4byte	0x101
 1369 036c 02       		.uleb128 0x2
 1370 036d 91       		.byte	0x91
 1371 036e 6C       		.sleb128 -20
 1372 036f 1C       		.uleb128 0x1c
 1373 0370 1E040000 		.4byte	.LASF47
 1374 0374 01       		.byte	0x1
 1375 0375 1A01     		.2byte	0x11a
 1376 0377 E5000000 		.4byte	0xe5
 1377 037b 02       		.uleb128 0x2
 1378 037c 91       		.byte	0x91
 1379 037d 68       		.sleb128 -24
 1380 037e 1D       		.uleb128 0x1d
 1381 037f ED010000 		.4byte	0x1ed
 1382 0383 0A000000 		.4byte	.LBB6
 1383 0387 12000000 		.4byte	.LBE6-.LBB6
 1384 038b 01       		.byte	0x1
 1385 038c 1C01     		.2byte	0x11c
 1386 038e 1E       		.uleb128 0x1e
 1387 038f 0A000000 		.4byte	.LBB7
 1388 0393 12000000 		.4byte	.LBE7-.LBB7
 1389 0397 1F       		.uleb128 0x1f
 1390 0398 F9010000 		.4byte	0x1f9
 1391 039c 02       		.uleb128 0x2
 1392 039d 91       		.byte	0x91
 1393 039e 74       		.sleb128 -12
 1394 039f 00       		.byte	0
 1395 03a0 00       		.byte	0
 1396 03a1 00       		.byte	0
 1397 03a2 1B       		.uleb128 0x1b
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 35


 1398 03a3 50020000 		.4byte	.LASF48
 1399 03a7 01       		.byte	0x1
 1400 03a8 1F01     		.2byte	0x11f
 1401 03aa 00000000 		.4byte	.LFB74
 1402 03ae 1A000000 		.4byte	.LFE74-.LFB74
 1403 03b2 01       		.uleb128 0x1
 1404 03b3 9C       		.byte	0x9c
 1405 03b4 DC030000 		.4byte	0x3dc
 1406 03b8 1D       		.uleb128 0x1d
 1407 03b9 ED010000 		.4byte	0x1ed
 1408 03bd 06000000 		.4byte	.LBB8
 1409 03c1 12000000 		.4byte	.LBE8-.LBB8
 1410 03c5 01       		.byte	0x1
 1411 03c6 2101     		.2byte	0x121
 1412 03c8 1E       		.uleb128 0x1e
 1413 03c9 06000000 		.4byte	.LBB9
 1414 03cd 12000000 		.4byte	.LBE9-.LBB9
 1415 03d1 1F       		.uleb128 0x1f
 1416 03d2 F9010000 		.4byte	0x1f9
 1417 03d6 02       		.uleb128 0x2
 1418 03d7 91       		.byte	0x91
 1419 03d8 74       		.sleb128 -12
 1420 03d9 00       		.byte	0
 1421 03da 00       		.byte	0
 1422 03db 00       		.byte	0
 1423 03dc 16       		.uleb128 0x16
 1424 03dd 49020000 		.4byte	.LASF49
 1425 03e1 01       		.byte	0x1
 1426 03e2 49       		.byte	0x49
 1427 03e3 2D010000 		.4byte	0x12d
 1428 03e7 05       		.uleb128 0x5
 1429 03e8 03       		.byte	0x3
 1430 03e9 00000000 		.4byte	pxPort
 1431 03ed 20       		.uleb128 0x20
 1432 03ee EA030000 		.4byte	.LASF51
 1433 03f2 0B       		.byte	0xb
 1434 03f3 9606     		.2byte	0x696
 1435 03f5 F9030000 		.4byte	0x3f9
 1436 03f9 21       		.uleb128 0x21
 1437 03fa 97000000 		.4byte	0x97
 1438 03fe 22       		.uleb128 0x22
 1439 03ff F9020000 		.4byte	.LASF52
 1440 0403 01       		.byte	0x1
 1441 0404 4A       		.byte	0x4a
 1442 0405 22010000 		.4byte	0x122
 1443 0409 05       		.uleb128 0x5
 1444 040a 03       		.byte	0x3
 1445 040b 00000000 		.4byte	gatekeeper
 1446 040f 22       		.uleb128 0x22
 1447 0410 72010000 		.4byte	.LASF53
 1448 0414 01       		.byte	0x1
 1449 0415 4B       		.byte	0x4b
 1450 0416 17010000 		.4byte	0x117
 1451 041a 05       		.uleb128 0x5
 1452 041b 03       		.byte	0x3
 1453 041c 00000000 		.4byte	queue_handle
 1454 0420 22       		.uleb128 0x22
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 36


 1455 0421 A3030000 		.4byte	.LASF54
 1456 0425 01       		.byte	0x1
 1457 0426 4F       		.byte	0x4f
 1458 0427 25000000 		.4byte	0x25
 1459 042b 05       		.uleb128 0x5
 1460 042c 03       		.byte	0x3
 1461 042d 00000000 		.4byte	rx_receive
 1462 0431 11       		.uleb128 0x11
 1463 0432 37000000 		.4byte	0x37
 1464 0436 41040000 		.4byte	0x441
 1465 043a 12       		.uleb128 0x12
 1466 043b DC000000 		.4byte	0xdc
 1467 043f 3F       		.byte	0x3f
 1468 0440 00       		.byte	0
 1469 0441 22       		.uleb128 0x22
 1470 0442 7C030000 		.4byte	.LASF55
 1471 0446 01       		.byte	0x1
 1472 0447 50       		.byte	0x50
 1473 0448 31040000 		.4byte	0x431
 1474 044c 05       		.uleb128 0x5
 1475 044d 03       		.byte	0x3
 1476 044e 00000000 		.4byte	buffer
 1477 0452 22       		.uleb128 0x22
 1478 0453 F7030000 		.4byte	.LASF56
 1479 0457 01       		.byte	0x1
 1480 0458 53       		.byte	0x53
 1481 0459 AD010000 		.4byte	0x1ad
 1482 045d 05       		.uleb128 0x5
 1483 045e 03       		.byte	0x3
 1484 045f 00000000 		.4byte	left_wheel
 1485 0463 22       		.uleb128 0x22
 1486 0464 DE030000 		.4byte	.LASF57
 1487 0468 01       		.byte	0x1
 1488 0469 54       		.byte	0x54
 1489 046a AD010000 		.4byte	0x1ad
 1490 046e 05       		.uleb128 0x5
 1491 046f 03       		.byte	0x3
 1492 0470 00000000 		.4byte	right_wheel
 1493 0474 23       		.uleb128 0x23
 1494 0475 6B00     		.ascii	"k\000"
 1495 0477 01       		.byte	0x1
 1496 0478 55       		.byte	0x55
 1497 0479 E2010000 		.4byte	0x1e2
 1498 047d 05       		.uleb128 0x5
 1499 047e 03       		.byte	0x3
 1500 047f 00000000 		.4byte	k
 1501 0483 22       		.uleb128 0x22
 1502 0484 6D020000 		.4byte	.LASF58
 1503 0488 01       		.byte	0x1
 1504 0489 57       		.byte	0x57
 1505 048a 7E000000 		.4byte	0x7e
 1506 048e 05       		.uleb128 0x5
 1507 048f 03       		.byte	0x3
 1508 0490 00000000 		.4byte	isMaster
 1509 0494 22       		.uleb128 0x22
 1510 0495 17010000 		.4byte	.LASF59
 1511 0499 01       		.byte	0x1
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 37


 1512 049a 58       		.byte	0x58
 1513 049b 7E000000 		.4byte	0x7e
 1514 049f 05       		.uleb128 0x5
 1515 04a0 03       		.byte	0x3
 1516 04a1 00000000 		.4byte	first_run
 1517 04a5 19       		.uleb128 0x19
 1518 04a6 00000000 		.4byte	.LASF50
 1519 04aa 01       		.byte	0x1
 1520 04ab EB       		.byte	0xeb
 1521 04ac 3F030000 		.4byte	0x33f
 1522 04b0 00       		.byte	0
 1523              		.section	.debug_abbrev,"",%progbits
 1524              	.Ldebug_abbrev0:
 1525 0000 01       		.uleb128 0x1
 1526 0001 11       		.uleb128 0x11
 1527 0002 01       		.byte	0x1
 1528 0003 25       		.uleb128 0x25
 1529 0004 0E       		.uleb128 0xe
 1530 0005 13       		.uleb128 0x13
 1531 0006 0B       		.uleb128 0xb
 1532 0007 03       		.uleb128 0x3
 1533 0008 0E       		.uleb128 0xe
 1534 0009 1B       		.uleb128 0x1b
 1535 000a 0E       		.uleb128 0xe
 1536 000b 55       		.uleb128 0x55
 1537 000c 17       		.uleb128 0x17
 1538 000d 11       		.uleb128 0x11
 1539 000e 01       		.uleb128 0x1
 1540 000f 10       		.uleb128 0x10
 1541 0010 17       		.uleb128 0x17
 1542 0011 00       		.byte	0
 1543 0012 00       		.byte	0
 1544 0013 02       		.uleb128 0x2
 1545 0014 24       		.uleb128 0x24
 1546 0015 00       		.byte	0
 1547 0016 0B       		.uleb128 0xb
 1548 0017 0B       		.uleb128 0xb
 1549 0018 3E       		.uleb128 0x3e
 1550 0019 0B       		.uleb128 0xb
 1551 001a 03       		.uleb128 0x3
 1552 001b 0E       		.uleb128 0xe
 1553 001c 00       		.byte	0
 1554 001d 00       		.byte	0
 1555 001e 03       		.uleb128 0x3
 1556 001f 16       		.uleb128 0x16
 1557 0020 00       		.byte	0
 1558 0021 03       		.uleb128 0x3
 1559 0022 0E       		.uleb128 0xe
 1560 0023 3A       		.uleb128 0x3a
 1561 0024 0B       		.uleb128 0xb
 1562 0025 3B       		.uleb128 0x3b
 1563 0026 0B       		.uleb128 0xb
 1564 0027 49       		.uleb128 0x49
 1565 0028 13       		.uleb128 0x13
 1566 0029 00       		.byte	0
 1567 002a 00       		.byte	0
 1568 002b 04       		.uleb128 0x4
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 38


 1569 002c 24       		.uleb128 0x24
 1570 002d 00       		.byte	0
 1571 002e 0B       		.uleb128 0xb
 1572 002f 0B       		.uleb128 0xb
 1573 0030 3E       		.uleb128 0x3e
 1574 0031 0B       		.uleb128 0xb
 1575 0032 03       		.uleb128 0x3
 1576 0033 08       		.uleb128 0x8
 1577 0034 00       		.byte	0
 1578 0035 00       		.byte	0
 1579 0036 05       		.uleb128 0x5
 1580 0037 16       		.uleb128 0x16
 1581 0038 00       		.byte	0
 1582 0039 03       		.uleb128 0x3
 1583 003a 0E       		.uleb128 0xe
 1584 003b 3A       		.uleb128 0x3a
 1585 003c 0B       		.uleb128 0xb
 1586 003d 3B       		.uleb128 0x3b
 1587 003e 05       		.uleb128 0x5
 1588 003f 49       		.uleb128 0x49
 1589 0040 13       		.uleb128 0x13
 1590 0041 00       		.byte	0
 1591 0042 00       		.byte	0
 1592 0043 06       		.uleb128 0x6
 1593 0044 0F       		.uleb128 0xf
 1594 0045 00       		.byte	0
 1595 0046 0B       		.uleb128 0xb
 1596 0047 0B       		.uleb128 0xb
 1597 0048 49       		.uleb128 0x49
 1598 0049 13       		.uleb128 0x13
 1599 004a 00       		.byte	0
 1600 004b 00       		.byte	0
 1601 004c 07       		.uleb128 0x7
 1602 004d 15       		.uleb128 0x15
 1603 004e 00       		.byte	0
 1604 004f 27       		.uleb128 0x27
 1605 0050 19       		.uleb128 0x19
 1606 0051 00       		.byte	0
 1607 0052 00       		.byte	0
 1608 0053 08       		.uleb128 0x8
 1609 0054 0F       		.uleb128 0xf
 1610 0055 00       		.byte	0
 1611 0056 0B       		.uleb128 0xb
 1612 0057 0B       		.uleb128 0xb
 1613 0058 00       		.byte	0
 1614 0059 00       		.byte	0
 1615 005a 09       		.uleb128 0x9
 1616 005b 13       		.uleb128 0x13
 1617 005c 00       		.byte	0
 1618 005d 03       		.uleb128 0x3
 1619 005e 0E       		.uleb128 0xe
 1620 005f 3C       		.uleb128 0x3c
 1621 0060 19       		.uleb128 0x19
 1622 0061 00       		.byte	0
 1623 0062 00       		.byte	0
 1624 0063 0A       		.uleb128 0xa
 1625 0064 13       		.uleb128 0x13
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 39


 1626 0065 01       		.byte	0x1
 1627 0066 0B       		.uleb128 0xb
 1628 0067 0B       		.uleb128 0xb
 1629 0068 3A       		.uleb128 0x3a
 1630 0069 0B       		.uleb128 0xb
 1631 006a 3B       		.uleb128 0x3b
 1632 006b 0B       		.uleb128 0xb
 1633 006c 01       		.uleb128 0x1
 1634 006d 13       		.uleb128 0x13
 1635 006e 00       		.byte	0
 1636 006f 00       		.byte	0
 1637 0070 0B       		.uleb128 0xb
 1638 0071 0D       		.uleb128 0xd
 1639 0072 00       		.byte	0
 1640 0073 03       		.uleb128 0x3
 1641 0074 0E       		.uleb128 0xe
 1642 0075 3A       		.uleb128 0x3a
 1643 0076 0B       		.uleb128 0xb
 1644 0077 3B       		.uleb128 0x3b
 1645 0078 0B       		.uleb128 0xb
 1646 0079 49       		.uleb128 0x49
 1647 007a 13       		.uleb128 0x13
 1648 007b 38       		.uleb128 0x38
 1649 007c 0B       		.uleb128 0xb
 1650 007d 00       		.byte	0
 1651 007e 00       		.byte	0
 1652 007f 0C       		.uleb128 0xc
 1653 0080 0D       		.uleb128 0xd
 1654 0081 00       		.byte	0
 1655 0082 03       		.uleb128 0x3
 1656 0083 08       		.uleb128 0x8
 1657 0084 3A       		.uleb128 0x3a
 1658 0085 0B       		.uleb128 0xb
 1659 0086 3B       		.uleb128 0x3b
 1660 0087 0B       		.uleb128 0xb
 1661 0088 49       		.uleb128 0x49
 1662 0089 13       		.uleb128 0x13
 1663 008a 38       		.uleb128 0x38
 1664 008b 0B       		.uleb128 0xb
 1665 008c 00       		.byte	0
 1666 008d 00       		.byte	0
 1667 008e 0D       		.uleb128 0xd
 1668 008f 2E       		.uleb128 0x2e
 1669 0090 01       		.byte	0x1
 1670 0091 03       		.uleb128 0x3
 1671 0092 0E       		.uleb128 0xe
 1672 0093 3A       		.uleb128 0x3a
 1673 0094 0B       		.uleb128 0xb
 1674 0095 3B       		.uleb128 0x3b
 1675 0096 0B       		.uleb128 0xb
 1676 0097 27       		.uleb128 0x27
 1677 0098 19       		.uleb128 0x19
 1678 0099 20       		.uleb128 0x20
 1679 009a 0B       		.uleb128 0xb
 1680 009b 01       		.uleb128 0x1
 1681 009c 13       		.uleb128 0x13
 1682 009d 00       		.byte	0
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 40


 1683 009e 00       		.byte	0
 1684 009f 0E       		.uleb128 0xe
 1685 00a0 34       		.uleb128 0x34
 1686 00a1 00       		.byte	0
 1687 00a2 03       		.uleb128 0x3
 1688 00a3 0E       		.uleb128 0xe
 1689 00a4 3A       		.uleb128 0x3a
 1690 00a5 0B       		.uleb128 0xb
 1691 00a6 3B       		.uleb128 0x3b
 1692 00a7 0B       		.uleb128 0xb
 1693 00a8 49       		.uleb128 0x49
 1694 00a9 13       		.uleb128 0x13
 1695 00aa 00       		.byte	0
 1696 00ab 00       		.byte	0
 1697 00ac 0F       		.uleb128 0xf
 1698 00ad 2E       		.uleb128 0x2e
 1699 00ae 01       		.byte	0x1
 1700 00af 3F       		.uleb128 0x3f
 1701 00b0 19       		.uleb128 0x19
 1702 00b1 03       		.uleb128 0x3
 1703 00b2 0E       		.uleb128 0xe
 1704 00b3 3A       		.uleb128 0x3a
 1705 00b4 0B       		.uleb128 0xb
 1706 00b5 3B       		.uleb128 0x3b
 1707 00b6 0B       		.uleb128 0xb
 1708 00b7 27       		.uleb128 0x27
 1709 00b8 19       		.uleb128 0x19
 1710 00b9 49       		.uleb128 0x49
 1711 00ba 13       		.uleb128 0x13
 1712 00bb 11       		.uleb128 0x11
 1713 00bc 01       		.uleb128 0x1
 1714 00bd 12       		.uleb128 0x12
 1715 00be 06       		.uleb128 0x6
 1716 00bf 40       		.uleb128 0x40
 1717 00c0 18       		.uleb128 0x18
 1718 00c1 9642     		.uleb128 0x2116
 1719 00c3 19       		.uleb128 0x19
 1720 00c4 01       		.uleb128 0x1
 1721 00c5 13       		.uleb128 0x13
 1722 00c6 00       		.byte	0
 1723 00c7 00       		.byte	0
 1724 00c8 10       		.uleb128 0x10
 1725 00c9 34       		.uleb128 0x34
 1726 00ca 00       		.byte	0
 1727 00cb 03       		.uleb128 0x3
 1728 00cc 08       		.uleb128 0x8
 1729 00cd 3A       		.uleb128 0x3a
 1730 00ce 0B       		.uleb128 0xb
 1731 00cf 3B       		.uleb128 0x3b
 1732 00d0 0B       		.uleb128 0xb
 1733 00d1 49       		.uleb128 0x49
 1734 00d2 13       		.uleb128 0x13
 1735 00d3 02       		.uleb128 0x2
 1736 00d4 18       		.uleb128 0x18
 1737 00d5 00       		.byte	0
 1738 00d6 00       		.byte	0
 1739 00d7 11       		.uleb128 0x11
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 41


 1740 00d8 01       		.uleb128 0x1
 1741 00d9 01       		.byte	0x1
 1742 00da 49       		.uleb128 0x49
 1743 00db 13       		.uleb128 0x13
 1744 00dc 01       		.uleb128 0x1
 1745 00dd 13       		.uleb128 0x13
 1746 00de 00       		.byte	0
 1747 00df 00       		.byte	0
 1748 00e0 12       		.uleb128 0x12
 1749 00e1 21       		.uleb128 0x21
 1750 00e2 00       		.byte	0
 1751 00e3 49       		.uleb128 0x49
 1752 00e4 13       		.uleb128 0x13
 1753 00e5 2F       		.uleb128 0x2f
 1754 00e6 0B       		.uleb128 0xb
 1755 00e7 00       		.byte	0
 1756 00e8 00       		.byte	0
 1757 00e9 13       		.uleb128 0x13
 1758 00ea 26       		.uleb128 0x26
 1759 00eb 00       		.byte	0
 1760 00ec 49       		.uleb128 0x49
 1761 00ed 13       		.uleb128 0x13
 1762 00ee 00       		.byte	0
 1763 00ef 00       		.byte	0
 1764 00f0 14       		.uleb128 0x14
 1765 00f1 2E       		.uleb128 0x2e
 1766 00f2 01       		.byte	0x1
 1767 00f3 3F       		.uleb128 0x3f
 1768 00f4 19       		.uleb128 0x19
 1769 00f5 03       		.uleb128 0x3
 1770 00f6 0E       		.uleb128 0xe
 1771 00f7 3A       		.uleb128 0x3a
 1772 00f8 0B       		.uleb128 0xb
 1773 00f9 3B       		.uleb128 0x3b
 1774 00fa 0B       		.uleb128 0xb
 1775 00fb 27       		.uleb128 0x27
 1776 00fc 19       		.uleb128 0x19
 1777 00fd 11       		.uleb128 0x11
 1778 00fe 01       		.uleb128 0x1
 1779 00ff 12       		.uleb128 0x12
 1780 0100 06       		.uleb128 0x6
 1781 0101 40       		.uleb128 0x40
 1782 0102 18       		.uleb128 0x18
 1783 0103 9642     		.uleb128 0x2116
 1784 0105 19       		.uleb128 0x19
 1785 0106 01       		.uleb128 0x1
 1786 0107 13       		.uleb128 0x13
 1787 0108 00       		.byte	0
 1788 0109 00       		.byte	0
 1789 010a 15       		.uleb128 0x15
 1790 010b 05       		.uleb128 0x5
 1791 010c 00       		.byte	0
 1792 010d 03       		.uleb128 0x3
 1793 010e 08       		.uleb128 0x8
 1794 010f 3A       		.uleb128 0x3a
 1795 0110 0B       		.uleb128 0xb
 1796 0111 3B       		.uleb128 0x3b
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 42


 1797 0112 0B       		.uleb128 0xb
 1798 0113 49       		.uleb128 0x49
 1799 0114 13       		.uleb128 0x13
 1800 0115 02       		.uleb128 0x2
 1801 0116 18       		.uleb128 0x18
 1802 0117 00       		.byte	0
 1803 0118 00       		.byte	0
 1804 0119 16       		.uleb128 0x16
 1805 011a 34       		.uleb128 0x34
 1806 011b 00       		.byte	0
 1807 011c 03       		.uleb128 0x3
 1808 011d 0E       		.uleb128 0xe
 1809 011e 3A       		.uleb128 0x3a
 1810 011f 0B       		.uleb128 0xb
 1811 0120 3B       		.uleb128 0x3b
 1812 0121 0B       		.uleb128 0xb
 1813 0122 49       		.uleb128 0x49
 1814 0123 13       		.uleb128 0x13
 1815 0124 02       		.uleb128 0x2
 1816 0125 18       		.uleb128 0x18
 1817 0126 00       		.byte	0
 1818 0127 00       		.byte	0
 1819 0128 17       		.uleb128 0x17
 1820 0129 2E       		.uleb128 0x2e
 1821 012a 01       		.byte	0x1
 1822 012b 03       		.uleb128 0x3
 1823 012c 0E       		.uleb128 0xe
 1824 012d 3A       		.uleb128 0x3a
 1825 012e 0B       		.uleb128 0xb
 1826 012f 3B       		.uleb128 0x3b
 1827 0130 0B       		.uleb128 0xb
 1828 0131 27       		.uleb128 0x27
 1829 0132 19       		.uleb128 0x19
 1830 0133 11       		.uleb128 0x11
 1831 0134 01       		.uleb128 0x1
 1832 0135 12       		.uleb128 0x12
 1833 0136 06       		.uleb128 0x6
 1834 0137 40       		.uleb128 0x40
 1835 0138 18       		.uleb128 0x18
 1836 0139 9642     		.uleb128 0x2116
 1837 013b 19       		.uleb128 0x19
 1838 013c 01       		.uleb128 0x1
 1839 013d 13       		.uleb128 0x13
 1840 013e 00       		.byte	0
 1841 013f 00       		.byte	0
 1842 0140 18       		.uleb128 0x18
 1843 0141 2E       		.uleb128 0x2e
 1844 0142 00       		.byte	0
 1845 0143 3F       		.uleb128 0x3f
 1846 0144 19       		.uleb128 0x19
 1847 0145 03       		.uleb128 0x3
 1848 0146 0E       		.uleb128 0xe
 1849 0147 3A       		.uleb128 0x3a
 1850 0148 0B       		.uleb128 0xb
 1851 0149 3B       		.uleb128 0x3b
 1852 014a 0B       		.uleb128 0xb
 1853 014b 27       		.uleb128 0x27
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 43


 1854 014c 19       		.uleb128 0x19
 1855 014d 3C       		.uleb128 0x3c
 1856 014e 19       		.uleb128 0x19
 1857 014f 00       		.byte	0
 1858 0150 00       		.byte	0
 1859 0151 19       		.uleb128 0x19
 1860 0152 34       		.uleb128 0x34
 1861 0153 00       		.byte	0
 1862 0154 03       		.uleb128 0x3
 1863 0155 0E       		.uleb128 0xe
 1864 0156 3A       		.uleb128 0x3a
 1865 0157 0B       		.uleb128 0xb
 1866 0158 3B       		.uleb128 0x3b
 1867 0159 0B       		.uleb128 0xb
 1868 015a 49       		.uleb128 0x49
 1869 015b 13       		.uleb128 0x13
 1870 015c 3F       		.uleb128 0x3f
 1871 015d 19       		.uleb128 0x19
 1872 015e 3C       		.uleb128 0x3c
 1873 015f 19       		.uleb128 0x19
 1874 0160 00       		.byte	0
 1875 0161 00       		.byte	0
 1876 0162 1A       		.uleb128 0x1a
 1877 0163 21       		.uleb128 0x21
 1878 0164 00       		.byte	0
 1879 0165 00       		.byte	0
 1880 0166 00       		.byte	0
 1881 0167 1B       		.uleb128 0x1b
 1882 0168 2E       		.uleb128 0x2e
 1883 0169 01       		.byte	0x1
 1884 016a 3F       		.uleb128 0x3f
 1885 016b 19       		.uleb128 0x19
 1886 016c 03       		.uleb128 0x3
 1887 016d 0E       		.uleb128 0xe
 1888 016e 3A       		.uleb128 0x3a
 1889 016f 0B       		.uleb128 0xb
 1890 0170 3B       		.uleb128 0x3b
 1891 0171 05       		.uleb128 0x5
 1892 0172 27       		.uleb128 0x27
 1893 0173 19       		.uleb128 0x19
 1894 0174 11       		.uleb128 0x11
 1895 0175 01       		.uleb128 0x1
 1896 0176 12       		.uleb128 0x12
 1897 0177 06       		.uleb128 0x6
 1898 0178 40       		.uleb128 0x40
 1899 0179 18       		.uleb128 0x18
 1900 017a 9742     		.uleb128 0x2117
 1901 017c 19       		.uleb128 0x19
 1902 017d 01       		.uleb128 0x1
 1903 017e 13       		.uleb128 0x13
 1904 017f 00       		.byte	0
 1905 0180 00       		.byte	0
 1906 0181 1C       		.uleb128 0x1c
 1907 0182 05       		.uleb128 0x5
 1908 0183 00       		.byte	0
 1909 0184 03       		.uleb128 0x3
 1910 0185 0E       		.uleb128 0xe
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 44


 1911 0186 3A       		.uleb128 0x3a
 1912 0187 0B       		.uleb128 0xb
 1913 0188 3B       		.uleb128 0x3b
 1914 0189 05       		.uleb128 0x5
 1915 018a 49       		.uleb128 0x49
 1916 018b 13       		.uleb128 0x13
 1917 018c 02       		.uleb128 0x2
 1918 018d 18       		.uleb128 0x18
 1919 018e 00       		.byte	0
 1920 018f 00       		.byte	0
 1921 0190 1D       		.uleb128 0x1d
 1922 0191 1D       		.uleb128 0x1d
 1923 0192 01       		.byte	0x1
 1924 0193 31       		.uleb128 0x31
 1925 0194 13       		.uleb128 0x13
 1926 0195 11       		.uleb128 0x11
 1927 0196 01       		.uleb128 0x1
 1928 0197 12       		.uleb128 0x12
 1929 0198 06       		.uleb128 0x6
 1930 0199 58       		.uleb128 0x58
 1931 019a 0B       		.uleb128 0xb
 1932 019b 59       		.uleb128 0x59
 1933 019c 05       		.uleb128 0x5
 1934 019d 00       		.byte	0
 1935 019e 00       		.byte	0
 1936 019f 1E       		.uleb128 0x1e
 1937 01a0 0B       		.uleb128 0xb
 1938 01a1 01       		.byte	0x1
 1939 01a2 11       		.uleb128 0x11
 1940 01a3 01       		.uleb128 0x1
 1941 01a4 12       		.uleb128 0x12
 1942 01a5 06       		.uleb128 0x6
 1943 01a6 00       		.byte	0
 1944 01a7 00       		.byte	0
 1945 01a8 1F       		.uleb128 0x1f
 1946 01a9 34       		.uleb128 0x34
 1947 01aa 00       		.byte	0
 1948 01ab 31       		.uleb128 0x31
 1949 01ac 13       		.uleb128 0x13
 1950 01ad 02       		.uleb128 0x2
 1951 01ae 18       		.uleb128 0x18
 1952 01af 00       		.byte	0
 1953 01b0 00       		.byte	0
 1954 01b1 20       		.uleb128 0x20
 1955 01b2 34       		.uleb128 0x34
 1956 01b3 00       		.byte	0
 1957 01b4 03       		.uleb128 0x3
 1958 01b5 0E       		.uleb128 0xe
 1959 01b6 3A       		.uleb128 0x3a
 1960 01b7 0B       		.uleb128 0xb
 1961 01b8 3B       		.uleb128 0x3b
 1962 01b9 05       		.uleb128 0x5
 1963 01ba 49       		.uleb128 0x49
 1964 01bb 13       		.uleb128 0x13
 1965 01bc 3F       		.uleb128 0x3f
 1966 01bd 19       		.uleb128 0x19
 1967 01be 3C       		.uleb128 0x3c
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 45


 1968 01bf 19       		.uleb128 0x19
 1969 01c0 00       		.byte	0
 1970 01c1 00       		.byte	0
 1971 01c2 21       		.uleb128 0x21
 1972 01c3 35       		.uleb128 0x35
 1973 01c4 00       		.byte	0
 1974 01c5 49       		.uleb128 0x49
 1975 01c6 13       		.uleb128 0x13
 1976 01c7 00       		.byte	0
 1977 01c8 00       		.byte	0
 1978 01c9 22       		.uleb128 0x22
 1979 01ca 34       		.uleb128 0x34
 1980 01cb 00       		.byte	0
 1981 01cc 03       		.uleb128 0x3
 1982 01cd 0E       		.uleb128 0xe
 1983 01ce 3A       		.uleb128 0x3a
 1984 01cf 0B       		.uleb128 0xb
 1985 01d0 3B       		.uleb128 0x3b
 1986 01d1 0B       		.uleb128 0xb
 1987 01d2 49       		.uleb128 0x49
 1988 01d3 13       		.uleb128 0x13
 1989 01d4 3F       		.uleb128 0x3f
 1990 01d5 19       		.uleb128 0x19
 1991 01d6 02       		.uleb128 0x2
 1992 01d7 18       		.uleb128 0x18
 1993 01d8 00       		.byte	0
 1994 01d9 00       		.byte	0
 1995 01da 23       		.uleb128 0x23
 1996 01db 34       		.uleb128 0x34
 1997 01dc 00       		.byte	0
 1998 01dd 03       		.uleb128 0x3
 1999 01de 08       		.uleb128 0x8
 2000 01df 3A       		.uleb128 0x3a
 2001 01e0 0B       		.uleb128 0xb
 2002 01e1 3B       		.uleb128 0x3b
 2003 01e2 0B       		.uleb128 0xb
 2004 01e3 49       		.uleb128 0x49
 2005 01e4 13       		.uleb128 0x13
 2006 01e5 3F       		.uleb128 0x3f
 2007 01e6 19       		.uleb128 0x19
 2008 01e7 02       		.uleb128 0x2
 2009 01e8 18       		.uleb128 0x18
 2010 01e9 00       		.byte	0
 2011 01ea 00       		.byte	0
 2012 01eb 00       		.byte	0
 2013              		.section	.debug_aranges,"",%progbits
 2014 0000 44000000 		.4byte	0x44
 2015 0004 0200     		.2byte	0x2
 2016 0006 00000000 		.4byte	.Ldebug_info0
 2017 000a 04       		.byte	0x4
 2018 000b 00       		.byte	0
 2019 000c 0000     		.2byte	0
 2020 000e 0000     		.2byte	0
 2021 0010 00000000 		.4byte	.LFB69
 2022 0014 E4000000 		.4byte	.LFE69-.LFB69
 2023 0018 00000000 		.4byte	.LFB70
 2024 001c E8020000 		.4byte	.LFE70-.LFB70
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 46


 2025 0020 00000000 		.4byte	.LFB71
 2026 0024 E4000000 		.4byte	.LFE71-.LFB71
 2027 0028 00000000 		.4byte	.LFB72
 2028 002c 94000000 		.4byte	.LFE72-.LFB72
 2029 0030 00000000 		.4byte	.LFB73
 2030 0034 1E000000 		.4byte	.LFE73-.LFB73
 2031 0038 00000000 		.4byte	.LFB74
 2032 003c 1A000000 		.4byte	.LFE74-.LFB74
 2033 0040 00000000 		.4byte	0
 2034 0044 00000000 		.4byte	0
 2035              		.section	.debug_ranges,"",%progbits
 2036              	.Ldebug_ranges0:
 2037 0000 00000000 		.4byte	.LFB69
 2038 0004 E4000000 		.4byte	.LFE69
 2039 0008 00000000 		.4byte	.LFB70
 2040 000c E8020000 		.4byte	.LFE70
 2041 0010 00000000 		.4byte	.LFB71
 2042 0014 E4000000 		.4byte	.LFE71
 2043 0018 00000000 		.4byte	.LFB72
 2044 001c 94000000 		.4byte	.LFE72
 2045 0020 00000000 		.4byte	.LFB73
 2046 0024 1E000000 		.4byte	.LFE73
 2047 0028 00000000 		.4byte	.LFB74
 2048 002c 1A000000 		.4byte	.LFE74
 2049 0030 00000000 		.4byte	0
 2050 0034 00000000 		.4byte	0
 2051              		.section	.debug_line,"",%progbits
 2052              	.Ldebug_line0:
 2053 0000 28030000 		.section	.debug_str,"MS",%progbits,1
 2053      0200DF01 
 2053      00000201 
 2053      FB0E0D00 
 2053      01010101 
 2054              	.LASF50:
 2055 0000 43795261 		.ascii	"CyRamVectors\000"
 2055      6D566563 
 2055      746F7273 
 2055      00
 2056              	.LASF40:
 2057 000d 72656365 		.ascii	"receive_data\000"
 2057      6976655F 
 2057      64617461 
 2057      00
 2058              	.LASF39:
 2059 001a 74656D70 		.ascii	"temp\000"
 2059      00
 2060              	.LASF28:
 2061 001f 6375725F 		.ascii	"cur_dest\000"
 2061      64657374 
 2061      00
 2062              	.LASF20:
 2063 0028 73697A65 		.ascii	"sizetype\000"
 2063      74797065 
 2063      00
 2064              	.LASF43:
 2065 0031 78506F72 		.ascii	"xPortSysTickHandler\000"
 2065      74537973 
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 47


 2065      5469636B 
 2065      48616E64 
 2065      6C657200 
 2066              	.LASF23:
 2067 0045 5461736B 		.ascii	"TaskHandle_t\000"
 2067      48616E64 
 2067      6C655F74 
 2067      00
 2068              	.LASF60:
 2069 0052 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2069      43313120 
 2069      352E342E 
 2069      31203230 
 2069      31363036 
 2070 0085 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2070      20726576 
 2070      6973696F 
 2070      6E203233 
 2070      37373135 
 2071 00b8 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2071      66756E63 
 2071      74696F6E 
 2071      2D736563 
 2071      74696F6E 
 2072              	.LASF19:
 2073 00e0 6C6F6E67 		.ascii	"long double\000"
 2073      20646F75 
 2073      626C6500 
 2074              	.LASF7:
 2075 00ec 5F5F7569 		.ascii	"__uint32_t\000"
 2075      6E743332 
 2075      5F7400
 2076              	.LASF36:
 2077 00f7 5049445F 		.ascii	"PID_data\000"
 2077      64617461 
 2077      00
 2078              	.LASF18:
 2079 0100 63796973 		.ascii	"cyisraddress\000"
 2079      72616464 
 2079      72657373 
 2079      00
 2080              	.LASF2:
 2081 010d 73686F72 		.ascii	"short int\000"
 2081      7420696E 
 2081      7400
 2082              	.LASF59:
 2083 0117 66697273 		.ascii	"first_run\000"
 2083      745F7275 
 2083      6E00
 2084              	.LASF12:
 2085 0121 75696E74 		.ascii	"uint8_t\000"
 2085      385F7400 
 2086              	.LASF44:
 2087 0129 76506F72 		.ascii	"vPortSVCHandler\000"
 2087      74535643 
 2087      48616E64 
 2087      6C657200 
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 48


 2088              	.LASF45:
 2089 0139 76417070 		.ascii	"vApplicationStackOverflowHook\000"
 2089      6C696361 
 2089      74696F6E 
 2089      53746163 
 2089      6B4F7665 
 2090              	.LASF46:
 2091 0157 70785461 		.ascii	"pxTask\000"
 2091      736B00
 2092              	.LASF15:
 2093 015e 666C6F61 		.ascii	"float\000"
 2093      7400
 2094              	.LASF9:
 2095 0164 6C6F6E67 		.ascii	"long long int\000"
 2095      206C6F6E 
 2095      6720696E 
 2095      7400
 2096              	.LASF53:
 2097 0172 71756575 		.ascii	"queue_handle\000"
 2097      655F6861 
 2097      6E646C65 
 2097      00
 2098              	.LASF37:
 2099 017f 6C6F6361 		.ascii	"local_write\000"
 2099      6C5F7772 
 2099      69746500 
 2100              	.LASF62:
 2101 018b 433A5C55 		.ascii	"C:\\Users\\shevi\\Documents\\GitHub\\FYP_POSCCreato"
 2101      73657273 
 2101      5C736865 
 2101      76695C44 
 2101      6F63756D 
 2102 01b9 725F4D61 		.ascii	"r_Master\\FYP_PSOCCreator_Master\\CORTEX_CY8C5588_P"
 2102      73746572 
 2102      5C465950 
 2102      5F50534F 
 2102      43437265 
 2103 01ea 536F435F 		.ascii	"SoC_Creator_GCC\\FreeRTOS_Demo.cydsn\000"
 2103      43726561 
 2103      746F725F 
 2103      4743435C 
 2103      46726565 
 2104              	.LASF6:
 2105 020e 6C6F6E67 		.ascii	"long int\000"
 2105      20696E74 
 2105      00
 2106              	.LASF35:
 2107 0217 77686565 		.ascii	"wheel_data\000"
 2107      6C5F6461 
 2107      746100
 2108              	.LASF34:
 2109 0222 74696D65 		.ascii	"time_prev\000"
 2109      5F707265 
 2109      7600
 2110              	.LASF63:
 2111 022c 5461736B 		.ascii	"TaskControlBlock_t\000"
 2111      436F6E74 
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 49


 2111      726F6C42 
 2111      6C6F636B 
 2111      5F7400
 2112              	.LASF4:
 2113 023f 5F5F7569 		.ascii	"__uint8_t\000"
 2113      6E74385F 
 2113      7400
 2114              	.LASF49:
 2115 0249 7078506F 		.ascii	"pxPort\000"
 2115      727400
 2116              	.LASF48:
 2117 0250 76417070 		.ascii	"vApplicationMallocFailedHook\000"
 2117      6C696361 
 2117      74696F6E 
 2117      4D616C6C 
 2117      6F634661 
 2118              	.LASF58:
 2119 026d 69734D61 		.ascii	"isMaster\000"
 2119      73746572 
 2119      00
 2120              	.LASF1:
 2121 0276 756E7369 		.ascii	"unsigned char\000"
 2121      676E6564 
 2121      20636861 
 2121      7200
 2122              	.LASF22:
 2123 0284 5469636B 		.ascii	"TickType_t\000"
 2123      54797065 
 2123      5F7400
 2124              	.LASF31:
 2125 028f 6572726F 		.ascii	"error_sum\000"
 2125      725F7375 
 2125      6D00
 2126              	.LASF25:
 2127 0299 53656D61 		.ascii	"SemaphoreHandle_t\000"
 2127      70686F72 
 2127      6548616E 
 2127      646C655F 
 2127      7400
 2128              	.LASF27:
 2129 02ab 70726576 		.ascii	"prev_dest\000"
 2129      5F646573 
 2129      7400
 2130              	.LASF0:
 2131 02b5 7369676E 		.ascii	"signed char\000"
 2131      65642063 
 2131      68617200 
 2132              	.LASF10:
 2133 02c1 6C6F6E67 		.ascii	"long long unsigned int\000"
 2133      206C6F6E 
 2133      6720756E 
 2133      7369676E 
 2133      65642069 
 2134              	.LASF14:
 2135 02d8 75696E74 		.ascii	"uint32_t\000"
 2135      33325F74 
 2135      00
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 50


 2136              	.LASF11:
 2137 02e1 756E7369 		.ascii	"unsigned int\000"
 2137      676E6564 
 2137      20696E74 
 2137      00
 2138              	.LASF21:
 2139 02ee 42617365 		.ascii	"BaseType_t\000"
 2139      54797065 
 2139      5F7400
 2140              	.LASF52:
 2141 02f9 67617465 		.ascii	"gatekeeper\000"
 2141      6B656570 
 2141      657200
 2142              	.LASF33:
 2143 0304 74696D65 		.ascii	"time\000"
 2143      00
 2144              	.LASF29:
 2145 0309 6572726F 		.ascii	"error_prev\000"
 2145      725F7072 
 2145      657600
 2146              	.LASF3:
 2147 0314 73686F72 		.ascii	"short unsigned int\000"
 2147      7420756E 
 2147      7369676E 
 2147      65642069 
 2147      6E7400
 2148              	.LASF17:
 2149 0327 63686172 		.ascii	"char\000"
 2149      00
 2150              	.LASF32:
 2151 032c 6D6F746F 		.ascii	"motor_volt\000"
 2151      725F766F 
 2151      6C7400
 2152              	.LASF66:
 2153 0337 6D61696E 		.ascii	"main\000"
 2153      00
 2154              	.LASF38:
 2155 033c 74797065 		.ascii	"type\000"
 2155      00
 2156              	.LASF13:
 2157 0341 696E7433 		.ascii	"int32_t\000"
 2157      325F7400 
 2158              	.LASF42:
 2159 0349 78506F72 		.ascii	"xPortPendSVHandler\000"
 2159      7450656E 
 2159      64535648 
 2159      616E646C 
 2159      657200
 2160              	.LASF26:
 2161 035c 78436F6D 		.ascii	"xComPortHandle\000"
 2161      506F7274 
 2161      48616E64 
 2161      6C6500
 2162              	.LASF67:
 2163 036b 70727648 		.ascii	"prvHardwareSetup\000"
 2163      61726477 
 2163      61726553 
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 51


 2163      65747570 
 2163      00
 2164              	.LASF55:
 2165 037c 62756666 		.ascii	"buffer\000"
 2165      657200
 2166              	.LASF61:
 2167 0383 6D61696E 		.ascii	"main.c\000"
 2167      2E6300
 2168              	.LASF8:
 2169 038a 6C6F6E67 		.ascii	"long unsigned int\000"
 2169      20756E73 
 2169      69676E65 
 2169      6420696E 
 2169      7400
 2170              	.LASF16:
 2171 039c 646F7562 		.ascii	"double\000"
 2171      6C6500
 2172              	.LASF54:
 2173 03a3 72785F72 		.ascii	"rx_receive\000"
 2173      65636569 
 2173      766500
 2174              	.LASF5:
 2175 03ae 5F5F696E 		.ascii	"__int32_t\000"
 2175      7433325F 
 2175      7400
 2176              	.LASF24:
 2177 03b8 51756575 		.ascii	"QueueHandle_t\000"
 2177      6548616E 
 2177      646C655F 
 2177      7400
 2178              	.LASF30:
 2179 03c6 6572726F 		.ascii	"error\000"
 2179      7200
 2180              	.LASF64:
 2181 03cc 76506F72 		.ascii	"vPortRaiseBASEPRI\000"
 2181      74526169 
 2181      73654241 
 2181      53455052 
 2181      4900
 2182              	.LASF57:
 2183 03de 72696768 		.ascii	"right_wheel\000"
 2183      745F7768 
 2183      65656C00 
 2184              	.LASF51:
 2185 03ea 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2185      52784275 
 2185      66666572 
 2185      00
 2186              	.LASF56:
 2187 03f7 6C656674 		.ascii	"left_wheel\000"
 2187      5F776865 
 2187      656C00
 2188              	.LASF41:
 2189 0402 5049445F 		.ascii	"PID_initialise\000"
 2189      696E6974 
 2189      69616C69 
 2189      736500
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 52


 2190              	.LASF65:
 2191 0411 756C4E65 		.ascii	"ulNewBASEPRI\000"
 2191      77424153 
 2191      45505249 
 2191      00
 2192              	.LASF47:
 2193 041e 70635461 		.ascii	"pcTaskName\000"
 2193      736B4E61 
 2193      6D6500
 2194              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
