ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccD7tdgc.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.bss
  20              		.align	2
  21              	pxPort:
  22 0000 00000000 		.space	4
  23              		.global	gatekeeper
  24              		.align	2
  25              		.type	gatekeeper, %object
  26              		.size	gatekeeper, 4
  27              	gatekeeper:
  28 0004 00000000 		.space	4
  29              		.global	queue_handle
  30              		.align	2
  31              		.type	queue_handle, %object
  32              		.size	queue_handle, 4
  33              	queue_handle:
  34 0008 00000000 		.space	4
  35              		.comm	rx_receive,1,1
  36              		.comm	buffer,64,4
  37              		.comm	left_wheel,36,4
  38              		.comm	right_wheel,36,4
  39              		.comm	k,24,8
  40              		.global	isMaster
  41              		.align	2
  42              		.type	isMaster, %object
  43              		.size	isMaster, 4
  44              	isMaster:
  45 000c 00000000 		.space	4
  46              		.section	.rodata
  47              		.align	2
  48              	.LC0:
  49 0000 0A3D3D3D 		.ascii	"\012=== Master ===\012\012\000"
  49      204D6173 
  49      74657220 
  49      3D3D3D0A 
  49      0A00
  50 0012 0000     		.align	2
  51              	.LC1:
  52 0014 0A3D3D3D 		.ascii	"\012=== NEW RUN ===\012\012\000"
  52      204E4557 
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccD7tdgc.s 			page 2


  52      2052554E 
  52      203D3D3D 
  52      0A0A00
  53 0027 00       		.align	2
  54              	.LC2:
  55 0028 696E6974 		.ascii	"initialise the PID\000"
  55      69616C69 
  55      73652074 
  55      68652050 
  55      494400
  56 003b 00       		.align	2
  57              	.LC3:
  58 003c 77616974 		.ascii	"waiting for a serial bus to come in\000"
  58      696E6720 
  58      666F7220 
  58      61207365 
  58      7269616C 
  59              		.section	.text.main,"ax",%progbits
  60              		.align	2
  61              		.global	main
  62              		.thumb
  63              		.thumb_func
  64              		.type	main, %function
  65              	main:
  66              	.LFB69:
  67              		.file 1 "main.c"
   1:main.c        **** /*
   2:main.c        ****  * FreeRTOS Kernel V10.0.1
   3:main.c        ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:main.c        ****  *
   5:main.c        ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:main.c        ****  * this software and associated documentation files (the "Software"), to deal in
   7:main.c        ****  * the Software without restriction, including without limitation the rights to
   8:main.c        ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:main.c        ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:main.c        ****  * subject to the following conditions:
  11:main.c        ****  *
  12:main.c        ****  * The above copyright notice and this permission notice shall be included in all
  13:main.c        ****  * copies or substantial portions of the Software.
  14:main.c        ****  *
  15:main.c        ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:main.c        ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:main.c        ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:main.c        ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:main.c        ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:main.c        ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:main.c        ****  *
  22:main.c        ****  * http://www.FreeRTOS.org
  23:main.c        ****  * http://aws.amazon.com/freertos
  24:main.c        ****  *
  25:main.c        ****  * 1 tab == 4 spaces!
  26:main.c        ****  */
  27:main.c        **** 
  28:main.c        **** /* This is the master file !!!!!!  */
  29:main.c        **** 
  30:main.c        **** 
  31:main.c        **** 
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccD7tdgc.s 			page 3


  32:main.c        **** 
  33:main.c        **** /* Standard includes */
  34:main.c        **** #include <device.h>
  35:main.c        **** #include <stdio.h>
  36:main.c        **** #include <stdint.h>
  37:main.c        **** #include <stdio.h>
  38:main.c        **** #include <stdint.h>
  39:main.c        **** #include <stdlib.h>
  40:main.c        **** #include <string.h>
  41:main.c        ****  
  42:main.c        **** 
  43:main.c        **** /* FreeRTOS includes */
  44:main.c        **** #include "FreeRTOS.h"
  45:main.c        **** #include "task.h"
  46:main.c        **** #include "semphr.h"
  47:main.c        **** #include "serial.h"
  48:main.c        **** 
  49:main.c        **** /* My headers */
  50:main.c        **** #include "movement.h"
  51:main.c        **** 
  52:main.c        **** /* The time between cycles of the 'check' functionality (defined within the
  53:main.c        **** tick hook. */
  54:main.c        **** #define mainCHECK_DELAY						( ( TickType_t ) 5000 / portTICK_PERIOD_MS )
  55:main.c        **** #define mainCOM_LED							( 3 )
  56:main.c        **** 
  57:main.c        **** /* The number of nano seconds between each processor clock. */
  58:main.c        **** #define mainNS_PER_CLOCK ( ( unsigned long ) ( ( 1.0 / ( double ) configCPU_CLOCK_HZ ) * 1000000000
  59:main.c        **** 
  60:main.c        **** /* Task priorities. */
  61:main.c        **** #define mainSENDER_PRIORITY       			( tskIDLE_PRIORITY )
  62:main.c        **** #define mainRECEIVER_PRIORITY        		( tskIDLE_PRIORITY )
  63:main.c        **** 
  64:main.c        **** #define comRX_BLOCK_TIME			( ( TickType_t ) 0xffff )
  65:main.c        **** 
  66:main.c        **** 
  67:main.c        **** void PID_initialise( void *p );
  68:main.c        **** void receive_data( void *p );
  69:main.c        **** void DMA_config();
  70:main.c        **** static void prvHardwareSetup( void );
  71:main.c        **** 
  72:main.c        **** 
  73:main.c        **** static xComPortHandle pxPort = NULL;
  74:main.c        **** xSemaphoreHandle gatekeeper = 0;
  75:main.c        **** xQueueHandle queue_handle = NULL;
  76:main.c        **** 
  77:main.c        **** 
  78:main.c        **** /* global variables */
  79:main.c        **** signed char rx_receive;
  80:main.c        **** unsigned char buffer[64];
  81:main.c        **** 
  82:main.c        **** 
  83:main.c        **** wheel_data left_wheel;
  84:main.c        **** wheel_data right_wheel;
  85:main.c        **** PID_data k;
  86:main.c        **** 
  87:main.c        **** int isMaster = 0;           // use 1 if it is the master, 0 if it is the slave.
  88:main.c        **** 
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccD7tdgc.s 			page 4


  89:main.c        **** 
  90:main.c        **** // START OF FUNCTIONS
  91:main.c        **** int main( void ) {
  68              		.loc 1 91 0
  69              		.cfi_startproc
  70              		@ args = 0, pretend = 0, frame = 256
  71              		@ frame_needed = 1, uses_anonymous_args = 0
  72 0000 B0B5     		push	{r4, r5, r7, lr}
  73              		.cfi_def_cfa_offset 16
  74              		.cfi_offset 4, -16
  75              		.cfi_offset 5, -12
  76              		.cfi_offset 7, -8
  77              		.cfi_offset 14, -4
  78 0002 C2B0     		sub	sp, sp, #264
  79              		.cfi_def_cfa_offset 280
  80 0004 02AF     		add	r7, sp, #8
  81              		.cfi_def_cfa 7, 272
  92:main.c        **** 	const signed char * run[64];
  93:main.c        ****     if (isMaster){
  94:main.c        ****     /* This is the for loop for the master system */
  95:main.c        ****         
  96:main.c        ****         
  97:main.c        ****         
  98:main.c        ****     }
  99:main.c        ****     if (~isMaster){
 100:main.c        ****     /* This is the for loop for the slave system */
 101:main.c        ****       }  
 102:main.c        ****     prvHardwareSetup(); 
  82              		.loc 1 102 0
  83 0006 FFF7FEFF 		bl	prvHardwareSetup
 103:main.c        ****     
 104:main.c        ****     sprintf((char *) run, "\n=== Master ===\n\n");
  84              		.loc 1 104 0
  85 000a 3B46     		mov	r3, r7
  86 000c 1F4A     		ldr	r2, .L3
  87 000e 1C46     		mov	r4, r3
  88 0010 1546     		mov	r5, r2
  89 0012 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
  90 0014 0FC4     		stmia	r4!, {r0, r1, r2, r3}
  91 0016 2B68     		ldr	r3, [r5]
  92 0018 2380     		strh	r3, [r4]	@ movhi
 105:main.c        ****     vSerialPutString(pxPort, (const signed char *) run, 64);
  93              		.loc 1 105 0
  94 001a 1D4B     		ldr	r3, .L3+4
  95 001c 1B68     		ldr	r3, [r3]
  96 001e 3946     		mov	r1, r7
  97 0020 4022     		movs	r2, #64
  98 0022 1846     		mov	r0, r3
  99 0024 FFF7FEFF 		bl	vSerialPutString
 106:main.c        ****     
 107:main.c        ****     sprintf((char *) run, "\n=== NEW RUN ===\n\n");
 100              		.loc 1 107 0
 101 0028 3B46     		mov	r3, r7
 102 002a 1A4A     		ldr	r2, .L3+8
 103 002c 1C46     		mov	r4, r3
 104 002e 1546     		mov	r5, r2
 105 0030 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccD7tdgc.s 			page 5


 106 0032 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 107 0034 2B68     		ldr	r3, [r5]
 108 0036 1A46     		mov	r2, r3	@ movhi
 109 0038 2280     		strh	r2, [r4]	@ movhi
 110 003a 0234     		adds	r4, r4, #2
 111 003c 1B0C     		lsrs	r3, r3, #16
 112 003e 2370     		strb	r3, [r4]
 108:main.c        ****     vSerialPutString(pxPort, (const signed char *) run, 64);
 113              		.loc 1 108 0
 114 0040 134B     		ldr	r3, .L3+4
 115 0042 1B68     		ldr	r3, [r3]
 116 0044 3946     		mov	r1, r7
 117 0046 4022     		movs	r2, #64
 118 0048 1846     		mov	r0, r3
 119 004a FFF7FEFF 		bl	vSerialPutString
 109:main.c        ****     
 110:main.c        ****     gatekeeper = xSemaphoreCreateMutex();
 120              		.loc 1 110 0
 121 004e 0120     		movs	r0, #1
 122 0050 FFF7FEFF 		bl	xQueueCreateMutex
 123 0054 0246     		mov	r2, r0
 124 0056 104B     		ldr	r3, .L3+12
 125 0058 1A60     		str	r2, [r3]
 111:main.c        ****     
 112:main.c        ****     xTaskCreate( PID_initialise, (const char*) "initialise the PID", 1024, NULL, 2, NULL );
 126              		.loc 1 112 0
 127 005a 0023     		movs	r3, #0
 128 005c 0193     		str	r3, [sp, #4]
 129 005e 0223     		movs	r3, #2
 130 0060 0093     		str	r3, [sp]
 131 0062 0023     		movs	r3, #0
 132 0064 4FF48062 		mov	r2, #1024
 133 0068 0C49     		ldr	r1, .L3+16
 134 006a 0D48     		ldr	r0, .L3+20
 135 006c FFF7FEFF 		bl	xTaskCreate
 113:main.c        ****     xTaskCreate( receive_data, (const char*) "waiting for a serial bus to come in", 1024, NULL, 1, 
 136              		.loc 1 113 0
 137 0070 0023     		movs	r3, #0
 138 0072 0193     		str	r3, [sp, #4]
 139 0074 0123     		movs	r3, #1
 140 0076 0093     		str	r3, [sp]
 141 0078 0023     		movs	r3, #0
 142 007a 4FF48062 		mov	r2, #1024
 143 007e 0949     		ldr	r1, .L3+24
 144 0080 0948     		ldr	r0, .L3+28
 145 0082 FFF7FEFF 		bl	xTaskCreate
 114:main.c        ****     
 115:main.c        **** 	vTaskStartScheduler();
 146              		.loc 1 115 0
 147 0086 FFF7FEFF 		bl	vTaskStartScheduler
 148              	.L2:
 116:main.c        **** 
 117:main.c        **** 	for( ;; );  // You won't actually reach this for loop.
 149              		.loc 1 117 0 discriminator 1
 150 008a FEE7     		b	.L2
 151              	.L4:
 152              		.align	2
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccD7tdgc.s 			page 6


 153              	.L3:
 154 008c 00000000 		.word	.LC0
 155 0090 00000000 		.word	pxPort
 156 0094 14000000 		.word	.LC1
 157 0098 00000000 		.word	gatekeeper
 158 009c 28000000 		.word	.LC2
 159 00a0 00000000 		.word	PID_initialise
 160 00a4 3C000000 		.word	.LC3
 161 00a8 00000000 		.word	receive_data
 162              		.cfi_endproc
 163              	.LFE69:
 164              		.size	main, .-main
 165              		.section	.rodata
 166              		.align	2
 167              	.LC4:
 168 0060 62756666 		.ascii	"buffer read as %s\012\000"
 168      65722072 
 168      65616420 
 168      61732025 
 168      730A00
 169 0073 00       		.align	2
 170              	.LC5:
 171 0074 6C656674 		.ascii	"left inc: %i\012right inc: %i\012\000"
 171      20696E63 
 171      3A202569 
 171      0A726967 
 171      68742069 
 172              		.align	2
 173              	.LC6:
 174 0090 4B702056 		.ascii	"Kp Value: %f\000"
 174      616C7565 
 174      3A202566 
 174      00
 175 009d 000000   		.align	2
 176              	.LC7:
 177 00a0 56455254 		.ascii	"VERTICAL \012\000"
 177      4943414C 
 177      200A00
 178 00ab 00       		.align	2
 179              	.LC8:
 180 00ac 484F5249 		.ascii	"HORIZONTAL \012\000"
 180      5A4F4E54 
 180      414C200A 
 180      00
 181              		.section	.text.receive_data,"ax",%progbits
 182              		.align	2
 183              		.global	receive_data
 184              		.thumb
 185              		.thumb_func
 186              		.type	receive_data, %function
 187              	receive_data:
 188              	.LFB70:
 118:main.c        **** }
 119:main.c        **** 
 120:main.c        **** void receive_data( void *p ) {
 189              		.loc 1 120 0
 190              		.cfi_startproc
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccD7tdgc.s 			page 7


 191              		@ args = 0, pretend = 0, frame = 288
 192              		@ frame_needed = 1, uses_anonymous_args = 0
 193 0000 90B5     		push	{r4, r7, lr}
 194              		.cfi_def_cfa_offset 12
 195              		.cfi_offset 4, -12
 196              		.cfi_offset 7, -8
 197              		.cfi_offset 14, -4
 198 0002 CBB0     		sub	sp, sp, #300
 199              		.cfi_def_cfa_offset 312
 200 0004 02AF     		add	r7, sp, #8
 201              		.cfi_def_cfa 7, 304
 202 0006 3B1D     		adds	r3, r7, #4
 203 0008 1860     		str	r0, [r3]
 121:main.c        ****     
 122:main.c        ****     p = NULL;
 204              		.loc 1 122 0
 205 000a 3B1D     		adds	r3, r7, #4
 206 000c 0022     		movs	r2, #0
 207 000e 1A60     		str	r2, [r3]
 123:main.c        ****     
 124:main.c        ****     const signed char * local_write[64];
 125:main.c        ****     int i = 0;
 208              		.loc 1 125 0
 209 0010 0023     		movs	r3, #0
 210 0012 C7F81C31 		str	r3, [r7, #284]
 126:main.c        ****     int go = 0;
 211              		.loc 1 126 0
 212 0016 0023     		movs	r3, #0
 213 0018 C7F81831 		str	r3, [r7, #280]
 127:main.c        ****     signed char type = 0;
 214              		.loc 1 127 0
 215 001c 0023     		movs	r3, #0
 216 001e 87F81731 		strb	r3, [r7, #279]
 217              	.L18:
 128:main.c        ****     char temp[10];
 129:main.c        ****     while(1) {
 130:main.c        ****         if (pdTRUE == xSerialGetChar(pxPort, &rx_receive, comRX_BLOCK_TIME)) {
 218              		.loc 1 130 0
 219 0022 8B4B     		ldr	r3, .L19
 220 0024 1B68     		ldr	r3, [r3]
 221 0026 4FF6FF72 		movw	r2, #65535
 222 002a 8A49     		ldr	r1, .L19+4
 223 002c 1846     		mov	r0, r3
 224 002e FFF7FEFF 		bl	xSerialGetChar
 225 0032 0346     		mov	r3, r0
 226 0034 012B     		cmp	r3, #1
 227 0036 F4D1     		bne	.L18
 131:main.c        ****             type = rx_receive;
 228              		.loc 1 131 0
 229 0038 864B     		ldr	r3, .L19+4
 230 003a 1B78     		ldrb	r3, [r3]
 231 003c 87F81731 		strb	r3, [r7, #279]
 132:main.c        ****             if(xSemaphoreTake(gatekeeper, 50000)) {
 232              		.loc 1 132 0
 233 0040 854B     		ldr	r3, .L19+8
 234 0042 1B68     		ldr	r3, [r3]
 235 0044 4CF25031 		movw	r1, #50000
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccD7tdgc.s 			page 8


 236 0048 1846     		mov	r0, r3
 237 004a FFF7FEFF 		bl	xQueueSemaphoreTake
 238 004e 0346     		mov	r3, r0
 239 0050 002B     		cmp	r3, #0
 240 0052 E6D0     		beq	.L18
 133:main.c        ****                 if(type=='1'){//
 241              		.loc 1 133 0
 242 0054 97F91731 		ldrsb	r3, [r7, #279]
 243 0058 312B     		cmp	r3, #49
 244 005a 43D1     		bne	.L7
 134:main.c        ****                     for(i=0;i<8;i++){
 245              		.loc 1 134 0
 246 005c 0023     		movs	r3, #0
 247 005e C7F81C31 		str	r3, [r7, #284]
 248 0062 16E0     		b	.L8
 249              	.L9:
 135:main.c        ****                         xSerialGetChar(pxPort, &rx_receive, comRX_BLOCK_TIME);
 250              		.loc 1 135 0 discriminator 3
 251 0064 7A4B     		ldr	r3, .L19
 252 0066 1B68     		ldr	r3, [r3]
 253 0068 4FF6FF72 		movw	r2, #65535
 254 006c 7949     		ldr	r1, .L19+4
 255 006e 1846     		mov	r0, r3
 256 0070 FFF7FEFF 		bl	xSerialGetChar
 136:main.c        ****                         buffer[i] = rx_receive;
 257              		.loc 1 136 0 discriminator 3
 258 0074 774B     		ldr	r3, .L19+4
 259 0076 93F90030 		ldrsb	r3, [r3]
 260 007a D9B2     		uxtb	r1, r3
 261 007c 774A     		ldr	r2, .L19+12
 262 007e D7F81C31 		ldr	r3, [r7, #284]
 263 0082 1344     		add	r3, r3, r2
 264 0084 0A46     		mov	r2, r1
 265 0086 1A70     		strb	r2, [r3]
 134:main.c        ****                     for(i=0;i<8;i++){
 266              		.loc 1 134 0 discriminator 3
 267 0088 D7F81C31 		ldr	r3, [r7, #284]
 268 008c 0133     		adds	r3, r3, #1
 269 008e C7F81C31 		str	r3, [r7, #284]
 270              	.L8:
 134:main.c        ****                     for(i=0;i<8;i++){
 271              		.loc 1 134 0 is_stmt 0 discriminator 1
 272 0092 D7F81C31 		ldr	r3, [r7, #284]
 273 0096 072B     		cmp	r3, #7
 274 0098 E4DD     		ble	.L9
 137:main.c        ****                     }
 138:main.c        ****                     sprintf((char *) local_write, "buffer read as %s\n", buffer);
 275              		.loc 1 138 0 is_stmt 1
 276 009a 07F11403 		add	r3, r7, #20
 277 009e 6F4A     		ldr	r2, .L19+12
 278 00a0 6F49     		ldr	r1, .L19+16
 279 00a2 1846     		mov	r0, r3
 280 00a4 FFF7FEFF 		bl	sprintf
 139:main.c        ****                     vSerialPutString(pxPort, (const signed char *) local_write, 64);
 281              		.loc 1 139 0
 282 00a8 694B     		ldr	r3, .L19
 283 00aa 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccD7tdgc.s 			page 9


 284 00ac 07F11401 		add	r1, r7, #20
 285 00b0 4022     		movs	r2, #64
 286 00b2 1846     		mov	r0, r3
 287 00b4 FFF7FEFF 		bl	vSerialPutString
 140:main.c        ****                     update_inc( &left_wheel, &right_wheel, buffer);
 288              		.loc 1 140 0
 289 00b8 684A     		ldr	r2, .L19+12
 290 00ba 6A49     		ldr	r1, .L19+20
 291 00bc 6A48     		ldr	r0, .L19+24
 292 00be FFF7FEFF 		bl	update_inc
 141:main.c        ****                     sprintf((char *) local_write, "left inc: %i\nright inc: %i\n", left_wheel.inc, 
 293              		.loc 1 141 0
 294 00c2 694B     		ldr	r3, .L19+24
 295 00c4 9A69     		ldr	r2, [r3, #24]
 296 00c6 674B     		ldr	r3, .L19+20
 297 00c8 9B69     		ldr	r3, [r3, #24]
 298 00ca 07F11400 		add	r0, r7, #20
 299 00ce 6749     		ldr	r1, .L19+28
 300 00d0 FFF7FEFF 		bl	sprintf
 142:main.c        ****                     vSerialPutString(pxPort, (const signed char *) local_write, 64);
 301              		.loc 1 142 0
 302 00d4 5E4B     		ldr	r3, .L19
 303 00d6 1B68     		ldr	r3, [r3]
 304 00d8 07F11401 		add	r1, r7, #20
 305 00dc 4022     		movs	r2, #64
 306 00de 1846     		mov	r0, r3
 307 00e0 FFF7FEFF 		bl	vSerialPutString
 308              	.L7:
 143:main.c        ****                 }
 144:main.c        ****                 if(type=='2'){
 309              		.loc 1 144 0
 310 00e4 97F91731 		ldrsb	r3, [r7, #279]
 311 00e8 322B     		cmp	r3, #50
 312 00ea 01D1     		bne	.L10
 145:main.c        ****                     CySoftwareReset();
 313              		.loc 1 145 0
 314 00ec FFF7FEFF 		bl	CySoftwareReset
 315              	.L10:
 146:main.c        ****                 }  
 147:main.c        ****                 if (type=='3'){
 316              		.loc 1 147 0
 317 00f0 97F91731 		ldrsb	r3, [r7, #279]
 318 00f4 332B     		cmp	r3, #51
 319 00f6 46D1     		bne	.L11
 148:main.c        ****                     for(i=0;i<8;i++){
 320              		.loc 1 148 0
 321 00f8 0023     		movs	r3, #0
 322 00fa C7F81C31 		str	r3, [r7, #284]
 323 00fe 16E0     		b	.L12
 324              	.L13:
 149:main.c        ****                         xSerialGetChar(pxPort, &rx_receive, comRX_BLOCK_TIME);
 325              		.loc 1 149 0 discriminator 3
 326 0100 534B     		ldr	r3, .L19
 327 0102 1B68     		ldr	r3, [r3]
 328 0104 4FF6FF72 		movw	r2, #65535
 329 0108 5249     		ldr	r1, .L19+4
 330 010a 1846     		mov	r0, r3
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccD7tdgc.s 			page 10


 331 010c FFF7FEFF 		bl	xSerialGetChar
 150:main.c        ****                         buffer[i] = rx_receive;
 332              		.loc 1 150 0 discriminator 3
 333 0110 504B     		ldr	r3, .L19+4
 334 0112 93F90030 		ldrsb	r3, [r3]
 335 0116 D9B2     		uxtb	r1, r3
 336 0118 504A     		ldr	r2, .L19+12
 337 011a D7F81C31 		ldr	r3, [r7, #284]
 338 011e 1344     		add	r3, r3, r2
 339 0120 0A46     		mov	r2, r1
 340 0122 1A70     		strb	r2, [r3]
 148:main.c        ****                     for(i=0;i<8;i++){
 341              		.loc 1 148 0 discriminator 3
 342 0124 D7F81C31 		ldr	r3, [r7, #284]
 343 0128 0133     		adds	r3, r3, #1
 344 012a C7F81C31 		str	r3, [r7, #284]
 345              	.L12:
 148:main.c        ****                     for(i=0;i<8;i++){
 346              		.loc 1 148 0 is_stmt 0 discriminator 1
 347 012e D7F81C31 		ldr	r3, [r7, #284]
 348 0132 072B     		cmp	r3, #7
 349 0134 E4DD     		ble	.L13
 151:main.c        ****                     }
 152:main.c        ****                     sprintf((char *) local_write, "buffer read as %s\n", buffer);
 350              		.loc 1 152 0 is_stmt 1
 351 0136 07F11403 		add	r3, r7, #20
 352 013a 484A     		ldr	r2, .L19+12
 353 013c 4849     		ldr	r1, .L19+16
 354 013e 1846     		mov	r0, r3
 355 0140 FFF7FEFF 		bl	sprintf
 153:main.c        ****                     vSerialPutString(pxPort, (const signed char *) local_write, 64);
 356              		.loc 1 153 0
 357 0144 424B     		ldr	r3, .L19
 358 0146 1B68     		ldr	r3, [r3]
 359 0148 07F11401 		add	r1, r7, #20
 360 014c 4022     		movs	r2, #64
 361 014e 1846     		mov	r0, r3
 362 0150 FFF7FEFF 		bl	vSerialPutString
 154:main.c        ****                     update_k( &k, buffer);
 363              		.loc 1 154 0
 364 0154 4149     		ldr	r1, .L19+12
 365 0156 4648     		ldr	r0, .L19+32
 366 0158 FFF7FEFF 		bl	update_k
 155:main.c        ****                     snprintf((char *) local_write,64, "Kp Value: %f", k.Kp);
 367              		.loc 1 155 0
 368 015c 444B     		ldr	r3, .L19+32
 369 015e 03F10804 		add	r4, r3, #8
 370 0162 D4E90034 		ldrd	r3, [r4]
 371 0166 07F11400 		add	r0, r7, #20
 372 016a CDE90034 		strd	r3, [sp]
 373 016e 414A     		ldr	r2, .L19+36
 374 0170 4021     		movs	r1, #64
 375 0172 FFF7FEFF 		bl	snprintf
 156:main.c        ****                     
 157:main.c        ****                     vSerialPutString(pxPort, (const signed char *) local_write, 64);
 376              		.loc 1 157 0
 377 0176 364B     		ldr	r3, .L19
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccD7tdgc.s 			page 11


 378 0178 1B68     		ldr	r3, [r3]
 379 017a 07F11401 		add	r1, r7, #20
 380 017e 4022     		movs	r2, #64
 381 0180 1846     		mov	r0, r3
 382 0182 FFF7FEFF 		bl	vSerialPutString
 383              	.L11:
 158:main.c        ****                     
 159:main.c        ****                 }
 160:main.c        ****                 if (type=='4'){
 384              		.loc 1 160 0
 385 0186 97F91731 		ldrsb	r3, [r7, #279]
 386 018a 342B     		cmp	r3, #52
 387 018c 1CD1     		bne	.L14
 161:main.c        ****                     sprintf((char *) local_write, "VERTICAL \n");
 388              		.loc 1 161 0
 389 018e 07F11403 		add	r3, r7, #20
 390 0192 394A     		ldr	r2, .L19+40
 391 0194 07CA     		ldmia	r2, {r0, r1, r2}
 392 0196 03C3     		stmia	r3!, {r0, r1}
 393 0198 1A80     		strh	r2, [r3]	@ movhi
 394 019a 0233     		adds	r3, r3, #2
 395 019c 120C     		lsrs	r2, r2, #16
 396 019e 1A70     		strb	r2, [r3]
 162:main.c        ****                     vSerialPutString(pxPort, (const signed char *) local_write, 64);
 397              		.loc 1 162 0
 398 01a0 2B4B     		ldr	r3, .L19
 399 01a2 1B68     		ldr	r3, [r3]
 400 01a4 07F11401 		add	r1, r7, #20
 401 01a8 4022     		movs	r2, #64
 402 01aa 1846     		mov	r0, r3
 403 01ac FFF7FEFF 		bl	vSerialPutString
 163:main.c        ****                     PWM_1_Wakeup();                 
 404              		.loc 1 163 0
 405 01b0 FFF7FEFF 		bl	PWM_1_Wakeup
 164:main.c        ****                     PWM_1_WriteCompare(1200);//90 deg Camera;
 406              		.loc 1 164 0
 407 01b4 4FF49660 		mov	r0, #1200
 408 01b8 FFF7FEFF 		bl	PWM_1_WriteCompare
 165:main.c        ****                     CyDelay(1000);
 409              		.loc 1 165 0
 410 01bc 4FF47A70 		mov	r0, #1000
 411 01c0 FFF7FEFF 		bl	CyDelay
 166:main.c        ****                     PWM_1_Sleep();
 412              		.loc 1 166 0
 413 01c4 FFF7FEFF 		bl	PWM_1_Sleep
 414              	.L14:
 167:main.c        ****                     
 168:main.c        ****                 }
 169:main.c        ****                 if (type=='5'){
 415              		.loc 1 169 0
 416 01c8 97F91731 		ldrsb	r3, [r7, #279]
 417 01cc 352B     		cmp	r3, #53
 418 01ce 1BD1     		bne	.L15
 170:main.c        ****                     sprintf((char *) local_write, "HORIZONTAL \n");
 419              		.loc 1 170 0
 420 01d0 07F11403 		add	r3, r7, #20
 421 01d4 294A     		ldr	r2, .L19+44
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccD7tdgc.s 			page 12


 422 01d6 1C46     		mov	r4, r3
 423 01d8 1346     		mov	r3, r2
 424 01da 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 425 01dc 07C4     		stmia	r4!, {r0, r1, r2}
 426 01de 2370     		strb	r3, [r4]
 171:main.c        ****                     vSerialPutString(pxPort, (const signed char *) local_write, 64);
 427              		.loc 1 171 0
 428 01e0 1B4B     		ldr	r3, .L19
 429 01e2 1B68     		ldr	r3, [r3]
 430 01e4 07F11401 		add	r1, r7, #20
 431 01e8 4022     		movs	r2, #64
 432 01ea 1846     		mov	r0, r3
 433 01ec FFF7FEFF 		bl	vSerialPutString
 172:main.c        ****                     PWM_1_Wakeup();
 434              		.loc 1 172 0
 435 01f0 FFF7FEFF 		bl	PWM_1_Wakeup
 173:main.c        ****                     PWM_1_WriteCompare(2100);//0 deg;
 436              		.loc 1 173 0
 437 01f4 40F63400 		movw	r0, #2100
 438 01f8 FFF7FEFF 		bl	PWM_1_WriteCompare
 174:main.c        ****                     CyDelay(1000);
 439              		.loc 1 174 0
 440 01fc 4FF47A70 		mov	r0, #1000
 441 0200 FFF7FEFF 		bl	CyDelay
 175:main.c        ****                     PWM_1_Sleep();
 442              		.loc 1 175 0
 443 0204 FFF7FEFF 		bl	PWM_1_Sleep
 444              	.L15:
 176:main.c        ****                     
 177:main.c        ****                 }
 178:main.c        ****                 for (i=0; i<65; i++) {
 445              		.loc 1 178 0
 446 0208 0023     		movs	r3, #0
 447 020a C7F81C31 		str	r3, [r7, #284]
 448 020e 0AE0     		b	.L16
 449              	.L17:
 179:main.c        ****                     buffer[i] = ' ';
 450              		.loc 1 179 0 discriminator 3
 451 0210 124A     		ldr	r2, .L19+12
 452 0212 D7F81C31 		ldr	r3, [r7, #284]
 453 0216 1344     		add	r3, r3, r2
 454 0218 2022     		movs	r2, #32
 455 021a 1A70     		strb	r2, [r3]
 178:main.c        ****                     buffer[i] = ' ';
 456              		.loc 1 178 0 discriminator 3
 457 021c D7F81C31 		ldr	r3, [r7, #284]
 458 0220 0133     		adds	r3, r3, #1
 459 0222 C7F81C31 		str	r3, [r7, #284]
 460              	.L16:
 178:main.c        ****                     buffer[i] = ' ';
 461              		.loc 1 178 0 is_stmt 0 discriminator 1
 462 0226 D7F81C31 		ldr	r3, [r7, #284]
 463 022a 402B     		cmp	r3, #64
 464 022c F0DD     		ble	.L17
 180:main.c        ****                 }
 181:main.c        ****                 go = 0;
 465              		.loc 1 181 0 is_stmt 1
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccD7tdgc.s 			page 13


 466 022e 0023     		movs	r3, #0
 467 0230 C7F81831 		str	r3, [r7, #280]
 182:main.c        ****                 i = 0;
 468              		.loc 1 182 0
 469 0234 0023     		movs	r3, #0
 470 0236 C7F81C31 		str	r3, [r7, #284]
 183:main.c        ****                 type=0;                   
 471              		.loc 1 183 0
 472 023a 0023     		movs	r3, #0
 473 023c 87F81731 		strb	r3, [r7, #279]
 184:main.c        ****                 xSemaphoreGive(gatekeeper);
 474              		.loc 1 184 0
 475 0240 054B     		ldr	r3, .L19+8
 476 0242 1868     		ldr	r0, [r3]
 477 0244 0023     		movs	r3, #0
 478 0246 0022     		movs	r2, #0
 479 0248 0021     		movs	r1, #0
 480 024a FFF7FEFF 		bl	xQueueGenericSend
 185:main.c        ****             }
 186:main.c        ****         }
 187:main.c        ****     }
 481              		.loc 1 187 0
 482 024e E8E6     		b	.L18
 483              	.L20:
 484              		.align	2
 485              	.L19:
 486 0250 00000000 		.word	pxPort
 487 0254 00000000 		.word	rx_receive
 488 0258 00000000 		.word	gatekeeper
 489 025c 00000000 		.word	buffer
 490 0260 60000000 		.word	.LC4
 491 0264 00000000 		.word	right_wheel
 492 0268 00000000 		.word	left_wheel
 493 026c 74000000 		.word	.LC5
 494 0270 00000000 		.word	k
 495 0274 90000000 		.word	.LC6
 496 0278 A0000000 		.word	.LC7
 497 027c AC000000 		.word	.LC8
 498              		.cfi_endproc
 499              	.LFE70:
 500              		.size	receive_data, .-receive_data
 501              		.section	.rodata
 502 00b9 000000   		.align	2
 503              	.LC9:
 504 00bc 6C656674 		.ascii	"left wheel inc: %li\012\000"
 504      20776865 
 504      656C2069 
 504      6E633A20 
 504      256C690A 
 505              		.section	.text.PID_initialise,"ax",%progbits
 506              		.align	2
 507              		.global	PID_initialise
 508              		.thumb
 509              		.thumb_func
 510              		.type	PID_initialise, %function
 511              	PID_initialise:
 512              	.LFB71:
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccD7tdgc.s 			page 14


 188:main.c        **** }
 189:main.c        **** 
 190:main.c        **** void PID_initialise( void *p ) {
 513              		.loc 1 190 0
 514              		.cfi_startproc
 515              		@ args = 0, pretend = 0, frame = 264
 516              		@ frame_needed = 1, uses_anonymous_args = 0
 517 0000 90B5     		push	{r4, r7, lr}
 518              		.cfi_def_cfa_offset 12
 519              		.cfi_offset 4, -12
 520              		.cfi_offset 7, -8
 521              		.cfi_offset 14, -4
 522 0002 C3B0     		sub	sp, sp, #268
 523              		.cfi_def_cfa_offset 280
 524 0004 00AF     		add	r7, sp, #0
 525              		.cfi_def_cfa_register 7
 526 0006 3B1D     		adds	r3, r7, #4
 527 0008 1860     		str	r0, [r3]
 191:main.c        ****     
 192:main.c        ****     p = NULL;
 528              		.loc 1 192 0
 529 000a 3B1D     		adds	r3, r7, #4
 530 000c 0022     		movs	r2, #0
 531 000e 1A60     		str	r2, [r3]
 193:main.c        ****         
 194:main.c        ****     initialise_wheel_data(&left_wheel);
 532              		.loc 1 194 0
 533 0010 2148     		ldr	r0, .L24
 534 0012 FFF7FEFF 		bl	initialise_wheel_data
 195:main.c        ****     initialise_wheel_data(&right_wheel);
 535              		.loc 1 195 0
 536 0016 2148     		ldr	r0, .L24+4
 537 0018 FFF7FEFF 		bl	initialise_wheel_data
 196:main.c        ****     
 197:main.c        ****     k.Kp = 40;
 538              		.loc 1 197 0
 539 001c 204A     		ldr	r2, .L24+8
 540 001e 4FF00003 		mov	r3, #0
 541 0022 204C     		ldr	r4, .L24+12
 542 0024 C2E90234 		strd	r3, [r2, #8]
 198:main.c        ****     k.Ki = 0;
 543              		.loc 1 198 0
 544 0028 1D4A     		ldr	r2, .L24+8
 545 002a 4FF00003 		mov	r3, #0
 546 002e 4FF00004 		mov	r4, #0
 547 0032 C2E90034 		strd	r3, [r2]
 199:main.c        ****     k.Kd = 20;
 548              		.loc 1 199 0
 549 0036 1A4A     		ldr	r2, .L24+8
 550 0038 4FF00003 		mov	r3, #0
 551 003c 1A4C     		ldr	r4, .L24+16
 552 003e C2E90434 		strd	r3, [r2, #16]
 553              	.L23:
 200:main.c        ****     
 201:main.c        ****     signed char *local_write[64];  
 202:main.c        ****     
 203:main.c        ****     while(1) {
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccD7tdgc.s 			page 15


 204:main.c        ****     	if(xSemaphoreTake(gatekeeper, 50000)) {              // wait until semaphore is free:
 554              		.loc 1 204 0
 555 0042 1A4B     		ldr	r3, .L24+20
 556 0044 1B68     		ldr	r3, [r3]
 557 0046 4CF25031 		movw	r1, #50000
 558 004a 1846     		mov	r0, r3
 559 004c FFF7FEFF 		bl	xQueueSemaphoreTake
 560 0050 0346     		mov	r3, r0
 561 0052 002B     		cmp	r3, #0
 562 0054 1BD0     		beq	.L22
 205:main.c        ****             mov_update_error(&left_wheel, &right_wheel);    // update error values
 563              		.loc 1 205 0
 564 0056 1149     		ldr	r1, .L24+4
 565 0058 0F48     		ldr	r0, .L24
 566 005a FFF7FEFF 		bl	mov_update_error
 206:main.c        ****                 sprintf((char *) local_write, "left wheel inc: %li\n", left_wheel.cur_dest);
 567              		.loc 1 206 0
 568 005e 0E4B     		ldr	r3, .L24
 569 0060 5A68     		ldr	r2, [r3, #4]
 570 0062 07F10803 		add	r3, r7, #8
 571 0066 1249     		ldr	r1, .L24+24
 572 0068 1846     		mov	r0, r3
 573 006a FFF7FEFF 		bl	sprintf
 207:main.c        ****                 //vSerialPutString(pxPort, (signed char *) local_write, 64);
 208:main.c        ****             mov_get_PID(&left_wheel, &right_wheel, &k);     // calculate wheel voltage from errors 
 574              		.loc 1 208 0
 575 006e 0C4A     		ldr	r2, .L24+8
 576 0070 0A49     		ldr	r1, .L24+4
 577 0072 0948     		ldr	r0, .L24
 578 0074 FFF7FEFF 		bl	mov_get_PID
 209:main.c        ****             
 210:main.c        ****             mov_Adj_Volt(&left_wheel, &right_wheel);        // adjust the voltage of the wheels
 579              		.loc 1 210 0
 580 0078 0849     		ldr	r1, .L24+4
 581 007a 0748     		ldr	r0, .L24
 582 007c FFF7FEFF 		bl	mov_Adj_Volt
 211:main.c        **** 			xSemaphoreGive(gatekeeper);                     // give the semaphore back
 583              		.loc 1 211 0
 584 0080 0A4B     		ldr	r3, .L24+20
 585 0082 1868     		ldr	r0, [r3]
 586 0084 0023     		movs	r3, #0
 587 0086 0022     		movs	r2, #0
 588 0088 0021     		movs	r1, #0
 589 008a FFF7FEFF 		bl	xQueueGenericSend
 590              	.L22:
 212:main.c        ****     	}
 213:main.c        ****         vTaskDelay(10);                                     // wait 10ms before going again
 591              		.loc 1 213 0
 592 008e 0A20     		movs	r0, #10
 593 0090 FFF7FEFF 		bl	vTaskDelay
 214:main.c        ****     }
 594              		.loc 1 214 0
 595 0094 D5E7     		b	.L23
 596              	.L25:
 597 0096 00BF     		.align	2
 598              	.L24:
 599 0098 00000000 		.word	left_wheel
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccD7tdgc.s 			page 16


 600 009c 00000000 		.word	right_wheel
 601 00a0 00000000 		.word	k
 602 00a4 00004440 		.word	1078198272
 603 00a8 00003440 		.word	1077149696
 604 00ac 00000000 		.word	gatekeeper
 605 00b0 BC000000 		.word	.LC9
 606              		.cfi_endproc
 607              	.LFE71:
 608              		.size	PID_initialise, .-PID_initialise
 609              		.section	.text.prvHardwareSetup,"ax",%progbits
 610              		.align	2
 611              		.thumb
 612              		.thumb_func
 613              		.type	prvHardwareSetup, %function
 614              	prvHardwareSetup:
 615              	.LFB72:
 215:main.c        **** }
 216:main.c        **** 
 217:main.c        **** void prvHardwareSetup( void ) {
 616              		.loc 1 217 0
 617              		.cfi_startproc
 618              		@ args = 0, pretend = 0, frame = 0
 619              		@ frame_needed = 1, uses_anonymous_args = 0
 620 0000 80B5     		push	{r7, lr}
 621              		.cfi_def_cfa_offset 8
 622              		.cfi_offset 7, -8
 623              		.cfi_offset 14, -4
 624 0002 00AF     		add	r7, sp, #0
 625              		.cfi_def_cfa_register 7
 218:main.c        ****     
 219:main.c        ****     /* Port layer functions that need to be copied into the vector table. */
 220:main.c        ****     extern void xPortPendSVHandler( void );
 221:main.c        ****     extern void xPortSysTickHandler( void );
 222:main.c        ****     extern void vPortSVCHandler( void );
 223:main.c        ****     extern cyisraddress CyRamVectors[];
 224:main.c        **** 
 225:main.c        **** 	/* Install the OS Interrupt Handlers. */
 226:main.c        **** 	CyRamVectors[ 11 ] = ( cyisraddress ) vPortSVCHandler;
 626              		.loc 1 226 0
 627 0004 214B     		ldr	r3, .L30
 628 0006 224A     		ldr	r2, .L30+4
 629 0008 DA62     		str	r2, [r3, #44]
 227:main.c        **** 	CyRamVectors[ 14 ] = ( cyisraddress ) xPortPendSVHandler;
 630              		.loc 1 227 0
 631 000a 204B     		ldr	r3, .L30
 632 000c 214A     		ldr	r2, .L30+8
 633 000e 9A63     		str	r2, [r3, #56]
 228:main.c        **** 	CyRamVectors[ 15 ] = ( cyisraddress ) xPortSysTickHandler;
 634              		.loc 1 228 0
 635 0010 1E4B     		ldr	r3, .L30
 636 0012 214A     		ldr	r2, .L30+12
 637 0014 DA63     		str	r2, [r3, #60]
 229:main.c        **** 
 230:main.c        **** 	/* Start-up the shared peripherals. */
 231:main.c        ****     PWM_M1_Start();
 638              		.loc 1 231 0
 639 0016 FFF7FEFF 		bl	PWM_M1_Start
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccD7tdgc.s 			page 17


 232:main.c        ****     PWM_M2_Start();
 640              		.loc 1 232 0
 641 001a FFF7FEFF 		bl	PWM_M2_Start
 233:main.c        ****     M1Clock_Start();
 642              		.loc 1 233 0
 643 001e FFF7FEFF 		bl	M1Clock_Start
 234:main.c        ****     MClock_Start();
 644              		.loc 1 234 0
 645 0022 FFF7FEFF 		bl	MClock_Start
 235:main.c        ****     
 236:main.c        ****     M1QuadDec_Start();
 646              		.loc 1 236 0
 647 0026 FFF7FEFF 		bl	M1QuadDec_Start
 237:main.c        ****     M1QuadDec_Enable();
 648              		.loc 1 237 0
 649 002a FFF7FEFF 		bl	M1QuadDec_Enable
 238:main.c        ****     M1QuadDec_SetCounter(0);
 650              		.loc 1 238 0
 651 002e 0020     		movs	r0, #0
 652 0030 FFF7FEFF 		bl	M1QuadDec_SetCounter
 239:main.c        ****     
 240:main.c        ****     M2QuadDec_Start();
 653              		.loc 1 240 0
 654 0034 FFF7FEFF 		bl	M2QuadDec_Start
 241:main.c        ****     M2QuadDec_Enable();
 655              		.loc 1 241 0
 656 0038 FFF7FEFF 		bl	M2QuadDec_Enable
 242:main.c        ****     M2QuadDec_SetCounter(0);
 657              		.loc 1 242 0
 658 003c 0020     		movs	r0, #0
 659 003e FFF7FEFF 		bl	M2QuadDec_SetCounter
 243:main.c        **** 
 244:main.c        **** 	UART_1_Start();                         // Start the UART
 660              		.loc 1 244 0
 661 0042 FFF7FEFF 		bl	UART_1_Start
 245:main.c        ****     xSerialPortInitMinimal( 57600, 64 );    // Set the serial baud rate and buffer size in bytes
 662              		.loc 1 245 0
 663 0046 4021     		movs	r1, #64
 664 0048 4FF46140 		mov	r0, #57600
 665 004c FFF7FEFF 		bl	xSerialPortInitMinimal
 246:main.c        ****     
 247:main.c        ****     Timer_1_Start();
 666              		.loc 1 247 0
 667 0050 FFF7FEFF 		bl	Timer_1_Start
 248:main.c        **** 
 249:main.c        ****     /* Start up the master peripherals. */
 250:main.c        ****     if (isMaster){
 668              		.loc 1 250 0
 669 0054 114B     		ldr	r3, .L30+16
 670 0056 1B68     		ldr	r3, [r3]
 671 0058 002B     		cmp	r3, #0
 672 005a 02D0     		beq	.L27
 251:main.c        ****          Laser_Write(1);// turn on the laser
 673              		.loc 1 251 0
 674 005c 0120     		movs	r0, #1
 675 005e FFF7FEFF 		bl	Laser_Write
 676              	.L27:
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccD7tdgc.s 			page 18


 252:main.c        ****     }
 253:main.c        ****     
 254:main.c        ****     /* Start up the slave peripherals. */
 255:main.c        ****     if (~isMaster){
 677              		.loc 1 255 0
 678 0062 0E4B     		ldr	r3, .L30+16
 679 0064 1B68     		ldr	r3, [r3]
 680 0066 B3F1FF3F 		cmp	r3, #-1
 681 006a 0DD0     		beq	.L29
 256:main.c        ****         
 257:main.c        ****         Clock_1_Start();
 682              		.loc 1 257 0
 683 006c FFF7FEFF 		bl	Clock_1_Start
 258:main.c        ****         PWM_1_Start();
 684              		.loc 1 258 0
 685 0070 FFF7FEFF 		bl	PWM_1_Start
 259:main.c        ****         PWM_1_WriteCompare(2100);//90 deg Camera;
 686              		.loc 1 259 0
 687 0074 40F63400 		movw	r0, #2100
 688 0078 FFF7FEFF 		bl	PWM_1_WriteCompare
 260:main.c        ****         CyDelay(1000);
 689              		.loc 1 260 0
 690 007c 4FF47A70 		mov	r0, #1000
 691 0080 FFF7FEFF 		bl	CyDelay
 261:main.c        ****         PWM_1_Sleep();
 692              		.loc 1 261 0
 693 0084 FFF7FEFF 		bl	PWM_1_Sleep
 694              	.L29:
 262:main.c        ****         
 263:main.c        ****         
 264:main.c        ****         
 265:main.c        ****     }
 266:main.c        **** }
 695              		.loc 1 266 0
 696 0088 00BF     		nop
 697 008a 80BD     		pop	{r7, pc}
 698              	.L31:
 699              		.align	2
 700              	.L30:
 701 008c 00000000 		.word	CyRamVectors
 702 0090 00000000 		.word	vPortSVCHandler
 703 0094 00000000 		.word	xPortPendSVHandler
 704 0098 00000000 		.word	xPortSysTickHandler
 705 009c 00000000 		.word	isMaster
 706              		.cfi_endproc
 707              	.LFE72:
 708              		.size	prvHardwareSetup, .-prvHardwareSetup
 709              		.section	.text.vApplicationStackOverflowHook,"ax",%progbits
 710              		.align	2
 711              		.global	vApplicationStackOverflowHook
 712              		.thumb
 713              		.thumb_func
 714              		.type	vApplicationStackOverflowHook, %function
 715              	vApplicationStackOverflowHook:
 716              	.LFB73:
 267:main.c        **** 
 268:main.c        **** 
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccD7tdgc.s 			page 19


 269:main.c        **** // DON'T TOUCH THESE (PART OF FREERTOS)
 270:main.c        **** void vApplicationStackOverflowHook( TaskHandle_t pxTask, char *pcTaskName ) {
 717              		.loc 1 270 0
 718              		.cfi_startproc
 719              		@ args = 0, pretend = 0, frame = 16
 720              		@ frame_needed = 1, uses_anonymous_args = 0
 721              		@ link register save eliminated.
 722 0000 80B4     		push	{r7}
 723              		.cfi_def_cfa_offset 4
 724              		.cfi_offset 7, -4
 725 0002 85B0     		sub	sp, sp, #20
 726              		.cfi_def_cfa_offset 24
 727 0004 00AF     		add	r7, sp, #0
 728              		.cfi_def_cfa_register 7
 729 0006 7860     		str	r0, [r7, #4]
 730 0008 3960     		str	r1, [r7]
 731              	.LBB6:
 732              	.LBB7:
 733              		.file 2 "..\\..\\FreeRTOS_Source\\portable\\GCC\\ARM_CM3/portmacro.h"
   1:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /*
   2:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * FreeRTOS Kernel V10.0.1
   3:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  *
   5:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * subject to the following conditions:
  11:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  12:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * copies or substantial portions of the Software.
  14:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  15:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  22:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * http://www.FreeRTOS.org
  23:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * http://aws.amazon.com/freertos
  24:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  25:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * 1 tab == 4 spaces!
  26:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  */
  27:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
  28:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
  29:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #ifndef PORTMACRO_H
  30:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define PORTMACRO_H
  31:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
  32:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #ifdef __cplusplus
  33:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** extern "C" {
  34:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
  35:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
  36:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------
  37:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * Port specific definitions.
  38:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  *
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccD7tdgc.s 			page 20


  39:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * given hardware and compiler.
  41:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  42:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * These settings should not be altered.
  43:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  *-----------------------------------------------------------
  44:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  */
  45:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
  46:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /* Type definitions. */
  47:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portCHAR		char
  48:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portFLOAT		float
  49:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portDOUBLE		double
  50:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portLONG		long
  51:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portSHORT		short
  52:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portBASE_TYPE	long
  54:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
  55:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** typedef long BaseType_t;
  57:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** typedef unsigned long UBaseType_t;
  58:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
  59:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	typedef uint16_t TickType_t;
  61:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #else
  63:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	typedef uint32_t TickType_t;
  64:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
  66:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	not need to be guarded with a critical section. */
  68:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
  70:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  71:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
  72:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /* Architecture specifics. */
  73:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  77:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
  78:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /* Scheduler utilities. */
  79:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portYIELD() 															\
  80:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** {																				\
  81:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 																				\
  84:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile( "isb" );													\
  88:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** }
  89:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
  90:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  95:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccD7tdgc.s 			page 21


  96:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /* Critical section management. */
  97:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** extern void vPortEnterCritical( void );
  98:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** extern void vPortExitCritical( void );
  99:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 106:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 107:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 108:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** (which build with all the ports) will build. */
 111:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 114:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 115:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /* Tickless idle/low power functionality. */
 116:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 117:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 118:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 119:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
 120:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 121:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 122:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /* Architecture specific optimisations. */
 123:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 124:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 125:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
 126:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 127:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 128:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 129:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Generic helper function. */
 130:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 131:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	{
 132:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	uint8_t ucReturn;
 133:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 134:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 135:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 		return ucReturn;
 136:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	}
 137:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 138:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Check the configuration. */
 139:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 140:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 141:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	#endif
 142:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 143:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 144:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 145:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 146:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 147:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	/*-----------------------------------------------------------*/
 148:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 149:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 150:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 151:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 152:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccD7tdgc.s 			page 22


 153:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 154:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 155:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #ifdef configASSERT
 156:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 157:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 158:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
 159:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 160:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /* portNOP() is not required by this port. */
 161:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portNOP()
 162:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 163:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portINLINE	__inline
 164:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 165:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #ifndef portFORCE_INLINE
 166:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 167:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
 168:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 169:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 170:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** {
 171:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** uint32_t ulCurrentInterrupt;
 172:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** BaseType_t xReturn;
 173:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 174:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 175:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 176:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 177:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 178:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	{
 179:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 		xReturn = pdFALSE;
 180:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	}
 181:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	else
 182:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	{
 183:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 		xReturn = pdTRUE;
 184:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	}
 185:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 186:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	return xReturn;
 187:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** }
 188:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 189:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 190:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 191:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 192:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** {
 193:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** uint32_t ulNewBASEPRI;
 194:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 195:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile
 734              		.loc 2 195 0
 735              		.syntax unified
 736              	@ 195 "..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h" 1
 737 000a 4FF0A003 			mov r3, #160												
 738 000e 83F31188 		msr basepri, r3											
 739 0012 BFF36F8F 		isb														
 740 0016 BFF34F8F 		dsb														
 741              	
 742              	@ 0 "" 2
 743              		.thumb
 744              		.syntax unified
 745 001a FB60     		str	r3, [r7, #12]
 746              	.L33:
 747              	.LBE7:
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccD7tdgc.s 			page 23


 748              	.LBE6:
 271:main.c        **** 	/* The stack space has been execeeded for a task, considering allocating more. */
 272:main.c        **** 	taskDISABLE_INTERRUPTS();
 273:main.c        **** 	for( ;; );
 749              		.loc 1 273 0 discriminator 1
 750 001c FEE7     		b	.L33
 751              		.cfi_endproc
 752              	.LFE73:
 753              		.size	vApplicationStackOverflowHook, .-vApplicationStackOverflowHook
 754 001e 00BF     		.section	.text.vApplicationMallocFailedHook,"ax",%progbits
 755              		.align	2
 756              		.global	vApplicationMallocFailedHook
 757              		.thumb
 758              		.thumb_func
 759              		.type	vApplicationMallocFailedHook, %function
 760              	vApplicationMallocFailedHook:
 761              	.LFB74:
 274:main.c        **** }
 275:main.c        **** void vApplicationMallocFailedHook( void ) {
 762              		.loc 1 275 0
 763              		.cfi_startproc
 764              		@ args = 0, pretend = 0, frame = 8
 765              		@ frame_needed = 1, uses_anonymous_args = 0
 766              		@ link register save eliminated.
 767 0000 80B4     		push	{r7}
 768              		.cfi_def_cfa_offset 4
 769              		.cfi_offset 7, -4
 770 0002 83B0     		sub	sp, sp, #12
 771              		.cfi_def_cfa_offset 16
 772 0004 00AF     		add	r7, sp, #0
 773              		.cfi_def_cfa_register 7
 774              	.LBB8:
 775              	.LBB9:
 776              		.loc 2 195 0
 777              		.syntax unified
 778              	@ 195 "..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h" 1
 779 0006 4FF0A003 			mov r3, #160												
 780 000a 83F31188 		msr basepri, r3											
 781 000e BFF36F8F 		isb														
 782 0012 BFF34F8F 		dsb														
 783              	
 784              	@ 0 "" 2
 785              		.thumb
 786              		.syntax unified
 787 0016 7B60     		str	r3, [r7, #4]
 788              	.L35:
 789              	.LBE9:
 790              	.LBE8:
 276:main.c        **** 	/* The heap space has been execeeded. */
 277:main.c        **** 	taskDISABLE_INTERRUPTS();
 278:main.c        **** 	for( ;; );
 791              		.loc 1 278 0 discriminator 1
 792 0018 FEE7     		b	.L35
 793              		.cfi_endproc
 794              	.LFE74:
 795              		.size	vApplicationMallocFailedHook, .-vApplicationMallocFailedHook
 796 001a 00BF     		.text
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccD7tdgc.s 			page 24


 797              	.Letext0:
 798              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 799              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 800              		.file 5 "Generated_Source\\PSoC5/cytypes.h"
 801              		.file 6 "..\\..\\FreeRTOS_Source\\include/task.h"
 802              		.file 7 "..\\..\\FreeRTOS_Source\\include/queue.h"
 803              		.file 8 "..\\..\\FreeRTOS_Source\\include/semphr.h"
 804              		.file 9 "..\\..\\FreeRTOS_Source\\include/serial.h"
 805              		.file 10 "movement.h"
 806              		.file 11 "Generated_Source\\PSoC5/core_cm3.h"
 807              		.section	.debug_info,"",%progbits
 808              	.Ldebug_info0:
 809 0000 9C040000 		.4byte	0x49c
 810 0004 0400     		.2byte	0x4
 811 0006 00000000 		.4byte	.Ldebug_abbrev0
 812 000a 04       		.byte	0x4
 813 000b 01       		.uleb128 0x1
 814 000c 52000000 		.4byte	.LASF59
 815 0010 0C       		.byte	0xc
 816 0011 F6020000 		.4byte	.LASF60
 817 0015 16030000 		.4byte	.LASF61
 818 0019 00000000 		.4byte	.Ldebug_ranges0+0
 819 001d 00000000 		.4byte	0
 820 0021 00000000 		.4byte	.Ldebug_line0
 821 0025 02       		.uleb128 0x2
 822 0026 01       		.byte	0x1
 823 0027 06       		.byte	0x6
 824 0028 28020000 		.4byte	.LASF0
 825 002c 03       		.uleb128 0x3
 826 002d B2010000 		.4byte	.LASF4
 827 0031 03       		.byte	0x3
 828 0032 1D       		.byte	0x1d
 829 0033 37000000 		.4byte	0x37
 830 0037 02       		.uleb128 0x2
 831 0038 01       		.byte	0x1
 832 0039 08       		.byte	0x8
 833 003a E9010000 		.4byte	.LASF1
 834 003e 02       		.uleb128 0x2
 835 003f 02       		.byte	0x2
 836 0040 05       		.byte	0x5
 837 0041 0D010000 		.4byte	.LASF2
 838 0045 02       		.uleb128 0x2
 839 0046 02       		.byte	0x2
 840 0047 07       		.byte	0x7
 841 0048 87020000 		.4byte	.LASF3
 842 004c 03       		.uleb128 0x3
 843 004d B9030000 		.4byte	.LASF5
 844 0051 03       		.byte	0x3
 845 0052 3F       		.byte	0x3f
 846 0053 57000000 		.4byte	0x57
 847 0057 02       		.uleb128 0x2
 848 0058 04       		.byte	0x4
 849 0059 05       		.byte	0x5
 850 005a 81010000 		.4byte	.LASF6
 851 005e 03       		.uleb128 0x3
 852 005f EC000000 		.4byte	.LASF7
 853 0063 03       		.byte	0x3
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccD7tdgc.s 			page 25


 854 0064 41       		.byte	0x41
 855 0065 69000000 		.4byte	0x69
 856 0069 02       		.uleb128 0x2
 857 006a 04       		.byte	0x4
 858 006b 07       		.byte	0x7
 859 006c FD020000 		.4byte	.LASF8
 860 0070 02       		.uleb128 0x2
 861 0071 08       		.byte	0x8
 862 0072 05       		.byte	0x5
 863 0073 5A010000 		.4byte	.LASF9
 864 0077 02       		.uleb128 0x2
 865 0078 08       		.byte	0x8
 866 0079 07       		.byte	0x7
 867 007a 34020000 		.4byte	.LASF10
 868 007e 04       		.uleb128 0x4
 869 007f 04       		.byte	0x4
 870 0080 05       		.byte	0x5
 871 0081 696E7400 		.ascii	"int\000"
 872 0085 02       		.uleb128 0x2
 873 0086 04       		.byte	0x4
 874 0087 07       		.byte	0x7
 875 0088 54020000 		.4byte	.LASF11
 876 008c 03       		.uleb128 0x3
 877 008d 17010000 		.4byte	.LASF12
 878 0091 04       		.byte	0x4
 879 0092 18       		.byte	0x18
 880 0093 2C000000 		.4byte	0x2c
 881 0097 03       		.uleb128 0x3
 882 0098 B4020000 		.4byte	.LASF13
 883 009c 04       		.byte	0x4
 884 009d 2C       		.byte	0x2c
 885 009e 4C000000 		.4byte	0x4c
 886 00a2 03       		.uleb128 0x3
 887 00a3 4B020000 		.4byte	.LASF14
 888 00a7 04       		.byte	0x4
 889 00a8 30       		.byte	0x30
 890 00a9 5E000000 		.4byte	0x5e
 891 00ad 02       		.uleb128 0x2
 892 00ae 04       		.byte	0x4
 893 00af 04       		.byte	0x4
 894 00b0 54010000 		.4byte	.LASF15
 895 00b4 02       		.uleb128 0x2
 896 00b5 08       		.byte	0x8
 897 00b6 04       		.byte	0x4
 898 00b7 0F030000 		.4byte	.LASF16
 899 00bb 02       		.uleb128 0x2
 900 00bc 01       		.byte	0x1
 901 00bd 08       		.byte	0x8
 902 00be 9A020000 		.4byte	.LASF17
 903 00c2 05       		.uleb128 0x5
 904 00c3 00010000 		.4byte	.LASF18
 905 00c7 05       		.byte	0x5
 906 00c8 4E02     		.2byte	0x24e
 907 00ca CE000000 		.4byte	0xce
 908 00ce 06       		.uleb128 0x6
 909 00cf 04       		.byte	0x4
 910 00d0 D4000000 		.4byte	0xd4
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccD7tdgc.s 			page 26


 911 00d4 07       		.uleb128 0x7
 912 00d5 02       		.uleb128 0x2
 913 00d6 08       		.byte	0x8
 914 00d7 04       		.byte	0x4
 915 00d8 E0000000 		.4byte	.LASF19
 916 00dc 02       		.uleb128 0x2
 917 00dd 04       		.byte	0x4
 918 00de 07       		.byte	0x7
 919 00df 28000000 		.4byte	.LASF20
 920 00e3 08       		.uleb128 0x8
 921 00e4 04       		.byte	0x4
 922 00e5 06       		.uleb128 0x6
 923 00e6 04       		.byte	0x4
 924 00e7 BB000000 		.4byte	0xbb
 925 00eb 03       		.uleb128 0x3
 926 00ec 61020000 		.4byte	.LASF21
 927 00f0 02       		.byte	0x2
 928 00f1 38       		.byte	0x38
 929 00f2 57000000 		.4byte	0x57
 930 00f6 03       		.uleb128 0x3
 931 00f7 F7010000 		.4byte	.LASF22
 932 00fb 02       		.byte	0x2
 933 00fc 3F       		.byte	0x3f
 934 00fd A2000000 		.4byte	0xa2
 935 0101 03       		.uleb128 0x3
 936 0102 45000000 		.4byte	.LASF23
 937 0106 06       		.byte	0x6
 938 0107 3E       		.byte	0x3e
 939 0108 0C010000 		.4byte	0x10c
 940 010c 06       		.uleb128 0x6
 941 010d 04       		.byte	0x4
 942 010e 12010000 		.4byte	0x112
 943 0112 09       		.uleb128 0x9
 944 0113 9F010000 		.4byte	.LASF62
 945 0117 03       		.uleb128 0x3
 946 0118 C3030000 		.4byte	.LASF24
 947 011c 07       		.byte	0x7
 948 011d 2E       		.byte	0x2e
 949 011e E3000000 		.4byte	0xe3
 950 0122 03       		.uleb128 0x3
 951 0123 0C020000 		.4byte	.LASF25
 952 0127 08       		.byte	0x8
 953 0128 25       		.byte	0x25
 954 0129 17010000 		.4byte	0x117
 955 012d 03       		.uleb128 0x3
 956 012e CF020000 		.4byte	.LASF26
 957 0132 09       		.byte	0x9
 958 0133 1F       		.byte	0x1f
 959 0134 E3000000 		.4byte	0xe3
 960 0138 0A       		.uleb128 0xa
 961 0139 24       		.byte	0x24
 962 013a 0A       		.byte	0xa
 963 013b 03       		.byte	0x3
 964 013c AD010000 		.4byte	0x1ad
 965 0140 0B       		.uleb128 0xb
 966 0141 1E020000 		.4byte	.LASF27
 967 0145 0A       		.byte	0xa
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccD7tdgc.s 			page 27


 968 0146 04       		.byte	0x4
 969 0147 57000000 		.4byte	0x57
 970 014b 00       		.byte	0
 971 014c 0B       		.uleb128 0xb
 972 014d 1F000000 		.4byte	.LASF28
 973 0151 0A       		.byte	0xa
 974 0152 05       		.byte	0x5
 975 0153 57000000 		.4byte	0x57
 976 0157 04       		.byte	0x4
 977 0158 0B       		.uleb128 0xb
 978 0159 7C020000 		.4byte	.LASF29
 979 015d 0A       		.byte	0xa
 980 015e 06       		.byte	0x6
 981 015f 7E000000 		.4byte	0x7e
 982 0163 08       		.byte	0x8
 983 0164 0B       		.uleb128 0xb
 984 0165 D1030000 		.4byte	.LASF30
 985 0169 0A       		.byte	0xa
 986 016a 07       		.byte	0x7
 987 016b 7E000000 		.4byte	0x7e
 988 016f 0C       		.byte	0xc
 989 0170 0B       		.uleb128 0xb
 990 0171 02020000 		.4byte	.LASF31
 991 0175 0A       		.byte	0xa
 992 0176 08       		.byte	0x8
 993 0177 7E000000 		.4byte	0x7e
 994 017b 10       		.byte	0x10
 995 017c 0B       		.uleb128 0xb
 996 017d 9F020000 		.4byte	.LASF32
 997 0181 0A       		.byte	0xa
 998 0182 09       		.byte	0x9
 999 0183 7E000000 		.4byte	0x7e
 1000 0187 14       		.byte	0x14
 1001 0188 0C       		.uleb128 0xc
 1002 0189 696E6300 		.ascii	"inc\000"
 1003 018d 0A       		.byte	0xa
 1004 018e 0A       		.byte	0xa
 1005 018f 7E000000 		.4byte	0x7e
 1006 0193 18       		.byte	0x18
 1007 0194 0B       		.uleb128 0xb
 1008 0195 77020000 		.4byte	.LASF33
 1009 0199 0A       		.byte	0xa
 1010 019a 0B       		.byte	0xb
 1011 019b A2000000 		.4byte	0xa2
 1012 019f 1C       		.byte	0x1c
 1013 01a0 0B       		.uleb128 0xb
 1014 01a1 95010000 		.4byte	.LASF34
 1015 01a5 0A       		.byte	0xa
 1016 01a6 0C       		.byte	0xc
 1017 01a7 A2000000 		.4byte	0xa2
 1018 01ab 20       		.byte	0x20
 1019 01ac 00       		.byte	0
 1020 01ad 03       		.uleb128 0x3
 1021 01ae 8A010000 		.4byte	.LASF35
 1022 01b2 0A       		.byte	0xa
 1023 01b3 0D       		.byte	0xd
 1024 01b4 38010000 		.4byte	0x138
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccD7tdgc.s 			page 28


 1025 01b8 0A       		.uleb128 0xa
 1026 01b9 18       		.byte	0x18
 1027 01ba 0A       		.byte	0xa
 1028 01bb 0F       		.byte	0xf
 1029 01bc E2010000 		.4byte	0x1e2
 1030 01c0 0C       		.uleb128 0xc
 1031 01c1 4B6900   		.ascii	"Ki\000"
 1032 01c4 0A       		.byte	0xa
 1033 01c5 10       		.byte	0x10
 1034 01c6 B4000000 		.4byte	0xb4
 1035 01ca 00       		.byte	0
 1036 01cb 0C       		.uleb128 0xc
 1037 01cc 4B7000   		.ascii	"Kp\000"
 1038 01cf 0A       		.byte	0xa
 1039 01d0 11       		.byte	0x11
 1040 01d1 B4000000 		.4byte	0xb4
 1041 01d5 08       		.byte	0x8
 1042 01d6 0C       		.uleb128 0xc
 1043 01d7 4B6400   		.ascii	"Kd\000"
 1044 01da 0A       		.byte	0xa
 1045 01db 12       		.byte	0x12
 1046 01dc B4000000 		.4byte	0xb4
 1047 01e0 10       		.byte	0x10
 1048 01e1 00       		.byte	0
 1049 01e2 03       		.uleb128 0x3
 1050 01e3 F7000000 		.4byte	.LASF36
 1051 01e7 0A       		.byte	0xa
 1052 01e8 13       		.byte	0x13
 1053 01e9 B8010000 		.4byte	0x1b8
 1054 01ed 0D       		.uleb128 0xd
 1055 01ee D7030000 		.4byte	.LASF63
 1056 01f2 02       		.byte	0x2
 1057 01f3 BF       		.byte	0xbf
 1058 01f4 03       		.byte	0x3
 1059 01f5 05020000 		.4byte	0x205
 1060 01f9 0E       		.uleb128 0xe
 1061 01fa 1C040000 		.4byte	.LASF64
 1062 01fe 02       		.byte	0x2
 1063 01ff C1       		.byte	0xc1
 1064 0200 A2000000 		.4byte	0xa2
 1065 0204 00       		.byte	0
 1066 0205 0F       		.uleb128 0xf
 1067 0206 AA020000 		.4byte	.LASF65
 1068 020a 01       		.byte	0x1
 1069 020b 5B       		.byte	0x5b
 1070 020c 7E000000 		.4byte	0x7e
 1071 0210 00000000 		.4byte	.LFB69
 1072 0214 AC000000 		.4byte	.LFE69-.LFB69
 1073 0218 01       		.uleb128 0x1
 1074 0219 9C       		.byte	0x9c
 1075 021a 2E020000 		.4byte	0x22e
 1076 021e 10       		.uleb128 0x10
 1077 021f 72756E00 		.ascii	"run\000"
 1078 0223 01       		.byte	0x1
 1079 0224 5C       		.byte	0x5c
 1080 0225 2E020000 		.4byte	0x22e
 1081 0229 03       		.uleb128 0x3
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccD7tdgc.s 			page 29


 1082 022a 91       		.byte	0x91
 1083 022b F07D     		.sleb128 -272
 1084 022d 00       		.byte	0
 1085 022e 11       		.uleb128 0x11
 1086 022f 3E020000 		.4byte	0x23e
 1087 0233 3E020000 		.4byte	0x23e
 1088 0237 12       		.uleb128 0x12
 1089 0238 DC000000 		.4byte	0xdc
 1090 023c 3F       		.byte	0x3f
 1091 023d 00       		.byte	0
 1092 023e 06       		.uleb128 0x6
 1093 023f 04       		.byte	0x4
 1094 0240 44020000 		.4byte	0x244
 1095 0244 13       		.uleb128 0x13
 1096 0245 25000000 		.4byte	0x25
 1097 0249 14       		.uleb128 0x14
 1098 024a 0D000000 		.4byte	.LASF40
 1099 024e 01       		.byte	0x1
 1100 024f 78       		.byte	0x78
 1101 0250 00000000 		.4byte	.LFB70
 1102 0254 80020000 		.4byte	.LFE70-.LFB70
 1103 0258 01       		.uleb128 0x1
 1104 0259 9C       		.byte	0x9c
 1105 025a B1020000 		.4byte	0x2b1
 1106 025e 15       		.uleb128 0x15
 1107 025f 7000     		.ascii	"p\000"
 1108 0261 01       		.byte	0x1
 1109 0262 78       		.byte	0x78
 1110 0263 E3000000 		.4byte	0xe3
 1111 0267 03       		.uleb128 0x3
 1112 0268 91       		.byte	0x91
 1113 0269 D47D     		.sleb128 -300
 1114 026b 16       		.uleb128 0x16
 1115 026c 75010000 		.4byte	.LASF37
 1116 0270 01       		.byte	0x1
 1117 0271 7C       		.byte	0x7c
 1118 0272 2E020000 		.4byte	0x22e
 1119 0276 03       		.uleb128 0x3
 1120 0277 91       		.byte	0x91
 1121 0278 E47D     		.sleb128 -284
 1122 027a 10       		.uleb128 0x10
 1123 027b 6900     		.ascii	"i\000"
 1124 027d 01       		.byte	0x1
 1125 027e 7D       		.byte	0x7d
 1126 027f 7E000000 		.4byte	0x7e
 1127 0283 02       		.uleb128 0x2
 1128 0284 91       		.byte	0x91
 1129 0285 6C       		.sleb128 -20
 1130 0286 10       		.uleb128 0x10
 1131 0287 676F00   		.ascii	"go\000"
 1132 028a 01       		.byte	0x1
 1133 028b 7E       		.byte	0x7e
 1134 028c 7E000000 		.4byte	0x7e
 1135 0290 02       		.uleb128 0x2
 1136 0291 91       		.byte	0x91
 1137 0292 68       		.sleb128 -24
 1138 0293 16       		.uleb128 0x16
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccD7tdgc.s 			page 30


 1139 0294 AF020000 		.4byte	.LASF38
 1140 0298 01       		.byte	0x1
 1141 0299 7F       		.byte	0x7f
 1142 029a 25000000 		.4byte	0x25
 1143 029e 02       		.uleb128 0x2
 1144 029f 91       		.byte	0x91
 1145 02a0 67       		.sleb128 -25
 1146 02a1 16       		.uleb128 0x16
 1147 02a2 1A000000 		.4byte	.LASF39
 1148 02a6 01       		.byte	0x1
 1149 02a7 80       		.byte	0x80
 1150 02a8 B1020000 		.4byte	0x2b1
 1151 02ac 03       		.uleb128 0x3
 1152 02ad 91       		.byte	0x91
 1153 02ae D87D     		.sleb128 -296
 1154 02b0 00       		.byte	0
 1155 02b1 11       		.uleb128 0x11
 1156 02b2 BB000000 		.4byte	0xbb
 1157 02b6 C1020000 		.4byte	0x2c1
 1158 02ba 12       		.uleb128 0x12
 1159 02bb DC000000 		.4byte	0xdc
 1160 02bf 09       		.byte	0x9
 1161 02c0 00       		.byte	0
 1162 02c1 14       		.uleb128 0x14
 1163 02c2 0D040000 		.4byte	.LASF41
 1164 02c6 01       		.byte	0x1
 1165 02c7 BE       		.byte	0xbe
 1166 02c8 00000000 		.4byte	.LFB71
 1167 02cc B4000000 		.4byte	.LFE71-.LFB71
 1168 02d0 01       		.uleb128 0x1
 1169 02d1 9C       		.byte	0x9c
 1170 02d2 F3020000 		.4byte	0x2f3
 1171 02d6 15       		.uleb128 0x15
 1172 02d7 7000     		.ascii	"p\000"
 1173 02d9 01       		.byte	0x1
 1174 02da BE       		.byte	0xbe
 1175 02db E3000000 		.4byte	0xe3
 1176 02df 03       		.uleb128 0x3
 1177 02e0 91       		.byte	0x91
 1178 02e1 EC7D     		.sleb128 -276
 1179 02e3 16       		.uleb128 0x16
 1180 02e4 75010000 		.4byte	.LASF37
 1181 02e8 01       		.byte	0x1
 1182 02e9 C9       		.byte	0xc9
 1183 02ea F3020000 		.4byte	0x2f3
 1184 02ee 03       		.uleb128 0x3
 1185 02ef 91       		.byte	0x91
 1186 02f0 F07D     		.sleb128 -272
 1187 02f2 00       		.byte	0
 1188 02f3 11       		.uleb128 0x11
 1189 02f4 03030000 		.4byte	0x303
 1190 02f8 03030000 		.4byte	0x303
 1191 02fc 12       		.uleb128 0x12
 1192 02fd DC000000 		.4byte	0xdc
 1193 0301 3F       		.byte	0x3f
 1194 0302 00       		.byte	0
 1195 0303 06       		.uleb128 0x6
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccD7tdgc.s 			page 31


 1196 0304 04       		.byte	0x4
 1197 0305 25000000 		.4byte	0x25
 1198 0309 17       		.uleb128 0x17
 1199 030a DE020000 		.4byte	.LASF66
 1200 030e 01       		.byte	0x1
 1201 030f D9       		.byte	0xd9
 1202 0310 00000000 		.4byte	.LFB72
 1203 0314 A0000000 		.4byte	.LFE72-.LFB72
 1204 0318 01       		.uleb128 0x1
 1205 0319 9C       		.byte	0x9c
 1206 031a 3F030000 		.4byte	0x33f
 1207 031e 18       		.uleb128 0x18
 1208 031f BC020000 		.4byte	.LASF42
 1209 0323 01       		.byte	0x1
 1210 0324 DC       		.byte	0xdc
 1211 0325 18       		.uleb128 0x18
 1212 0326 31000000 		.4byte	.LASF43
 1213 032a 01       		.byte	0x1
 1214 032b DD       		.byte	0xdd
 1215 032c 18       		.uleb128 0x18
 1216 032d 1F010000 		.4byte	.LASF44
 1217 0331 01       		.byte	0x1
 1218 0332 DE       		.byte	0xde
 1219 0333 19       		.uleb128 0x19
 1220 0334 00000000 		.4byte	.LASF50
 1221 0338 01       		.byte	0x1
 1222 0339 DF       		.byte	0xdf
 1223 033a 3F030000 		.4byte	0x33f
 1224 033e 00       		.byte	0
 1225 033f 11       		.uleb128 0x11
 1226 0340 C2000000 		.4byte	0xc2
 1227 0344 4A030000 		.4byte	0x34a
 1228 0348 1A       		.uleb128 0x1a
 1229 0349 00       		.byte	0
 1230 034a 1B       		.uleb128 0x1b
 1231 034b 2F010000 		.4byte	.LASF45
 1232 034f 01       		.byte	0x1
 1233 0350 0E01     		.2byte	0x10e
 1234 0352 00000000 		.4byte	.LFB73
 1235 0356 1E000000 		.4byte	.LFE73-.LFB73
 1236 035a 01       		.uleb128 0x1
 1237 035b 9C       		.byte	0x9c
 1238 035c A2030000 		.4byte	0x3a2
 1239 0360 1C       		.uleb128 0x1c
 1240 0361 4D010000 		.4byte	.LASF46
 1241 0365 01       		.byte	0x1
 1242 0366 0E01     		.2byte	0x10e
 1243 0368 01010000 		.4byte	0x101
 1244 036c 02       		.uleb128 0x2
 1245 036d 91       		.byte	0x91
 1246 036e 6C       		.sleb128 -20
 1247 036f 1C       		.uleb128 0x1c
 1248 0370 29040000 		.4byte	.LASF47
 1249 0374 01       		.byte	0x1
 1250 0375 0E01     		.2byte	0x10e
 1251 0377 E5000000 		.4byte	0xe5
 1252 037b 02       		.uleb128 0x2
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccD7tdgc.s 			page 32


 1253 037c 91       		.byte	0x91
 1254 037d 68       		.sleb128 -24
 1255 037e 1D       		.uleb128 0x1d
 1256 037f ED010000 		.4byte	0x1ed
 1257 0383 0A000000 		.4byte	.LBB6
 1258 0387 12000000 		.4byte	.LBE6-.LBB6
 1259 038b 01       		.byte	0x1
 1260 038c 1001     		.2byte	0x110
 1261 038e 1E       		.uleb128 0x1e
 1262 038f 0A000000 		.4byte	.LBB7
 1263 0393 12000000 		.4byte	.LBE7-.LBB7
 1264 0397 1F       		.uleb128 0x1f
 1265 0398 F9010000 		.4byte	0x1f9
 1266 039c 02       		.uleb128 0x2
 1267 039d 91       		.byte	0x91
 1268 039e 74       		.sleb128 -12
 1269 039f 00       		.byte	0
 1270 03a0 00       		.byte	0
 1271 03a1 00       		.byte	0
 1272 03a2 1B       		.uleb128 0x1b
 1273 03a3 C3010000 		.4byte	.LASF48
 1274 03a7 01       		.byte	0x1
 1275 03a8 1301     		.2byte	0x113
 1276 03aa 00000000 		.4byte	.LFB74
 1277 03ae 1A000000 		.4byte	.LFE74-.LFB74
 1278 03b2 01       		.uleb128 0x1
 1279 03b3 9C       		.byte	0x9c
 1280 03b4 DC030000 		.4byte	0x3dc
 1281 03b8 1D       		.uleb128 0x1d
 1282 03b9 ED010000 		.4byte	0x1ed
 1283 03bd 06000000 		.4byte	.LBB8
 1284 03c1 12000000 		.4byte	.LBE8-.LBB8
 1285 03c5 01       		.byte	0x1
 1286 03c6 1501     		.2byte	0x115
 1287 03c8 1E       		.uleb128 0x1e
 1288 03c9 06000000 		.4byte	.LBB9
 1289 03cd 12000000 		.4byte	.LBE9-.LBB9
 1290 03d1 1F       		.uleb128 0x1f
 1291 03d2 F9010000 		.4byte	0x1f9
 1292 03d6 02       		.uleb128 0x2
 1293 03d7 91       		.byte	0x91
 1294 03d8 74       		.sleb128 -12
 1295 03d9 00       		.byte	0
 1296 03da 00       		.byte	0
 1297 03db 00       		.byte	0
 1298 03dc 16       		.uleb128 0x16
 1299 03dd BC010000 		.4byte	.LASF49
 1300 03e1 01       		.byte	0x1
 1301 03e2 49       		.byte	0x49
 1302 03e3 2D010000 		.4byte	0x12d
 1303 03e7 05       		.uleb128 0x5
 1304 03e8 03       		.byte	0x3
 1305 03e9 00000000 		.4byte	pxPort
 1306 03ed 20       		.uleb128 0x20
 1307 03ee F5030000 		.4byte	.LASF51
 1308 03f2 0B       		.byte	0xb
 1309 03f3 9606     		.2byte	0x696
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccD7tdgc.s 			page 33


 1310 03f5 F9030000 		.4byte	0x3f9
 1311 03f9 21       		.uleb128 0x21
 1312 03fa 97000000 		.4byte	0x97
 1313 03fe 22       		.uleb128 0x22
 1314 03ff 6C020000 		.4byte	.LASF52
 1315 0403 01       		.byte	0x1
 1316 0404 4A       		.byte	0x4a
 1317 0405 22010000 		.4byte	0x122
 1318 0409 05       		.uleb128 0x5
 1319 040a 03       		.byte	0x3
 1320 040b 00000000 		.4byte	gatekeeper
 1321 040f 22       		.uleb128 0x22
 1322 0410 68010000 		.4byte	.LASF53
 1323 0414 01       		.byte	0x1
 1324 0415 4B       		.byte	0x4b
 1325 0416 17010000 		.4byte	0x117
 1326 041a 05       		.uleb128 0x5
 1327 041b 03       		.byte	0x3
 1328 041c 00000000 		.4byte	queue_handle
 1329 0420 22       		.uleb128 0x22
 1330 0421 AE030000 		.4byte	.LASF54
 1331 0425 01       		.byte	0x1
 1332 0426 4F       		.byte	0x4f
 1333 0427 25000000 		.4byte	0x25
 1334 042b 05       		.uleb128 0x5
 1335 042c 03       		.byte	0x3
 1336 042d 00000000 		.4byte	rx_receive
 1337 0431 11       		.uleb128 0x11
 1338 0432 37000000 		.4byte	0x37
 1339 0436 41040000 		.4byte	0x441
 1340 043a 12       		.uleb128 0x12
 1341 043b DC000000 		.4byte	0xdc
 1342 043f 3F       		.byte	0x3f
 1343 0440 00       		.byte	0
 1344 0441 22       		.uleb128 0x22
 1345 0442 EF020000 		.4byte	.LASF55
 1346 0446 01       		.byte	0x1
 1347 0447 50       		.byte	0x50
 1348 0448 31040000 		.4byte	0x431
 1349 044c 05       		.uleb128 0x5
 1350 044d 03       		.byte	0x3
 1351 044e 00000000 		.4byte	buffer
 1352 0452 22       		.uleb128 0x22
 1353 0453 02040000 		.4byte	.LASF56
 1354 0457 01       		.byte	0x1
 1355 0458 53       		.byte	0x53
 1356 0459 AD010000 		.4byte	0x1ad
 1357 045d 05       		.uleb128 0x5
 1358 045e 03       		.byte	0x3
 1359 045f 00000000 		.4byte	left_wheel
 1360 0463 22       		.uleb128 0x22
 1361 0464 E9030000 		.4byte	.LASF57
 1362 0468 01       		.byte	0x1
 1363 0469 54       		.byte	0x54
 1364 046a AD010000 		.4byte	0x1ad
 1365 046e 05       		.uleb128 0x5
 1366 046f 03       		.byte	0x3
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccD7tdgc.s 			page 34


 1367 0470 00000000 		.4byte	right_wheel
 1368 0474 23       		.uleb128 0x23
 1369 0475 6B00     		.ascii	"k\000"
 1370 0477 01       		.byte	0x1
 1371 0478 55       		.byte	0x55
 1372 0479 E2010000 		.4byte	0x1e2
 1373 047d 05       		.uleb128 0x5
 1374 047e 03       		.byte	0x3
 1375 047f 00000000 		.4byte	k
 1376 0483 22       		.uleb128 0x22
 1377 0484 E0010000 		.4byte	.LASF58
 1378 0488 01       		.byte	0x1
 1379 0489 57       		.byte	0x57
 1380 048a 7E000000 		.4byte	0x7e
 1381 048e 05       		.uleb128 0x5
 1382 048f 03       		.byte	0x3
 1383 0490 00000000 		.4byte	isMaster
 1384 0494 19       		.uleb128 0x19
 1385 0495 00000000 		.4byte	.LASF50
 1386 0499 01       		.byte	0x1
 1387 049a DF       		.byte	0xdf
 1388 049b 3F030000 		.4byte	0x33f
 1389 049f 00       		.byte	0
 1390              		.section	.debug_abbrev,"",%progbits
 1391              	.Ldebug_abbrev0:
 1392 0000 01       		.uleb128 0x1
 1393 0001 11       		.uleb128 0x11
 1394 0002 01       		.byte	0x1
 1395 0003 25       		.uleb128 0x25
 1396 0004 0E       		.uleb128 0xe
 1397 0005 13       		.uleb128 0x13
 1398 0006 0B       		.uleb128 0xb
 1399 0007 03       		.uleb128 0x3
 1400 0008 0E       		.uleb128 0xe
 1401 0009 1B       		.uleb128 0x1b
 1402 000a 0E       		.uleb128 0xe
 1403 000b 55       		.uleb128 0x55
 1404 000c 17       		.uleb128 0x17
 1405 000d 11       		.uleb128 0x11
 1406 000e 01       		.uleb128 0x1
 1407 000f 10       		.uleb128 0x10
 1408 0010 17       		.uleb128 0x17
 1409 0011 00       		.byte	0
 1410 0012 00       		.byte	0
 1411 0013 02       		.uleb128 0x2
 1412 0014 24       		.uleb128 0x24
 1413 0015 00       		.byte	0
 1414 0016 0B       		.uleb128 0xb
 1415 0017 0B       		.uleb128 0xb
 1416 0018 3E       		.uleb128 0x3e
 1417 0019 0B       		.uleb128 0xb
 1418 001a 03       		.uleb128 0x3
 1419 001b 0E       		.uleb128 0xe
 1420 001c 00       		.byte	0
 1421 001d 00       		.byte	0
 1422 001e 03       		.uleb128 0x3
 1423 001f 16       		.uleb128 0x16
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccD7tdgc.s 			page 35


 1424 0020 00       		.byte	0
 1425 0021 03       		.uleb128 0x3
 1426 0022 0E       		.uleb128 0xe
 1427 0023 3A       		.uleb128 0x3a
 1428 0024 0B       		.uleb128 0xb
 1429 0025 3B       		.uleb128 0x3b
 1430 0026 0B       		.uleb128 0xb
 1431 0027 49       		.uleb128 0x49
 1432 0028 13       		.uleb128 0x13
 1433 0029 00       		.byte	0
 1434 002a 00       		.byte	0
 1435 002b 04       		.uleb128 0x4
 1436 002c 24       		.uleb128 0x24
 1437 002d 00       		.byte	0
 1438 002e 0B       		.uleb128 0xb
 1439 002f 0B       		.uleb128 0xb
 1440 0030 3E       		.uleb128 0x3e
 1441 0031 0B       		.uleb128 0xb
 1442 0032 03       		.uleb128 0x3
 1443 0033 08       		.uleb128 0x8
 1444 0034 00       		.byte	0
 1445 0035 00       		.byte	0
 1446 0036 05       		.uleb128 0x5
 1447 0037 16       		.uleb128 0x16
 1448 0038 00       		.byte	0
 1449 0039 03       		.uleb128 0x3
 1450 003a 0E       		.uleb128 0xe
 1451 003b 3A       		.uleb128 0x3a
 1452 003c 0B       		.uleb128 0xb
 1453 003d 3B       		.uleb128 0x3b
 1454 003e 05       		.uleb128 0x5
 1455 003f 49       		.uleb128 0x49
 1456 0040 13       		.uleb128 0x13
 1457 0041 00       		.byte	0
 1458 0042 00       		.byte	0
 1459 0043 06       		.uleb128 0x6
 1460 0044 0F       		.uleb128 0xf
 1461 0045 00       		.byte	0
 1462 0046 0B       		.uleb128 0xb
 1463 0047 0B       		.uleb128 0xb
 1464 0048 49       		.uleb128 0x49
 1465 0049 13       		.uleb128 0x13
 1466 004a 00       		.byte	0
 1467 004b 00       		.byte	0
 1468 004c 07       		.uleb128 0x7
 1469 004d 15       		.uleb128 0x15
 1470 004e 00       		.byte	0
 1471 004f 27       		.uleb128 0x27
 1472 0050 19       		.uleb128 0x19
 1473 0051 00       		.byte	0
 1474 0052 00       		.byte	0
 1475 0053 08       		.uleb128 0x8
 1476 0054 0F       		.uleb128 0xf
 1477 0055 00       		.byte	0
 1478 0056 0B       		.uleb128 0xb
 1479 0057 0B       		.uleb128 0xb
 1480 0058 00       		.byte	0
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccD7tdgc.s 			page 36


 1481 0059 00       		.byte	0
 1482 005a 09       		.uleb128 0x9
 1483 005b 13       		.uleb128 0x13
 1484 005c 00       		.byte	0
 1485 005d 03       		.uleb128 0x3
 1486 005e 0E       		.uleb128 0xe
 1487 005f 3C       		.uleb128 0x3c
 1488 0060 19       		.uleb128 0x19
 1489 0061 00       		.byte	0
 1490 0062 00       		.byte	0
 1491 0063 0A       		.uleb128 0xa
 1492 0064 13       		.uleb128 0x13
 1493 0065 01       		.byte	0x1
 1494 0066 0B       		.uleb128 0xb
 1495 0067 0B       		.uleb128 0xb
 1496 0068 3A       		.uleb128 0x3a
 1497 0069 0B       		.uleb128 0xb
 1498 006a 3B       		.uleb128 0x3b
 1499 006b 0B       		.uleb128 0xb
 1500 006c 01       		.uleb128 0x1
 1501 006d 13       		.uleb128 0x13
 1502 006e 00       		.byte	0
 1503 006f 00       		.byte	0
 1504 0070 0B       		.uleb128 0xb
 1505 0071 0D       		.uleb128 0xd
 1506 0072 00       		.byte	0
 1507 0073 03       		.uleb128 0x3
 1508 0074 0E       		.uleb128 0xe
 1509 0075 3A       		.uleb128 0x3a
 1510 0076 0B       		.uleb128 0xb
 1511 0077 3B       		.uleb128 0x3b
 1512 0078 0B       		.uleb128 0xb
 1513 0079 49       		.uleb128 0x49
 1514 007a 13       		.uleb128 0x13
 1515 007b 38       		.uleb128 0x38
 1516 007c 0B       		.uleb128 0xb
 1517 007d 00       		.byte	0
 1518 007e 00       		.byte	0
 1519 007f 0C       		.uleb128 0xc
 1520 0080 0D       		.uleb128 0xd
 1521 0081 00       		.byte	0
 1522 0082 03       		.uleb128 0x3
 1523 0083 08       		.uleb128 0x8
 1524 0084 3A       		.uleb128 0x3a
 1525 0085 0B       		.uleb128 0xb
 1526 0086 3B       		.uleb128 0x3b
 1527 0087 0B       		.uleb128 0xb
 1528 0088 49       		.uleb128 0x49
 1529 0089 13       		.uleb128 0x13
 1530 008a 38       		.uleb128 0x38
 1531 008b 0B       		.uleb128 0xb
 1532 008c 00       		.byte	0
 1533 008d 00       		.byte	0
 1534 008e 0D       		.uleb128 0xd
 1535 008f 2E       		.uleb128 0x2e
 1536 0090 01       		.byte	0x1
 1537 0091 03       		.uleb128 0x3
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccD7tdgc.s 			page 37


 1538 0092 0E       		.uleb128 0xe
 1539 0093 3A       		.uleb128 0x3a
 1540 0094 0B       		.uleb128 0xb
 1541 0095 3B       		.uleb128 0x3b
 1542 0096 0B       		.uleb128 0xb
 1543 0097 27       		.uleb128 0x27
 1544 0098 19       		.uleb128 0x19
 1545 0099 20       		.uleb128 0x20
 1546 009a 0B       		.uleb128 0xb
 1547 009b 01       		.uleb128 0x1
 1548 009c 13       		.uleb128 0x13
 1549 009d 00       		.byte	0
 1550 009e 00       		.byte	0
 1551 009f 0E       		.uleb128 0xe
 1552 00a0 34       		.uleb128 0x34
 1553 00a1 00       		.byte	0
 1554 00a2 03       		.uleb128 0x3
 1555 00a3 0E       		.uleb128 0xe
 1556 00a4 3A       		.uleb128 0x3a
 1557 00a5 0B       		.uleb128 0xb
 1558 00a6 3B       		.uleb128 0x3b
 1559 00a7 0B       		.uleb128 0xb
 1560 00a8 49       		.uleb128 0x49
 1561 00a9 13       		.uleb128 0x13
 1562 00aa 00       		.byte	0
 1563 00ab 00       		.byte	0
 1564 00ac 0F       		.uleb128 0xf
 1565 00ad 2E       		.uleb128 0x2e
 1566 00ae 01       		.byte	0x1
 1567 00af 3F       		.uleb128 0x3f
 1568 00b0 19       		.uleb128 0x19
 1569 00b1 03       		.uleb128 0x3
 1570 00b2 0E       		.uleb128 0xe
 1571 00b3 3A       		.uleb128 0x3a
 1572 00b4 0B       		.uleb128 0xb
 1573 00b5 3B       		.uleb128 0x3b
 1574 00b6 0B       		.uleb128 0xb
 1575 00b7 27       		.uleb128 0x27
 1576 00b8 19       		.uleb128 0x19
 1577 00b9 49       		.uleb128 0x49
 1578 00ba 13       		.uleb128 0x13
 1579 00bb 11       		.uleb128 0x11
 1580 00bc 01       		.uleb128 0x1
 1581 00bd 12       		.uleb128 0x12
 1582 00be 06       		.uleb128 0x6
 1583 00bf 40       		.uleb128 0x40
 1584 00c0 18       		.uleb128 0x18
 1585 00c1 9642     		.uleb128 0x2116
 1586 00c3 19       		.uleb128 0x19
 1587 00c4 01       		.uleb128 0x1
 1588 00c5 13       		.uleb128 0x13
 1589 00c6 00       		.byte	0
 1590 00c7 00       		.byte	0
 1591 00c8 10       		.uleb128 0x10
 1592 00c9 34       		.uleb128 0x34
 1593 00ca 00       		.byte	0
 1594 00cb 03       		.uleb128 0x3
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccD7tdgc.s 			page 38


 1595 00cc 08       		.uleb128 0x8
 1596 00cd 3A       		.uleb128 0x3a
 1597 00ce 0B       		.uleb128 0xb
 1598 00cf 3B       		.uleb128 0x3b
 1599 00d0 0B       		.uleb128 0xb
 1600 00d1 49       		.uleb128 0x49
 1601 00d2 13       		.uleb128 0x13
 1602 00d3 02       		.uleb128 0x2
 1603 00d4 18       		.uleb128 0x18
 1604 00d5 00       		.byte	0
 1605 00d6 00       		.byte	0
 1606 00d7 11       		.uleb128 0x11
 1607 00d8 01       		.uleb128 0x1
 1608 00d9 01       		.byte	0x1
 1609 00da 49       		.uleb128 0x49
 1610 00db 13       		.uleb128 0x13
 1611 00dc 01       		.uleb128 0x1
 1612 00dd 13       		.uleb128 0x13
 1613 00de 00       		.byte	0
 1614 00df 00       		.byte	0
 1615 00e0 12       		.uleb128 0x12
 1616 00e1 21       		.uleb128 0x21
 1617 00e2 00       		.byte	0
 1618 00e3 49       		.uleb128 0x49
 1619 00e4 13       		.uleb128 0x13
 1620 00e5 2F       		.uleb128 0x2f
 1621 00e6 0B       		.uleb128 0xb
 1622 00e7 00       		.byte	0
 1623 00e8 00       		.byte	0
 1624 00e9 13       		.uleb128 0x13
 1625 00ea 26       		.uleb128 0x26
 1626 00eb 00       		.byte	0
 1627 00ec 49       		.uleb128 0x49
 1628 00ed 13       		.uleb128 0x13
 1629 00ee 00       		.byte	0
 1630 00ef 00       		.byte	0
 1631 00f0 14       		.uleb128 0x14
 1632 00f1 2E       		.uleb128 0x2e
 1633 00f2 01       		.byte	0x1
 1634 00f3 3F       		.uleb128 0x3f
 1635 00f4 19       		.uleb128 0x19
 1636 00f5 03       		.uleb128 0x3
 1637 00f6 0E       		.uleb128 0xe
 1638 00f7 3A       		.uleb128 0x3a
 1639 00f8 0B       		.uleb128 0xb
 1640 00f9 3B       		.uleb128 0x3b
 1641 00fa 0B       		.uleb128 0xb
 1642 00fb 27       		.uleb128 0x27
 1643 00fc 19       		.uleb128 0x19
 1644 00fd 11       		.uleb128 0x11
 1645 00fe 01       		.uleb128 0x1
 1646 00ff 12       		.uleb128 0x12
 1647 0100 06       		.uleb128 0x6
 1648 0101 40       		.uleb128 0x40
 1649 0102 18       		.uleb128 0x18
 1650 0103 9642     		.uleb128 0x2116
 1651 0105 19       		.uleb128 0x19
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccD7tdgc.s 			page 39


 1652 0106 01       		.uleb128 0x1
 1653 0107 13       		.uleb128 0x13
 1654 0108 00       		.byte	0
 1655 0109 00       		.byte	0
 1656 010a 15       		.uleb128 0x15
 1657 010b 05       		.uleb128 0x5
 1658 010c 00       		.byte	0
 1659 010d 03       		.uleb128 0x3
 1660 010e 08       		.uleb128 0x8
 1661 010f 3A       		.uleb128 0x3a
 1662 0110 0B       		.uleb128 0xb
 1663 0111 3B       		.uleb128 0x3b
 1664 0112 0B       		.uleb128 0xb
 1665 0113 49       		.uleb128 0x49
 1666 0114 13       		.uleb128 0x13
 1667 0115 02       		.uleb128 0x2
 1668 0116 18       		.uleb128 0x18
 1669 0117 00       		.byte	0
 1670 0118 00       		.byte	0
 1671 0119 16       		.uleb128 0x16
 1672 011a 34       		.uleb128 0x34
 1673 011b 00       		.byte	0
 1674 011c 03       		.uleb128 0x3
 1675 011d 0E       		.uleb128 0xe
 1676 011e 3A       		.uleb128 0x3a
 1677 011f 0B       		.uleb128 0xb
 1678 0120 3B       		.uleb128 0x3b
 1679 0121 0B       		.uleb128 0xb
 1680 0122 49       		.uleb128 0x49
 1681 0123 13       		.uleb128 0x13
 1682 0124 02       		.uleb128 0x2
 1683 0125 18       		.uleb128 0x18
 1684 0126 00       		.byte	0
 1685 0127 00       		.byte	0
 1686 0128 17       		.uleb128 0x17
 1687 0129 2E       		.uleb128 0x2e
 1688 012a 01       		.byte	0x1
 1689 012b 03       		.uleb128 0x3
 1690 012c 0E       		.uleb128 0xe
 1691 012d 3A       		.uleb128 0x3a
 1692 012e 0B       		.uleb128 0xb
 1693 012f 3B       		.uleb128 0x3b
 1694 0130 0B       		.uleb128 0xb
 1695 0131 27       		.uleb128 0x27
 1696 0132 19       		.uleb128 0x19
 1697 0133 11       		.uleb128 0x11
 1698 0134 01       		.uleb128 0x1
 1699 0135 12       		.uleb128 0x12
 1700 0136 06       		.uleb128 0x6
 1701 0137 40       		.uleb128 0x40
 1702 0138 18       		.uleb128 0x18
 1703 0139 9642     		.uleb128 0x2116
 1704 013b 19       		.uleb128 0x19
 1705 013c 01       		.uleb128 0x1
 1706 013d 13       		.uleb128 0x13
 1707 013e 00       		.byte	0
 1708 013f 00       		.byte	0
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccD7tdgc.s 			page 40


 1709 0140 18       		.uleb128 0x18
 1710 0141 2E       		.uleb128 0x2e
 1711 0142 00       		.byte	0
 1712 0143 3F       		.uleb128 0x3f
 1713 0144 19       		.uleb128 0x19
 1714 0145 03       		.uleb128 0x3
 1715 0146 0E       		.uleb128 0xe
 1716 0147 3A       		.uleb128 0x3a
 1717 0148 0B       		.uleb128 0xb
 1718 0149 3B       		.uleb128 0x3b
 1719 014a 0B       		.uleb128 0xb
 1720 014b 27       		.uleb128 0x27
 1721 014c 19       		.uleb128 0x19
 1722 014d 3C       		.uleb128 0x3c
 1723 014e 19       		.uleb128 0x19
 1724 014f 00       		.byte	0
 1725 0150 00       		.byte	0
 1726 0151 19       		.uleb128 0x19
 1727 0152 34       		.uleb128 0x34
 1728 0153 00       		.byte	0
 1729 0154 03       		.uleb128 0x3
 1730 0155 0E       		.uleb128 0xe
 1731 0156 3A       		.uleb128 0x3a
 1732 0157 0B       		.uleb128 0xb
 1733 0158 3B       		.uleb128 0x3b
 1734 0159 0B       		.uleb128 0xb
 1735 015a 49       		.uleb128 0x49
 1736 015b 13       		.uleb128 0x13
 1737 015c 3F       		.uleb128 0x3f
 1738 015d 19       		.uleb128 0x19
 1739 015e 3C       		.uleb128 0x3c
 1740 015f 19       		.uleb128 0x19
 1741 0160 00       		.byte	0
 1742 0161 00       		.byte	0
 1743 0162 1A       		.uleb128 0x1a
 1744 0163 21       		.uleb128 0x21
 1745 0164 00       		.byte	0
 1746 0165 00       		.byte	0
 1747 0166 00       		.byte	0
 1748 0167 1B       		.uleb128 0x1b
 1749 0168 2E       		.uleb128 0x2e
 1750 0169 01       		.byte	0x1
 1751 016a 3F       		.uleb128 0x3f
 1752 016b 19       		.uleb128 0x19
 1753 016c 03       		.uleb128 0x3
 1754 016d 0E       		.uleb128 0xe
 1755 016e 3A       		.uleb128 0x3a
 1756 016f 0B       		.uleb128 0xb
 1757 0170 3B       		.uleb128 0x3b
 1758 0171 05       		.uleb128 0x5
 1759 0172 27       		.uleb128 0x27
 1760 0173 19       		.uleb128 0x19
 1761 0174 11       		.uleb128 0x11
 1762 0175 01       		.uleb128 0x1
 1763 0176 12       		.uleb128 0x12
 1764 0177 06       		.uleb128 0x6
 1765 0178 40       		.uleb128 0x40
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccD7tdgc.s 			page 41


 1766 0179 18       		.uleb128 0x18
 1767 017a 9742     		.uleb128 0x2117
 1768 017c 19       		.uleb128 0x19
 1769 017d 01       		.uleb128 0x1
 1770 017e 13       		.uleb128 0x13
 1771 017f 00       		.byte	0
 1772 0180 00       		.byte	0
 1773 0181 1C       		.uleb128 0x1c
 1774 0182 05       		.uleb128 0x5
 1775 0183 00       		.byte	0
 1776 0184 03       		.uleb128 0x3
 1777 0185 0E       		.uleb128 0xe
 1778 0186 3A       		.uleb128 0x3a
 1779 0187 0B       		.uleb128 0xb
 1780 0188 3B       		.uleb128 0x3b
 1781 0189 05       		.uleb128 0x5
 1782 018a 49       		.uleb128 0x49
 1783 018b 13       		.uleb128 0x13
 1784 018c 02       		.uleb128 0x2
 1785 018d 18       		.uleb128 0x18
 1786 018e 00       		.byte	0
 1787 018f 00       		.byte	0
 1788 0190 1D       		.uleb128 0x1d
 1789 0191 1D       		.uleb128 0x1d
 1790 0192 01       		.byte	0x1
 1791 0193 31       		.uleb128 0x31
 1792 0194 13       		.uleb128 0x13
 1793 0195 11       		.uleb128 0x11
 1794 0196 01       		.uleb128 0x1
 1795 0197 12       		.uleb128 0x12
 1796 0198 06       		.uleb128 0x6
 1797 0199 58       		.uleb128 0x58
 1798 019a 0B       		.uleb128 0xb
 1799 019b 59       		.uleb128 0x59
 1800 019c 05       		.uleb128 0x5
 1801 019d 00       		.byte	0
 1802 019e 00       		.byte	0
 1803 019f 1E       		.uleb128 0x1e
 1804 01a0 0B       		.uleb128 0xb
 1805 01a1 01       		.byte	0x1
 1806 01a2 11       		.uleb128 0x11
 1807 01a3 01       		.uleb128 0x1
 1808 01a4 12       		.uleb128 0x12
 1809 01a5 06       		.uleb128 0x6
 1810 01a6 00       		.byte	0
 1811 01a7 00       		.byte	0
 1812 01a8 1F       		.uleb128 0x1f
 1813 01a9 34       		.uleb128 0x34
 1814 01aa 00       		.byte	0
 1815 01ab 31       		.uleb128 0x31
 1816 01ac 13       		.uleb128 0x13
 1817 01ad 02       		.uleb128 0x2
 1818 01ae 18       		.uleb128 0x18
 1819 01af 00       		.byte	0
 1820 01b0 00       		.byte	0
 1821 01b1 20       		.uleb128 0x20
 1822 01b2 34       		.uleb128 0x34
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccD7tdgc.s 			page 42


 1823 01b3 00       		.byte	0
 1824 01b4 03       		.uleb128 0x3
 1825 01b5 0E       		.uleb128 0xe
 1826 01b6 3A       		.uleb128 0x3a
 1827 01b7 0B       		.uleb128 0xb
 1828 01b8 3B       		.uleb128 0x3b
 1829 01b9 05       		.uleb128 0x5
 1830 01ba 49       		.uleb128 0x49
 1831 01bb 13       		.uleb128 0x13
 1832 01bc 3F       		.uleb128 0x3f
 1833 01bd 19       		.uleb128 0x19
 1834 01be 3C       		.uleb128 0x3c
 1835 01bf 19       		.uleb128 0x19
 1836 01c0 00       		.byte	0
 1837 01c1 00       		.byte	0
 1838 01c2 21       		.uleb128 0x21
 1839 01c3 35       		.uleb128 0x35
 1840 01c4 00       		.byte	0
 1841 01c5 49       		.uleb128 0x49
 1842 01c6 13       		.uleb128 0x13
 1843 01c7 00       		.byte	0
 1844 01c8 00       		.byte	0
 1845 01c9 22       		.uleb128 0x22
 1846 01ca 34       		.uleb128 0x34
 1847 01cb 00       		.byte	0
 1848 01cc 03       		.uleb128 0x3
 1849 01cd 0E       		.uleb128 0xe
 1850 01ce 3A       		.uleb128 0x3a
 1851 01cf 0B       		.uleb128 0xb
 1852 01d0 3B       		.uleb128 0x3b
 1853 01d1 0B       		.uleb128 0xb
 1854 01d2 49       		.uleb128 0x49
 1855 01d3 13       		.uleb128 0x13
 1856 01d4 3F       		.uleb128 0x3f
 1857 01d5 19       		.uleb128 0x19
 1858 01d6 02       		.uleb128 0x2
 1859 01d7 18       		.uleb128 0x18
 1860 01d8 00       		.byte	0
 1861 01d9 00       		.byte	0
 1862 01da 23       		.uleb128 0x23
 1863 01db 34       		.uleb128 0x34
 1864 01dc 00       		.byte	0
 1865 01dd 03       		.uleb128 0x3
 1866 01de 08       		.uleb128 0x8
 1867 01df 3A       		.uleb128 0x3a
 1868 01e0 0B       		.uleb128 0xb
 1869 01e1 3B       		.uleb128 0x3b
 1870 01e2 0B       		.uleb128 0xb
 1871 01e3 49       		.uleb128 0x49
 1872 01e4 13       		.uleb128 0x13
 1873 01e5 3F       		.uleb128 0x3f
 1874 01e6 19       		.uleb128 0x19
 1875 01e7 02       		.uleb128 0x2
 1876 01e8 18       		.uleb128 0x18
 1877 01e9 00       		.byte	0
 1878 01ea 00       		.byte	0
 1879 01eb 00       		.byte	0
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccD7tdgc.s 			page 43


 1880              		.section	.debug_aranges,"",%progbits
 1881 0000 44000000 		.4byte	0x44
 1882 0004 0200     		.2byte	0x2
 1883 0006 00000000 		.4byte	.Ldebug_info0
 1884 000a 04       		.byte	0x4
 1885 000b 00       		.byte	0
 1886 000c 0000     		.2byte	0
 1887 000e 0000     		.2byte	0
 1888 0010 00000000 		.4byte	.LFB69
 1889 0014 AC000000 		.4byte	.LFE69-.LFB69
 1890 0018 00000000 		.4byte	.LFB70
 1891 001c 80020000 		.4byte	.LFE70-.LFB70
 1892 0020 00000000 		.4byte	.LFB71
 1893 0024 B4000000 		.4byte	.LFE71-.LFB71
 1894 0028 00000000 		.4byte	.LFB72
 1895 002c A0000000 		.4byte	.LFE72-.LFB72
 1896 0030 00000000 		.4byte	.LFB73
 1897 0034 1E000000 		.4byte	.LFE73-.LFB73
 1898 0038 00000000 		.4byte	.LFB74
 1899 003c 1A000000 		.4byte	.LFE74-.LFB74
 1900 0040 00000000 		.4byte	0
 1901 0044 00000000 		.4byte	0
 1902              		.section	.debug_ranges,"",%progbits
 1903              	.Ldebug_ranges0:
 1904 0000 00000000 		.4byte	.LFB69
 1905 0004 AC000000 		.4byte	.LFE69
 1906 0008 00000000 		.4byte	.LFB70
 1907 000c 80020000 		.4byte	.LFE70
 1908 0010 00000000 		.4byte	.LFB71
 1909 0014 B4000000 		.4byte	.LFE71
 1910 0018 00000000 		.4byte	.LFB72
 1911 001c A0000000 		.4byte	.LFE72
 1912 0020 00000000 		.4byte	.LFB73
 1913 0024 1E000000 		.4byte	.LFE73
 1914 0028 00000000 		.4byte	.LFB74
 1915 002c 1A000000 		.4byte	.LFE74
 1916 0030 00000000 		.4byte	0
 1917 0034 00000000 		.4byte	0
 1918              		.section	.debug_line,"",%progbits
 1919              	.Ldebug_line0:
 1920 0000 05030000 		.section	.debug_str,"MS",%progbits,1
 1920      0200DF01 
 1920      00000201 
 1920      FB0E0D00 
 1920      01010101 
 1921              	.LASF50:
 1922 0000 43795261 		.ascii	"CyRamVectors\000"
 1922      6D566563 
 1922      746F7273 
 1922      00
 1923              	.LASF40:
 1924 000d 72656365 		.ascii	"receive_data\000"
 1924      6976655F 
 1924      64617461 
 1924      00
 1925              	.LASF39:
 1926 001a 74656D70 		.ascii	"temp\000"
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccD7tdgc.s 			page 44


 1926      00
 1927              	.LASF28:
 1928 001f 6375725F 		.ascii	"cur_dest\000"
 1928      64657374 
 1928      00
 1929              	.LASF20:
 1930 0028 73697A65 		.ascii	"sizetype\000"
 1930      74797065 
 1930      00
 1931              	.LASF43:
 1932 0031 78506F72 		.ascii	"xPortSysTickHandler\000"
 1932      74537973 
 1932      5469636B 
 1932      48616E64 
 1932      6C657200 
 1933              	.LASF23:
 1934 0045 5461736B 		.ascii	"TaskHandle_t\000"
 1934      48616E64 
 1934      6C655F74 
 1934      00
 1935              	.LASF59:
 1936 0052 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1936      43313120 
 1936      352E342E 
 1936      31203230 
 1936      31363036 
 1937 0085 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1937      20726576 
 1937      6973696F 
 1937      6E203233 
 1937      37373135 
 1938 00b8 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1938      66756E63 
 1938      74696F6E 
 1938      2D736563 
 1938      74696F6E 
 1939              	.LASF19:
 1940 00e0 6C6F6E67 		.ascii	"long double\000"
 1940      20646F75 
 1940      626C6500 
 1941              	.LASF7:
 1942 00ec 5F5F7569 		.ascii	"__uint32_t\000"
 1942      6E743332 
 1942      5F7400
 1943              	.LASF36:
 1944 00f7 5049445F 		.ascii	"PID_data\000"
 1944      64617461 
 1944      00
 1945              	.LASF18:
 1946 0100 63796973 		.ascii	"cyisraddress\000"
 1946      72616464 
 1946      72657373 
 1946      00
 1947              	.LASF2:
 1948 010d 73686F72 		.ascii	"short int\000"
 1948      7420696E 
 1948      7400
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccD7tdgc.s 			page 45


 1949              	.LASF12:
 1950 0117 75696E74 		.ascii	"uint8_t\000"
 1950      385F7400 
 1951              	.LASF44:
 1952 011f 76506F72 		.ascii	"vPortSVCHandler\000"
 1952      74535643 
 1952      48616E64 
 1952      6C657200 
 1953              	.LASF45:
 1954 012f 76417070 		.ascii	"vApplicationStackOverflowHook\000"
 1954      6C696361 
 1954      74696F6E 
 1954      53746163 
 1954      6B4F7665 
 1955              	.LASF46:
 1956 014d 70785461 		.ascii	"pxTask\000"
 1956      736B00
 1957              	.LASF15:
 1958 0154 666C6F61 		.ascii	"float\000"
 1958      7400
 1959              	.LASF9:
 1960 015a 6C6F6E67 		.ascii	"long long int\000"
 1960      206C6F6E 
 1960      6720696E 
 1960      7400
 1961              	.LASF53:
 1962 0168 71756575 		.ascii	"queue_handle\000"
 1962      655F6861 
 1962      6E646C65 
 1962      00
 1963              	.LASF37:
 1964 0175 6C6F6361 		.ascii	"local_write\000"
 1964      6C5F7772 
 1964      69746500 
 1965              	.LASF6:
 1966 0181 6C6F6E67 		.ascii	"long int\000"
 1966      20696E74 
 1966      00
 1967              	.LASF35:
 1968 018a 77686565 		.ascii	"wheel_data\000"
 1968      6C5F6461 
 1968      746100
 1969              	.LASF34:
 1970 0195 74696D65 		.ascii	"time_prev\000"
 1970      5F707265 
 1970      7600
 1971              	.LASF62:
 1972 019f 5461736B 		.ascii	"TaskControlBlock_t\000"
 1972      436F6E74 
 1972      726F6C42 
 1972      6C6F636B 
 1972      5F7400
 1973              	.LASF4:
 1974 01b2 5F5F7569 		.ascii	"__uint8_t\000"
 1974      6E74385F 
 1974      7400
 1975              	.LASF49:
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccD7tdgc.s 			page 46


 1976 01bc 7078506F 		.ascii	"pxPort\000"
 1976      727400
 1977              	.LASF48:
 1978 01c3 76417070 		.ascii	"vApplicationMallocFailedHook\000"
 1978      6C696361 
 1978      74696F6E 
 1978      4D616C6C 
 1978      6F634661 
 1979              	.LASF58:
 1980 01e0 69734D61 		.ascii	"isMaster\000"
 1980      73746572 
 1980      00
 1981              	.LASF1:
 1982 01e9 756E7369 		.ascii	"unsigned char\000"
 1982      676E6564 
 1982      20636861 
 1982      7200
 1983              	.LASF22:
 1984 01f7 5469636B 		.ascii	"TickType_t\000"
 1984      54797065 
 1984      5F7400
 1985              	.LASF31:
 1986 0202 6572726F 		.ascii	"error_sum\000"
 1986      725F7375 
 1986      6D00
 1987              	.LASF25:
 1988 020c 53656D61 		.ascii	"SemaphoreHandle_t\000"
 1988      70686F72 
 1988      6548616E 
 1988      646C655F 
 1988      7400
 1989              	.LASF27:
 1990 021e 70726576 		.ascii	"prev_dest\000"
 1990      5F646573 
 1990      7400
 1991              	.LASF0:
 1992 0228 7369676E 		.ascii	"signed char\000"
 1992      65642063 
 1992      68617200 
 1993              	.LASF10:
 1994 0234 6C6F6E67 		.ascii	"long long unsigned int\000"
 1994      206C6F6E 
 1994      6720756E 
 1994      7369676E 
 1994      65642069 
 1995              	.LASF14:
 1996 024b 75696E74 		.ascii	"uint32_t\000"
 1996      33325F74 
 1996      00
 1997              	.LASF11:
 1998 0254 756E7369 		.ascii	"unsigned int\000"
 1998      676E6564 
 1998      20696E74 
 1998      00
 1999              	.LASF21:
 2000 0261 42617365 		.ascii	"BaseType_t\000"
 2000      54797065 
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccD7tdgc.s 			page 47


 2000      5F7400
 2001              	.LASF52:
 2002 026c 67617465 		.ascii	"gatekeeper\000"
 2002      6B656570 
 2002      657200
 2003              	.LASF33:
 2004 0277 74696D65 		.ascii	"time\000"
 2004      00
 2005              	.LASF29:
 2006 027c 6572726F 		.ascii	"error_prev\000"
 2006      725F7072 
 2006      657600
 2007              	.LASF3:
 2008 0287 73686F72 		.ascii	"short unsigned int\000"
 2008      7420756E 
 2008      7369676E 
 2008      65642069 
 2008      6E7400
 2009              	.LASF17:
 2010 029a 63686172 		.ascii	"char\000"
 2010      00
 2011              	.LASF32:
 2012 029f 6D6F746F 		.ascii	"motor_volt\000"
 2012      725F766F 
 2012      6C7400
 2013              	.LASF65:
 2014 02aa 6D61696E 		.ascii	"main\000"
 2014      00
 2015              	.LASF38:
 2016 02af 74797065 		.ascii	"type\000"
 2016      00
 2017              	.LASF13:
 2018 02b4 696E7433 		.ascii	"int32_t\000"
 2018      325F7400 
 2019              	.LASF42:
 2020 02bc 78506F72 		.ascii	"xPortPendSVHandler\000"
 2020      7450656E 
 2020      64535648 
 2020      616E646C 
 2020      657200
 2021              	.LASF26:
 2022 02cf 78436F6D 		.ascii	"xComPortHandle\000"
 2022      506F7274 
 2022      48616E64 
 2022      6C6500
 2023              	.LASF66:
 2024 02de 70727648 		.ascii	"prvHardwareSetup\000"
 2024      61726477 
 2024      61726553 
 2024      65747570 
 2024      00
 2025              	.LASF55:
 2026 02ef 62756666 		.ascii	"buffer\000"
 2026      657200
 2027              	.LASF60:
 2028 02f6 6D61696E 		.ascii	"main.c\000"
 2028      2E6300
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccD7tdgc.s 			page 48


 2029              	.LASF8:
 2030 02fd 6C6F6E67 		.ascii	"long unsigned int\000"
 2030      20756E73 
 2030      69676E65 
 2030      6420696E 
 2030      7400
 2031              	.LASF16:
 2032 030f 646F7562 		.ascii	"double\000"
 2032      6C6500
 2033              	.LASF61:
 2034 0316 5C5C6164 		.ascii	"\\\\ad.monash.edu\\home\\User041\\sdsir3\\Documents"
 2034      2E6D6F6E 
 2034      6173682E 
 2034      6564755C 
 2034      686F6D65 
 2035 0343 5C476974 		.ascii	"\\GitHub\\FYP_POSCCreator_Master\\FYP_PSOCCreator_M"
 2035      4875625C 
 2035      4659505F 
 2035      504F5343 
 2035      43726561 
 2036 0373 61737465 		.ascii	"aster\\CORTEX_CY8C5588_PSoC_Creator_GCC\\FreeRTOS_D"
 2036      725C434F 
 2036      52544558 
 2036      5F435938 
 2036      43353538 
 2037 03a4 656D6F2E 		.ascii	"emo.cydsn\000"
 2037      63796473 
 2037      6E00
 2038              	.LASF54:
 2039 03ae 72785F72 		.ascii	"rx_receive\000"
 2039      65636569 
 2039      766500
 2040              	.LASF5:
 2041 03b9 5F5F696E 		.ascii	"__int32_t\000"
 2041      7433325F 
 2041      7400
 2042              	.LASF24:
 2043 03c3 51756575 		.ascii	"QueueHandle_t\000"
 2043      6548616E 
 2043      646C655F 
 2043      7400
 2044              	.LASF30:
 2045 03d1 6572726F 		.ascii	"error\000"
 2045      7200
 2046              	.LASF63:
 2047 03d7 76506F72 		.ascii	"vPortRaiseBASEPRI\000"
 2047      74526169 
 2047      73654241 
 2047      53455052 
 2047      4900
 2048              	.LASF57:
 2049 03e9 72696768 		.ascii	"right_wheel\000"
 2049      745F7768 
 2049      65656C00 
 2050              	.LASF51:
 2051 03f5 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2051      52784275 
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccD7tdgc.s 			page 49


 2051      66666572 
 2051      00
 2052              	.LASF56:
 2053 0402 6C656674 		.ascii	"left_wheel\000"
 2053      5F776865 
 2053      656C00
 2054              	.LASF41:
 2055 040d 5049445F 		.ascii	"PID_initialise\000"
 2055      696E6974 
 2055      69616C69 
 2055      736500
 2056              	.LASF64:
 2057 041c 756C4E65 		.ascii	"ulNewBASEPRI\000"
 2057      77424153 
 2057      45505249 
 2057      00
 2058              	.LASF47:
 2059 0429 70635461 		.ascii	"pcTaskName\000"
 2059      736B4E61 
 2059      6D6500
 2060              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
