<<<<<<< HEAD
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 1
=======
<<<<<<< HEAD
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccalsaR2.s 			page 1
=======
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccSeeFBQ.s 			page 1
>>>>>>> c9b510a773d88c725b10924e41e3b58e459a6304
>>>>>>> 477ec7bbc14d269664e547f45035acf333f4eb07


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.bss
  20              		.align	2
  21              	pxPort:
  22 0000 00000000 		.space	4
  23              		.global	gatekeeper
  24              		.align	2
  25              		.type	gatekeeper, %object
  26              		.size	gatekeeper, 4
  27              	gatekeeper:
  28 0004 00000000 		.space	4
  29              		.global	queue_handle
  30              		.align	2
  31              		.type	queue_handle, %object
  32              		.size	queue_handle, 4
  33              	queue_handle:
  34 0008 00000000 		.space	4
  35              		.comm	rx_receive,1,1
  36              		.comm	buffer,64,4
  37              		.comm	left_wheel,36,4
  38              		.comm	right_wheel,36,4
  39              		.comm	k,24,8
  40              		.global	isMaster
<<<<<<< HEAD
=======
<<<<<<< HEAD
>>>>>>> 477ec7bbc14d269664e547f45035acf333f4eb07
  41              		.data
  42              		.align	2
  43              		.type	isMaster, %object
  44              		.size	isMaster, 4
  45              	isMaster:
  46 0000 01000000 		.word	1
<<<<<<< HEAD
  47              		.global	first_run
  48              		.align	2
  49              		.type	first_run, %object
  50              		.size	first_run, 4
  51              	first_run:
  52 0004 01000000 		.word	1
  53              		.section	.rodata
  54              		.align	2
  55              	.LC0:
  56 0000 0A3D3D3D 		.ascii	"\012=== Master ===\012\012\000"
  56      204D6173 
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 2


  56      74657220 
  56      3D3D3D0A 
  56      0A00
  57 0012 0000     		.align	2
  58              	.LC1:
  59 0014 0A3D3D3D 		.ascii	"\012=== Slave ===\012\012\000"
  59      20536C61 
  59      7665203D 
  59      3D3D0A0A 
  59      00
  60 0025 000000   		.align	2
  61              	.LC2:
  62 0028 0A3D3D3D 		.ascii	"\012=== NEW RUN ===\012\012\000"
  62      204E4557 
  62      2052554E 
  62      203D3D3D 
  62      0A0A00
  63 003b 00       		.align	2
  64              	.LC3:
  65 003c 696E6974 		.ascii	"initialise the PID\000"
  65      69616C69 
  65      73652074 
  65      68652050 
  65      494400
  66 004f 00       		.align	2
  67              	.LC4:
  68 0050 77616974 		.ascii	"waiting for a serial bus to come in\000"
  68      696E6720 
  68      666F7220 
  68      61207365 
  68      7269616C 
  69              		.section	.text.main,"ax",%progbits
  70              		.align	2
  71              		.global	main
  72              		.thumb
  73              		.thumb_func
  74              		.type	main, %function
  75              	main:
  76              	.LFB69:
  77              		.file 1 "main.c"
=======
  47              		.section	.rodata
  48              		.align	2
  49              	.LC0:
  50 0000 0A3D3D3D 		.ascii	"\012=== Master ===\012\012\000"
  50      204D6173 
  50      74657220 
  50      3D3D3D0A 
  50      0A00
  51 0012 0000     		.align	2
  52              	.LC1:
  53 0014 0A3D3D3D 		.ascii	"\012=== NEW RUN ===\012\012\000"
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccalsaR2.s 			page 2


  53      204E4557 
  53      2052554E 
  53      203D3D3D 
  53      0A0A00
  54 0027 00       		.align	2
  55              	.LC2:
  56 0028 696E6974 		.ascii	"initialise the PID\000"
  56      69616C69 
  56      73652074 
  56      68652050 
  56      494400
  57 003b 00       		.align	2
  58              	.LC3:
  59 003c 77616974 		.ascii	"waiting for a serial bus to come in\000"
  59      696E6720 
  59      666F7220 
  59      61207365 
  59      7269616C 
  60              		.section	.text.main,"ax",%progbits
  61              		.align	2
  62              		.global	main
  63              		.thumb
  64              		.thumb_func
  65              		.type	main, %function
  66              	main:
  67              	.LFB69:
  68              		.file 1 "main.c"
=======
  41              		.align	2
  42              		.type	isMaster, %object
  43              		.size	isMaster, 4
  44              	isMaster:
  45 000c 00000000 		.space	4
  46              		.section	.rodata
  47              		.align	2
  48              	.LC0:
  49 0000 0A3D3D3D 		.ascii	"\012=== Master ===\012\012\000"
  49      204D6173 
  49      74657220 
  49      3D3D3D0A 
  49      0A00
  50 0012 0000     		.align	2
  51              	.LC1:
  52 0014 0A3D3D3D 		.ascii	"\012=== NEW RUN ===\012\012\000"
  52      204E4557 
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccSeeFBQ.s 			page 2


  52      2052554E 
  52      203D3D3D 
  52      0A0A00
  53 0027 00       		.align	2
  54              	.LC2:
  55 0028 696E6974 		.ascii	"initialise the PID\000"
  55      69616C69 
  55      73652074 
  55      68652050 
  55      494400
  56 003b 00       		.align	2
  57              	.LC3:
  58 003c 77616974 		.ascii	"waiting for a serial bus to come in\000"
  58      696E6720 
  58      666F7220 
  58      61207365 
  58      7269616C 
  59              		.section	.text.main,"ax",%progbits
  60              		.align	2
  61              		.global	main
  62              		.thumb
  63              		.thumb_func
  64              		.type	main, %function
  65              	main:
  66              	.LFB69:
  67              		.file 1 "main.c"
>>>>>>> c9b510a773d88c725b10924e41e3b58e459a6304
>>>>>>> 477ec7bbc14d269664e547f45035acf333f4eb07
   1:main.c        **** /*
   2:main.c        ****  * FreeRTOS Kernel V10.0.1
   3:main.c        ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:main.c        ****  *
   5:main.c        ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:main.c        ****  * this software and associated documentation files (the "Software"), to deal in
   7:main.c        ****  * the Software without restriction, including without limitation the rights to
   8:main.c        ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:main.c        ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:main.c        ****  * subject to the following conditions:
  11:main.c        ****  *
  12:main.c        ****  * The above copyright notice and this permission notice shall be included in all
  13:main.c        ****  * copies or substantial portions of the Software.
  14:main.c        ****  *
  15:main.c        ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:main.c        ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:main.c        ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 3


  18:main.c        ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:main.c        ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:main.c        ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:main.c        ****  *
  22:main.c        ****  * http://www.FreeRTOS.org
  23:main.c        ****  * http://aws.amazon.com/freertos
  24:main.c        ****  *
  25:main.c        ****  * 1 tab == 4 spaces!
  26:main.c        ****  */
  27:main.c        **** 
  28:main.c        **** /* This is the master file !!!!!!  */
  29:main.c        **** 
  30:main.c        **** 
<<<<<<< HEAD
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccalsaR2.s 			page 3
=======
  31:main.c        **** 
<<<<<<< HEAD
=======
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccSeeFBQ.s 			page 3
>>>>>>> c9b510a773d88c725b10924e41e3b58e459a6304


  31:main.c        **** 
>>>>>>> 477ec7bbc14d269664e547f45035acf333f4eb07
  32:main.c        **** 
  33:main.c        **** /* Standard includes */
  34:main.c        **** #include <device.h>
  35:main.c        **** #include <stdio.h>
  36:main.c        **** #include <stdint.h>
  37:main.c        **** #include <stdio.h>
  38:main.c        **** #include <stdint.h>
  39:main.c        **** #include <stdlib.h>
  40:main.c        **** #include <string.h>
  41:main.c        ****  
  42:main.c        **** 
  43:main.c        **** /* FreeRTOS includes */
  44:main.c        **** #include "FreeRTOS.h"
  45:main.c        **** #include "task.h"
  46:main.c        **** #include "semphr.h"
  47:main.c        **** #include "serial.h"
  48:main.c        **** 
  49:main.c        **** /* My headers */
  50:main.c        **** #include "movement.h"
  51:main.c        **** 
  52:main.c        **** /* The time between cycles of the 'check' functionality (defined within the
  53:main.c        **** tick hook. */
  54:main.c        **** #define mainCHECK_DELAY						( ( TickType_t ) 5000 / portTICK_PERIOD_MS )
  55:main.c        **** #define mainCOM_LED							( 3 )
  56:main.c        **** 
  57:main.c        **** /* The number of nano seconds between each processor clock. */
  58:main.c        **** #define mainNS_PER_CLOCK ( ( unsigned long ) ( ( 1.0 / ( double ) configCPU_CLOCK_HZ ) * 1000000000
  59:main.c        **** 
  60:main.c        **** /* Task priorities. */
  61:main.c        **** #define mainSENDER_PRIORITY       			( tskIDLE_PRIORITY )
  62:main.c        **** #define mainRECEIVER_PRIORITY        		( tskIDLE_PRIORITY )
  63:main.c        **** 
  64:main.c        **** #define comRX_BLOCK_TIME			( ( TickType_t ) 0xffff )
  65:main.c        **** 
  66:main.c        **** 
  67:main.c        **** void PID_initialise( void *p );
  68:main.c        **** void receive_data( void *p );
  69:main.c        **** void DMA_config();
  70:main.c        **** static void prvHardwareSetup( void );
  71:main.c        **** 
  72:main.c        **** 
  73:main.c        **** static xComPortHandle pxPort = NULL;
  74:main.c        **** xSemaphoreHandle gatekeeper = 0;
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 4


  75:main.c        **** xQueueHandle queue_handle = NULL;
  76:main.c        **** 
  77:main.c        **** 
  78:main.c        **** /* global variables */
  79:main.c        **** signed char rx_receive;
  80:main.c        **** unsigned char buffer[64];
  81:main.c        **** 
  82:main.c        **** 
  83:main.c        **** wheel_data left_wheel;
  84:main.c        **** wheel_data right_wheel;
  85:main.c        **** PID_data k;
  86:main.c        **** 
<<<<<<< HEAD
  87:main.c        **** int isMaster = 1;           // use 1 if it is the master, 0 if it is the slave.
  88:main.c        **** int first_run=1;
  89:main.c        **** 
  90:main.c        **** // START OF FUNCTIONS
  91:main.c        **** int main( void ) {
  78              		.loc 1 91 0
  79              		.cfi_startproc
  80              		@ args = 0, pretend = 0, frame = 256
  81              		@ frame_needed = 1, uses_anonymous_args = 0
  82 0000 B0B5     		push	{r4, r5, r7, lr}
  83              		.cfi_def_cfa_offset 16
  84              		.cfi_offset 4, -16
  85              		.cfi_offset 5, -12
  86              		.cfi_offset 7, -8
  87              		.cfi_offset 14, -4
  88 0002 C2B0     		sub	sp, sp, #264
  89              		.cfi_def_cfa_offset 280
  90 0004 02AF     		add	r7, sp, #8
  91              		.cfi_def_cfa 7, 272
  92:main.c        **** 	const signed char * run[64];
  93:main.c        ****     if (isMaster){
  92              		.loc 1 93 0
  93 0006 2D4B     		ldr	r3, .L5
  94 0008 1B68     		ldr	r3, [r3]
  95 000a 002B     		cmp	r3, #0
  96 000c 0ED0     		beq	.L2
  94:main.c        ****     /* This is the for loop for the master system */
  95:main.c        ****         sprintf((char *) run, "\n=== Master ===\n\n");
  97              		.loc 1 95 0
  98 000e 3B46     		mov	r3, r7
  99 0010 2B4A     		ldr	r2, .L5+4
 100 0012 1C46     		mov	r4, r3
 101 0014 1546     		mov	r5, r2
 102 0016 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 103 0018 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 104 001a 2B68     		ldr	r3, [r5]
 105 001c 2380     		strh	r3, [r4]	@ movhi
  96:main.c        ****         vSerialPutString(pxPort, (const signed char *) run, 64);
 106              		.loc 1 96 0
 107 001e 294B     		ldr	r3, .L5+8
 108 0020 1B68     		ldr	r3, [r3]
 109 0022 3946     		mov	r1, r7
 110 0024 4022     		movs	r2, #64
 111 0026 1846     		mov	r0, r3
 112 0028 FFF7FEFF 		bl	vSerialPutString
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 5


 113              	.L2:
  97:main.c        ****     }
  98:main.c        ****     if (~isMaster){
 114              		.loc 1 98 0
 115 002c 234B     		ldr	r3, .L5
 116 002e 1B68     		ldr	r3, [r3]
 117 0030 B3F1FF3F 		cmp	r3, #-1
 118 0034 0ED0     		beq	.L3
  99:main.c        ****     /* This is the for loop for the slave system */
 100:main.c        ****         sprintf((char *) run, "\n=== Slave ===\n\n");
 119              		.loc 1 100 0
 120 0036 3B46     		mov	r3, r7
 121 0038 234A     		ldr	r2, .L5+12
 122 003a 1C46     		mov	r4, r3
 123 003c 1546     		mov	r5, r2
 124 003e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 125 0040 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 126 0042 2B68     		ldr	r3, [r5]
 127 0044 2370     		strb	r3, [r4]
 101:main.c        ****         vSerialPutString(pxPort, (const signed char *) run, 64);
 128              		.loc 1 101 0
 129 0046 1F4B     		ldr	r3, .L5+8
 130 0048 1B68     		ldr	r3, [r3]
 131 004a 3946     		mov	r1, r7
 132 004c 4022     		movs	r2, #64
 133 004e 1846     		mov	r0, r3
 134 0050 FFF7FEFF 		bl	vSerialPutString
 135              	.L3:
 102:main.c        ****       }  
 103:main.c        ****     prvHardwareSetup();     
 136              		.loc 1 103 0
 137 0054 FFF7FEFF 		bl	prvHardwareSetup
 104:main.c        ****     sprintf((char *) run, "\n=== NEW RUN ===\n\n");
 138              		.loc 1 104 0
 139 0058 3B46     		mov	r3, r7
 140 005a 1C4A     		ldr	r2, .L5+16
 141 005c 1C46     		mov	r4, r3
 142 005e 1546     		mov	r5, r2
 143 0060 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 144 0062 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 145 0064 2B68     		ldr	r3, [r5]
 146 0066 1A46     		mov	r2, r3	@ movhi
 147 0068 2280     		strh	r2, [r4]	@ movhi
 148 006a 0234     		adds	r4, r4, #2
 149 006c 1B0C     		lsrs	r3, r3, #16
 150 006e 2370     		strb	r3, [r4]
=======
<<<<<<< HEAD
  87:main.c        **** int isMaster = 1;           // use 1 if it is the master, 0 if it is the slave.
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccalsaR2.s 			page 4
=======
  87:main.c        **** int isMaster = 0;           // use 1 if it is the master, 0 if it is the slave.
  88:main.c        **** 
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccSeeFBQ.s 			page 4
>>>>>>> c9b510a773d88c725b10924e41e3b58e459a6304


  88:main.c        **** 
  89:main.c        **** 
  90:main.c        **** // START OF FUNCTIONS
  91:main.c        **** int main( void ) {
  69              		.loc 1 91 0
  70              		.cfi_startproc
  71              		@ args = 0, pretend = 0, frame = 256
  72              		@ frame_needed = 1, uses_anonymous_args = 0
  73 0000 B0B5     		push	{r4, r5, r7, lr}
  74              		.cfi_def_cfa_offset 16
  75              		.cfi_offset 4, -16
  76              		.cfi_offset 5, -12
  77              		.cfi_offset 7, -8
  78              		.cfi_offset 14, -4
  79 0002 C2B0     		sub	sp, sp, #264
  80              		.cfi_def_cfa_offset 280
  81 0004 02AF     		add	r7, sp, #8
  82              		.cfi_def_cfa 7, 272
  92:main.c        **** 	const signed char * run[64];
  93:main.c        ****     if (isMaster){
  83              		.loc 1 93 0
  84 0006 264B     		ldr	r3, .L4
  85 0008 1B68     		ldr	r3, [r3]
  86 000a 002B     		cmp	r3, #0
  87 000c 02D0     		beq	.L2
  94:main.c        ****     /* This is the for loop for the master system */
  95:main.c        ****       Laser_Write(1);  
  88              		.loc 1 95 0
  89 000e 0120     		movs	r0, #1
  90 0010 FFF7FEFF 		bl	Laser_Write
  91              	.L2:
  96:main.c        ****         
  97:main.c        ****         
  98:main.c        ****     }
  99:main.c        ****     if (~isMaster){
 100:main.c        ****     /* This is the for loop for the slave system */
 101:main.c        ****       }  
 102:main.c        ****     prvHardwareSetup(); 
<<<<<<< HEAD
  92              		.loc 1 102 0
  93 0014 FFF7FEFF 		bl	prvHardwareSetup
 103:main.c        ****     //Laser_Write(1);
 104:main.c        ****     LED_GREEN_Write(1);
  94              		.loc 1 104 0
  95 0018 0120     		movs	r0, #1
  96 001a FFF7FEFF 		bl	LED_GREEN_Write
 105:main.c        ****     //LED_BLUE_Write(1);
 106:main.c        ****     sprintf((char *) run, "\n=== Master ===\n\n");
  97              		.loc 1 106 0
  98 001e 3B46     		mov	r3, r7
  99 0020 204A     		ldr	r2, .L4+4
 100 0022 1C46     		mov	r4, r3
 101 0024 1546     		mov	r5, r2
 102 0026 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 103 0028 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 104 002a 2B68     		ldr	r3, [r5]
 105 002c 2380     		strh	r3, [r4]	@ movhi
 107:main.c        ****     vSerialPutString(pxPort, (const signed char *) run, 64);
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccalsaR2.s 			page 5


 106              		.loc 1 107 0
 107 002e 1E4B     		ldr	r3, .L4+8
 108 0030 1B68     		ldr	r3, [r3]
 109 0032 3946     		mov	r1, r7
 110 0034 4022     		movs	r2, #64
 111 0036 1846     		mov	r0, r3
 112 0038 FFF7FEFF 		bl	vSerialPutString
 108:main.c        ****     
 109:main.c        ****     sprintf((char *) run, "\n=== NEW RUN ===\n\n");
 113              		.loc 1 109 0
 114 003c 3B46     		mov	r3, r7
 115 003e 1B4A     		ldr	r2, .L4+12
 116 0040 1C46     		mov	r4, r3
 117 0042 1546     		mov	r5, r2
 118 0044 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 119 0046 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 120 0048 2B68     		ldr	r3, [r5]
 121 004a 1A46     		mov	r2, r3	@ movhi
 122 004c 2280     		strh	r2, [r4]	@ movhi
 123 004e 0234     		adds	r4, r4, #2
 124 0050 1B0C     		lsrs	r3, r3, #16
 125 0052 2370     		strb	r3, [r4]
 110:main.c        ****     vSerialPutString(pxPort, (const signed char *) run, 64);
 126              		.loc 1 110 0
 127 0054 144B     		ldr	r3, .L4+8
 128 0056 1B68     		ldr	r3, [r3]
 129 0058 3946     		mov	r1, r7
 130 005a 4022     		movs	r2, #64
 131 005c 1846     		mov	r0, r3
 132 005e FFF7FEFF 		bl	vSerialPutString
 111:main.c        ****     
 112:main.c        ****     gatekeeper = xSemaphoreCreateMutex();
 133              		.loc 1 112 0
 134 0062 0120     		movs	r0, #1
 135 0064 FFF7FEFF 		bl	xQueueCreateMutex
 136 0068 0246     		mov	r2, r0
 137 006a 114B     		ldr	r3, .L4+16
 138 006c 1A60     		str	r2, [r3]
 113:main.c        ****     
 114:main.c        ****     xTaskCreate( PID_initialise, (const char*) "initialise the PID", 1024, NULL, 2, NULL );
 139              		.loc 1 114 0
 140 006e 0023     		movs	r3, #0
 141 0070 0193     		str	r3, [sp, #4]
 142 0072 0223     		movs	r3, #2
 143 0074 0093     		str	r3, [sp]
 144 0076 0023     		movs	r3, #0
 145 0078 4FF48062 		mov	r2, #1024
 146 007c 0D49     		ldr	r1, .L4+20
 147 007e 0E48     		ldr	r0, .L4+24
 148 0080 FFF7FEFF 		bl	xTaskCreate
 115:main.c        ****     xTaskCreate( receive_data, (const char*) "waiting for a serial bus to come in", 1024, NULL, 1, 
 149              		.loc 1 115 0
 150 0084 0023     		movs	r3, #0
 151 0086 0193     		str	r3, [sp, #4]
 152 0088 0123     		movs	r3, #1
 153 008a 0093     		str	r3, [sp]
 154 008c 0023     		movs	r3, #0
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccalsaR2.s 			page 6


 155 008e 4FF48062 		mov	r2, #1024
 156 0092 0A49     		ldr	r1, .L4+28
 157 0094 0A48     		ldr	r0, .L4+32
 158 0096 FFF7FEFF 		bl	xTaskCreate
 116:main.c        ****     
 117:main.c        **** 	vTaskStartScheduler();
 159              		.loc 1 117 0
 160 009a FFF7FEFF 		bl	vTaskStartScheduler
 161              	.L3:
 118:main.c        **** 	for( ;; );  // You won't actually reach this for loop.
 162              		.loc 1 118 0 discriminator 1
 163 009e FEE7     		b	.L3
 164              	.L5:
 165              		.align	2
 166              	.L4:
 167 00a0 00000000 		.word	isMaster
 168 00a4 00000000 		.word	.LC0
 169 00a8 00000000 		.word	pxPort
 170 00ac 14000000 		.word	.LC1
 171 00b0 00000000 		.word	gatekeeper
 172 00b4 28000000 		.word	.LC2
 173 00b8 00000000 		.word	PID_initialise
 174 00bc 3C000000 		.word	.LC3
 175 00c0 00000000 		.word	receive_data
 176              		.cfi_endproc
 177              	.LFE69:
 178              		.size	main, .-main
 179              		.section	.rodata
 180              		.align	2
 181              	.LC4:
 182 0060 62756666 		.ascii	"buffer read as %s\012\000"
 182      65722072 
 182      65616420 
 182      61732025 
 182      730A00
 183 0073 00       		.align	2
 184              	.LC5:
 185 0074 6C656674 		.ascii	"left inc: %i\012right inc: %i\012\000"
 185      20696E63 
 185      3A202569 
 185      0A726967 
 185      68742069 
 186              		.align	2
 187              	.LC6:
 188 0090 4B702056 		.ascii	"Kp Value: %f\000"
 188      616C7565 
 188      3A202566 
 188      00
 189 009d 000000   		.align	2
 190              	.LC7:
 191 00a0 56455254 		.ascii	"VERTICAL \012\000"
 191      4943414C 
 191      200A00
 192 00ab 00       		.align	2
 193              	.LC8:
 194 00ac 484F5249 		.ascii	"HORIZONTAL \012\000"
 194      5A4F4E54 
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccalsaR2.s 			page 7


 194      414C200A 
 194      00
 195              		.section	.text.receive_data,"ax",%progbits
 196              		.align	2
 197              		.global	receive_data
 198              		.thumb
 199              		.thumb_func
 200              		.type	receive_data, %function
 201              	receive_data:
 202              	.LFB70:
 119:main.c        **** }
 120:main.c        **** 
 121:main.c        **** void receive_data( void *p ) {
 203              		.loc 1 121 0
 204              		.cfi_startproc
 205              		@ args = 0, pretend = 0, frame = 288
 206              		@ frame_needed = 1, uses_anonymous_args = 0
 207 0000 90B5     		push	{r4, r7, lr}
 208              		.cfi_def_cfa_offset 12
 209              		.cfi_offset 4, -12
 210              		.cfi_offset 7, -8
 211              		.cfi_offset 14, -4
 212 0002 CBB0     		sub	sp, sp, #300
 213              		.cfi_def_cfa_offset 312
 214 0004 02AF     		add	r7, sp, #8
 215              		.cfi_def_cfa 7, 304
 216 0006 3B1D     		adds	r3, r7, #4
 217 0008 1860     		str	r0, [r3]
 122:main.c        ****     
 123:main.c        ****     p = NULL;
 218              		.loc 1 123 0
 219 000a 3B1D     		adds	r3, r7, #4
 220 000c 0022     		movs	r2, #0
 221 000e 1A60     		str	r2, [r3]
 124:main.c        ****     
 125:main.c        ****     const signed char * local_write[64];
 126:main.c        ****     int i = 0;
 222              		.loc 1 126 0
 223 0010 0023     		movs	r3, #0
 224 0012 C7F81C31 		str	r3, [r7, #284]
 127:main.c        ****     int go = 0;
 225              		.loc 1 127 0
 226 0016 0023     		movs	r3, #0
 227 0018 C7F81831 		str	r3, [r7, #280]
 128:main.c        ****     signed char type = 0;
 228              		.loc 1 128 0
 229 001c 0023     		movs	r3, #0
 230 001e 87F81731 		strb	r3, [r7, #279]
 231              	.L19:
 129:main.c        ****     char temp[10];
 130:main.c        ****     while(1) {
 131:main.c        ****         if (pdTRUE == xSerialGetChar(pxPort, &rx_receive, comRX_BLOCK_TIME)) {
 232              		.loc 1 131 0
 233 0022 8B4B     		ldr	r3, .L20
 234 0024 1B68     		ldr	r3, [r3]
 235 0026 4FF6FF72 		movw	r2, #65535
 236 002a 8A49     		ldr	r1, .L20+4
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccalsaR2.s 			page 8


 237 002c 1846     		mov	r0, r3
 238 002e FFF7FEFF 		bl	xSerialGetChar
 239 0032 0346     		mov	r3, r0
 240 0034 012B     		cmp	r3, #1
 241 0036 F4D1     		bne	.L19
 132:main.c        ****             type = rx_receive;
 242              		.loc 1 132 0
 243 0038 864B     		ldr	r3, .L20+4
 244 003a 1B78     		ldrb	r3, [r3]
 245 003c 87F81731 		strb	r3, [r7, #279]
 133:main.c        ****             if(xSemaphoreTake(gatekeeper, 50000)) {
 246              		.loc 1 133 0
 247 0040 854B     		ldr	r3, .L20+8
 248 0042 1B68     		ldr	r3, [r3]
 249 0044 4CF25031 		movw	r1, #50000
 250 0048 1846     		mov	r0, r3
 251 004a FFF7FEFF 		bl	xQueueSemaphoreTake
 252 004e 0346     		mov	r3, r0
 253 0050 002B     		cmp	r3, #0
 254 0052 E6D0     		beq	.L19
 134:main.c        ****                 if(type=='1'){//
 255              		.loc 1 134 0
 256 0054 97F91731 		ldrsb	r3, [r7, #279]
 257 0058 312B     		cmp	r3, #49
 258 005a 43D1     		bne	.L8
 135:main.c        ****                     for(i=0;i<8;i++){
 259              		.loc 1 135 0
 260 005c 0023     		movs	r3, #0
 261 005e C7F81C31 		str	r3, [r7, #284]
 262 0062 16E0     		b	.L9
 263              	.L10:
 136:main.c        ****                         xSerialGetChar(pxPort, &rx_receive, comRX_BLOCK_TIME);
 264              		.loc 1 136 0 discriminator 3
 265 0064 7A4B     		ldr	r3, .L20
 266 0066 1B68     		ldr	r3, [r3]
 267 0068 4FF6FF72 		movw	r2, #65535
 268 006c 7949     		ldr	r1, .L20+4
 269 006e 1846     		mov	r0, r3
 270 0070 FFF7FEFF 		bl	xSerialGetChar
 137:main.c        ****                         buffer[i] = rx_receive;
 271              		.loc 1 137 0 discriminator 3
 272 0074 774B     		ldr	r3, .L20+4
 273 0076 93F90030 		ldrsb	r3, [r3]
 274 007a D9B2     		uxtb	r1, r3
 275 007c 774A     		ldr	r2, .L20+12
 276 007e D7F81C31 		ldr	r3, [r7, #284]
 277 0082 1344     		add	r3, r3, r2
 278 0084 0A46     		mov	r2, r1
 279 0086 1A70     		strb	r2, [r3]
 135:main.c        ****                     for(i=0;i<8;i++){
 280              		.loc 1 135 0 discriminator 3
 281 0088 D7F81C31 		ldr	r3, [r7, #284]
 282 008c 0133     		adds	r3, r3, #1
 283 008e C7F81C31 		str	r3, [r7, #284]
 284              	.L9:
 135:main.c        ****                     for(i=0;i<8;i++){
 285              		.loc 1 135 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccalsaR2.s 			page 9


 286 0092 D7F81C31 		ldr	r3, [r7, #284]
 287 0096 072B     		cmp	r3, #7
 288 0098 E4DD     		ble	.L10
 138:main.c        ****                     }
 139:main.c        ****                     sprintf((char *) local_write, "buffer read as %s\n", buffer);
 289              		.loc 1 139 0 is_stmt 1
 290 009a 07F11403 		add	r3, r7, #20
 291 009e 6F4A     		ldr	r2, .L20+12
 292 00a0 6F49     		ldr	r1, .L20+16
 293 00a2 1846     		mov	r0, r3
 294 00a4 FFF7FEFF 		bl	sprintf
 140:main.c        ****                     vSerialPutString(pxPort, (const signed char *) local_write, 64);
 295              		.loc 1 140 0
 296 00a8 694B     		ldr	r3, .L20
 297 00aa 1B68     		ldr	r3, [r3]
 298 00ac 07F11401 		add	r1, r7, #20
 299 00b0 4022     		movs	r2, #64
 300 00b2 1846     		mov	r0, r3
 301 00b4 FFF7FEFF 		bl	vSerialPutString
 141:main.c        ****                     update_inc( &left_wheel, &right_wheel, buffer);
 302              		.loc 1 141 0
 303 00b8 684A     		ldr	r2, .L20+12
 304 00ba 6A49     		ldr	r1, .L20+20
 305 00bc 6A48     		ldr	r0, .L20+24
 306 00be FFF7FEFF 		bl	update_inc
 142:main.c        ****                     sprintf((char *) local_write, "left inc: %i\nright inc: %i\n", left_wheel.inc, 
 307              		.loc 1 142 0
 308 00c2 694B     		ldr	r3, .L20+24
 309 00c4 9A69     		ldr	r2, [r3, #24]
 310 00c6 674B     		ldr	r3, .L20+20
 311 00c8 9B69     		ldr	r3, [r3, #24]
 312 00ca 07F11400 		add	r0, r7, #20
 313 00ce 6749     		ldr	r1, .L20+28
 314 00d0 FFF7FEFF 		bl	sprintf
 143:main.c        ****                     vSerialPutString(pxPort, (const signed char *) local_write, 64);
 315              		.loc 1 143 0
 316 00d4 5E4B     		ldr	r3, .L20
 317 00d6 1B68     		ldr	r3, [r3]
 318 00d8 07F11401 		add	r1, r7, #20
 319 00dc 4022     		movs	r2, #64
 320 00de 1846     		mov	r0, r3
 321 00e0 FFF7FEFF 		bl	vSerialPutString
 322              	.L8:
 144:main.c        ****                 }
 145:main.c        ****                 if(type=='2'){
 323              		.loc 1 145 0
 324 00e4 97F91731 		ldrsb	r3, [r7, #279]
 325 00e8 322B     		cmp	r3, #50
 326 00ea 01D1     		bne	.L11
 146:main.c        ****                     CySoftwareReset();
 327              		.loc 1 146 0
 328 00ec FFF7FEFF 		bl	CySoftwareReset
 329              	.L11:
 147:main.c        ****                 }  
 148:main.c        ****                 if (type=='3'){
 330              		.loc 1 148 0
 331 00f0 97F91731 		ldrsb	r3, [r7, #279]
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccalsaR2.s 			page 10


 332 00f4 332B     		cmp	r3, #51
 333 00f6 46D1     		bne	.L12
 149:main.c        ****                     for(i=0;i<8;i++){
 334              		.loc 1 149 0
 335 00f8 0023     		movs	r3, #0
 336 00fa C7F81C31 		str	r3, [r7, #284]
 337 00fe 16E0     		b	.L13
 338              	.L14:
 150:main.c        ****                         xSerialGetChar(pxPort, &rx_receive, comRX_BLOCK_TIME);
 339              		.loc 1 150 0 discriminator 3
 340 0100 534B     		ldr	r3, .L20
 341 0102 1B68     		ldr	r3, [r3]
 342 0104 4FF6FF72 		movw	r2, #65535
 343 0108 5249     		ldr	r1, .L20+4
 344 010a 1846     		mov	r0, r3
 345 010c FFF7FEFF 		bl	xSerialGetChar
 151:main.c        ****                         buffer[i] = rx_receive;
 346              		.loc 1 151 0 discriminator 3
 347 0110 504B     		ldr	r3, .L20+4
 348 0112 93F90030 		ldrsb	r3, [r3]
 349 0116 D9B2     		uxtb	r1, r3
 350 0118 504A     		ldr	r2, .L20+12
 351 011a D7F81C31 		ldr	r3, [r7, #284]
 352 011e 1344     		add	r3, r3, r2
 353 0120 0A46     		mov	r2, r1
 354 0122 1A70     		strb	r2, [r3]
 149:main.c        ****                     for(i=0;i<8;i++){
 355              		.loc 1 149 0 discriminator 3
 356 0124 D7F81C31 		ldr	r3, [r7, #284]
 357 0128 0133     		adds	r3, r3, #1
 358 012a C7F81C31 		str	r3, [r7, #284]
 359              	.L13:
 149:main.c        ****                     for(i=0;i<8;i++){
 360              		.loc 1 149 0 is_stmt 0 discriminator 1
 361 012e D7F81C31 		ldr	r3, [r7, #284]
 362 0132 072B     		cmp	r3, #7
 363 0134 E4DD     		ble	.L14
 152:main.c        ****                     }
 153:main.c        ****                     sprintf((char *) local_write, "buffer read as %s\n", buffer);
 364              		.loc 1 153 0 is_stmt 1
 365 0136 07F11403 		add	r3, r7, #20
 366 013a 484A     		ldr	r2, .L20+12
 367 013c 4849     		ldr	r1, .L20+16
 368 013e 1846     		mov	r0, r3
 369 0140 FFF7FEFF 		bl	sprintf
 154:main.c        ****                     vSerialPutString(pxPort, (const signed char *) local_write, 64);
 370              		.loc 1 154 0
 371 0144 424B     		ldr	r3, .L20
 372 0146 1B68     		ldr	r3, [r3]
 373 0148 07F11401 		add	r1, r7, #20
 374 014c 4022     		movs	r2, #64
 375 014e 1846     		mov	r0, r3
 376 0150 FFF7FEFF 		bl	vSerialPutString
 155:main.c        ****                     update_k( &k, buffer);
 377              		.loc 1 155 0
 378 0154 4149     		ldr	r1, .L20+12
 379 0156 4648     		ldr	r0, .L20+32
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccalsaR2.s 			page 11


 380 0158 FFF7FEFF 		bl	update_k
 156:main.c        ****                     snprintf((char *) local_write,64, "Kp Value: %f", k.Kp);
 381              		.loc 1 156 0
 382 015c 444B     		ldr	r3, .L20+32
 383 015e 03F10804 		add	r4, r3, #8
 384 0162 D4E90034 		ldrd	r3, [r4]
 385 0166 07F11400 		add	r0, r7, #20
 386 016a CDE90034 		strd	r3, [sp]
 387 016e 414A     		ldr	r2, .L20+36
 388 0170 4021     		movs	r1, #64
 389 0172 FFF7FEFF 		bl	snprintf
 157:main.c        ****                     
 158:main.c        ****                     vSerialPutString(pxPort, (const signed char *) local_write, 64);
 390              		.loc 1 158 0
 391 0176 364B     		ldr	r3, .L20
 392 0178 1B68     		ldr	r3, [r3]
 393 017a 07F11401 		add	r1, r7, #20
 394 017e 4022     		movs	r2, #64
 395 0180 1846     		mov	r0, r3
 396 0182 FFF7FEFF 		bl	vSerialPutString
 397              	.L12:
 159:main.c        ****                     
 160:main.c        ****                 }
 161:main.c        ****                 if (type=='4'){
 398              		.loc 1 161 0
 399 0186 97F91731 		ldrsb	r3, [r7, #279]
 400 018a 342B     		cmp	r3, #52
 401 018c 1CD1     		bne	.L15
 162:main.c        ****                     sprintf((char *) local_write, "VERTICAL \n");
 402              		.loc 1 162 0
 403 018e 07F11403 		add	r3, r7, #20
 404 0192 394A     		ldr	r2, .L20+40
 405 0194 07CA     		ldmia	r2, {r0, r1, r2}
 406 0196 03C3     		stmia	r3!, {r0, r1}
 407 0198 1A80     		strh	r2, [r3]	@ movhi
 408 019a 0233     		adds	r3, r3, #2
 409 019c 120C     		lsrs	r2, r2, #16
 410 019e 1A70     		strb	r2, [r3]
 163:main.c        ****                     vSerialPutString(pxPort, (const signed char *) local_write, 64);
 411              		.loc 1 163 0
 412 01a0 2B4B     		ldr	r3, .L20
 413 01a2 1B68     		ldr	r3, [r3]
 414 01a4 07F11401 		add	r1, r7, #20
 415 01a8 4022     		movs	r2, #64
 416 01aa 1846     		mov	r0, r3
 417 01ac FFF7FEFF 		bl	vSerialPutString
 164:main.c        ****                     PWM_1_Wakeup();                 
 418              		.loc 1 164 0
 419 01b0 FFF7FEFF 		bl	PWM_1_Wakeup
 165:main.c        ****                     PWM_1_WriteCompare(1200);//90 deg Camera;
 420              		.loc 1 165 0
 421 01b4 4FF49660 		mov	r0, #1200
 422 01b8 FFF7FEFF 		bl	PWM_1_WriteCompare
 166:main.c        ****                     CyDelay(1000);
 423              		.loc 1 166 0
 424 01bc 4FF47A70 		mov	r0, #1000
 425 01c0 FFF7FEFF 		bl	CyDelay
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccalsaR2.s 			page 12


 167:main.c        ****                     PWM_1_Sleep();
 426              		.loc 1 167 0
 427 01c4 FFF7FEFF 		bl	PWM_1_Sleep
 428              	.L15:
 168:main.c        ****                     
 169:main.c        ****                 }
 170:main.c        ****                 if (type=='5'){
 429              		.loc 1 170 0
 430 01c8 97F91731 		ldrsb	r3, [r7, #279]
 431 01cc 352B     		cmp	r3, #53
 432 01ce 1BD1     		bne	.L16
 171:main.c        ****                     sprintf((char *) local_write, "HORIZONTAL \n");
 433              		.loc 1 171 0
 434 01d0 07F11403 		add	r3, r7, #20
 435 01d4 294A     		ldr	r2, .L20+44
 436 01d6 1C46     		mov	r4, r3
 437 01d8 1346     		mov	r3, r2
 438 01da 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 439 01dc 07C4     		stmia	r4!, {r0, r1, r2}
 440 01de 2370     		strb	r3, [r4]
 172:main.c        ****                     vSerialPutString(pxPort, (const signed char *) local_write, 64);
 441              		.loc 1 172 0
 442 01e0 1B4B     		ldr	r3, .L20
 443 01e2 1B68     		ldr	r3, [r3]
 444 01e4 07F11401 		add	r1, r7, #20
 445 01e8 4022     		movs	r2, #64
 446 01ea 1846     		mov	r0, r3
 447 01ec FFF7FEFF 		bl	vSerialPutString
 173:main.c        ****                     PWM_1_Wakeup();
 448              		.loc 1 173 0
 449 01f0 FFF7FEFF 		bl	PWM_1_Wakeup
 174:main.c        ****                     PWM_1_WriteCompare(2100);//0 deg;
 450              		.loc 1 174 0
 451 01f4 40F63400 		movw	r0, #2100
 452 01f8 FFF7FEFF 		bl	PWM_1_WriteCompare
 175:main.c        ****                     CyDelay(1000);
 453              		.loc 1 175 0
 454 01fc 4FF47A70 		mov	r0, #1000
 455 0200 FFF7FEFF 		bl	CyDelay
 176:main.c        ****                     PWM_1_Sleep();
 456              		.loc 1 176 0
 457 0204 FFF7FEFF 		bl	PWM_1_Sleep
 458              	.L16:
 177:main.c        ****                     
 178:main.c        ****                 }
 179:main.c        ****                 for (i=0; i<65; i++) {
 459              		.loc 1 179 0
 460 0208 0023     		movs	r3, #0
 461 020a C7F81C31 		str	r3, [r7, #284]
 462 020e 0AE0     		b	.L17
 463              	.L18:
 180:main.c        ****                     buffer[i] = ' ';
 464              		.loc 1 180 0 discriminator 3
 465 0210 124A     		ldr	r2, .L20+12
 466 0212 D7F81C31 		ldr	r3, [r7, #284]
 467 0216 1344     		add	r3, r3, r2
 468 0218 2022     		movs	r2, #32
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccalsaR2.s 			page 13


 469 021a 1A70     		strb	r2, [r3]
 179:main.c        ****                     buffer[i] = ' ';
 470              		.loc 1 179 0 discriminator 3
 471 021c D7F81C31 		ldr	r3, [r7, #284]
 472 0220 0133     		adds	r3, r3, #1
 473 0222 C7F81C31 		str	r3, [r7, #284]
 474              	.L17:
 179:main.c        ****                     buffer[i] = ' ';
 475              		.loc 1 179 0 is_stmt 0 discriminator 1
 476 0226 D7F81C31 		ldr	r3, [r7, #284]
 477 022a 402B     		cmp	r3, #64
 478 022c F0DD     		ble	.L18
 181:main.c        ****                 }
 182:main.c        ****                 go = 0;
 479              		.loc 1 182 0 is_stmt 1
 480 022e 0023     		movs	r3, #0
 481 0230 C7F81831 		str	r3, [r7, #280]
 183:main.c        ****                 i = 0;
 482              		.loc 1 183 0
 483 0234 0023     		movs	r3, #0
 484 0236 C7F81C31 		str	r3, [r7, #284]
 184:main.c        ****                 type=0;                   
 485              		.loc 1 184 0
 486 023a 0023     		movs	r3, #0
 487 023c 87F81731 		strb	r3, [r7, #279]
 185:main.c        ****                 xSemaphoreGive(gatekeeper);
 488              		.loc 1 185 0
 489 0240 054B     		ldr	r3, .L20+8
 490 0242 1868     		ldr	r0, [r3]
 491 0244 0023     		movs	r3, #0
 492 0246 0022     		movs	r2, #0
 493 0248 0021     		movs	r1, #0
 494 024a FFF7FEFF 		bl	xQueueGenericSend
 186:main.c        ****             }
 187:main.c        ****         }
 188:main.c        ****     }
 495              		.loc 1 188 0
 496 024e E8E6     		b	.L19
 497              	.L21:
 498              		.align	2
 499              	.L20:
 500 0250 00000000 		.word	pxPort
 501 0254 00000000 		.word	rx_receive
 502 0258 00000000 		.word	gatekeeper
 503 025c 00000000 		.word	buffer
 504 0260 60000000 		.word	.LC4
 505 0264 00000000 		.word	right_wheel
 506 0268 00000000 		.word	left_wheel
 507 026c 74000000 		.word	.LC5
 508 0270 00000000 		.word	k
 509 0274 90000000 		.word	.LC6
 510 0278 A0000000 		.word	.LC7
 511 027c AC000000 		.word	.LC8
 512              		.cfi_endproc
 513              	.LFE70:
 514              		.size	receive_data, .-receive_data
 515              		.section	.rodata
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccalsaR2.s 			page 14


 516 00b9 000000   		.align	2
 517              	.LC9:
 518 00bc 6C656674 		.ascii	"left dest: %li pos: %i, right dest: %li, pos: %i\012"
 518      20646573 
 518      743A2025 
 518      6C692070 
 518      6F733A20 
 519 00ed 00       		.ascii	"\000"
 520              		.section	.text.PID_initialise,"ax",%progbits
 521              		.align	2
 522              		.global	PID_initialise
 523              		.thumb
 524              		.thumb_func
 525              		.type	PID_initialise, %function
 526              	PID_initialise:
 527              	.LFB71:
 189:main.c        **** }
 190:main.c        **** 
 191:main.c        **** void PID_initialise( void *p ) {
 528              		.loc 1 191 0
 529              		.cfi_startproc
 530              		@ args = 0, pretend = 0, frame = 264
 531              		@ frame_needed = 1, uses_anonymous_args = 0
 532 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 533              		.cfi_def_cfa_offset 20
 534              		.cfi_offset 4, -20
 535              		.cfi_offset 5, -16
 536              		.cfi_offset 6, -12
 537              		.cfi_offset 7, -8
 538              		.cfi_offset 14, -4
 539 0002 C5B0     		sub	sp, sp, #276
 540              		.cfi_def_cfa_offset 296
 541 0004 02AF     		add	r7, sp, #8
 542              		.cfi_def_cfa 7, 288
 543 0006 3B1D     		adds	r3, r7, #4
 544 0008 1860     		str	r0, [r3]
 192:main.c        ****     
 193:main.c        ****     p = NULL;
 545              		.loc 1 193 0
 546 000a 3B1D     		adds	r3, r7, #4
 547 000c 0022     		movs	r2, #0
 548 000e 1A60     		str	r2, [r3]
 194:main.c        ****         
 195:main.c        ****     initialise_wheel_data(&left_wheel);
 549              		.loc 1 195 0
 550 0010 2F48     		ldr	r0, .L25
 551 0012 FFF7FEFF 		bl	initialise_wheel_data
 196:main.c        ****     initialise_wheel_data(&right_wheel);
 552              		.loc 1 196 0
 553 0016 2F48     		ldr	r0, .L25+4
 554 0018 FFF7FEFF 		bl	initialise_wheel_data
 197:main.c        ****     
 198:main.c        ****     k.Kp = 40;
 555              		.loc 1 198 0
 556 001c 2E4A     		ldr	r2, .L25+8
 557 001e 4FF00003 		mov	r3, #0
 558 0022 2E4C     		ldr	r4, .L25+12
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccalsaR2.s 			page 15


 559 0024 C2E90234 		strd	r3, [r2, #8]
 199:main.c        ****     k.Ki = 0;
 560              		.loc 1 199 0
 561 0028 2B4A     		ldr	r2, .L25+8
 562 002a 4FF00003 		mov	r3, #0
 563 002e 4FF00004 		mov	r4, #0
 564 0032 C2E90034 		strd	r3, [r2]
 200:main.c        ****     k.Kd = 20;
 565              		.loc 1 200 0
 566 0036 284A     		ldr	r2, .L25+8
 567 0038 4FF00003 		mov	r3, #0
 568 003c 284C     		ldr	r4, .L25+16
 569 003e C2E90434 		strd	r3, [r2, #16]
 570              	.L24:
 201:main.c        ****     
 202:main.c        ****     signed char *local_write[64];  
 203:main.c        ****     
 204:main.c        ****     while(1) {
 205:main.c        ****     	if(xSemaphoreTake(gatekeeper, 50000)) {              // wait until semaphore is free:
 571              		.loc 1 205 0
 572 0042 284B     		ldr	r3, .L25+20
 573 0044 1B68     		ldr	r3, [r3]
 574 0046 4CF25031 		movw	r1, #50000
 575 004a 1846     		mov	r0, r3
 576 004c FFF7FEFF 		bl	xQueueSemaphoreTake
 577 0050 0346     		mov	r3, r0
 578 0052 002B     		cmp	r3, #0
 579 0054 37D0     		beq	.L23
 206:main.c        ****             mov_update_error(&left_wheel, &right_wheel);    // update error values
 580              		.loc 1 206 0
 581 0056 1F49     		ldr	r1, .L25+4
 582 0058 1D48     		ldr	r0, .L25
 583 005a FFF7FEFF 		bl	mov_update_error
 207:main.c        ****                 sprintf((char *) local_write, "left dest: %li pos: %i, right dest: %li, pos: %i\n",
 584              		.loc 1 207 0
 585 005e 1C4B     		ldr	r3, .L25
 586 0060 5D68     		ldr	r5, [r3, #4]
 587 0062 FFF7FEFF 		bl	M1QuadDec_GetCounter
 588 0066 0246     		mov	r2, r0
 589 0068 1346     		mov	r3, r2
 590 006a 9B06     		lsls	r3, r3, #26
 591 006c 9B1A     		subs	r3, r3, r2
 592 006e 9B01     		lsls	r3, r3, #6
 593 0070 1E46     		mov	r6, r3
 594 0072 184B     		ldr	r3, .L25+4
 595 0074 5C68     		ldr	r4, [r3, #4]
 596 0076 FFF7FEFF 		bl	M2QuadDec_GetCounter
 597 007a 0246     		mov	r2, r0
 598 007c 1346     		mov	r3, r2
 599 007e 9B06     		lsls	r3, r3, #26
 600 0080 9B1A     		subs	r3, r3, r2
 601 0082 9B01     		lsls	r3, r3, #6
 602 0084 07F10800 		add	r0, r7, #8
 603 0088 0193     		str	r3, [sp, #4]
 604 008a 0094     		str	r4, [sp]
 605 008c 3346     		mov	r3, r6
 606 008e 2A46     		mov	r2, r5
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccalsaR2.s 			page 16


 607 0090 1549     		ldr	r1, .L25+24
 608 0092 FFF7FEFF 		bl	sprintf
 208:main.c        ****                 vSerialPutString(pxPort, (signed char *) local_write, 64);
 609              		.loc 1 208 0
 610 0096 154B     		ldr	r3, .L25+28
 611 0098 1B68     		ldr	r3, [r3]
 612 009a 07F10801 		add	r1, r7, #8
 613 009e 4022     		movs	r2, #64
 614 00a0 1846     		mov	r0, r3
 615 00a2 FFF7FEFF 		bl	vSerialPutString
 209:main.c        ****             mov_get_PID(&left_wheel, &right_wheel, &k);     // calculate wheel voltage from errors 
 616              		.loc 1 209 0
 617 00a6 0C4A     		ldr	r2, .L25+8
 618 00a8 0A49     		ldr	r1, .L25+4
 619 00aa 0948     		ldr	r0, .L25
 620 00ac FFF7FEFF 		bl	mov_get_PID
 210:main.c        ****             
 211:main.c        ****             mov_Adj_Volt(&left_wheel, &right_wheel);        // adjust the voltage of the wheels
 621              		.loc 1 211 0
 622 00b0 0849     		ldr	r1, .L25+4
 623 00b2 0748     		ldr	r0, .L25
 624 00b4 FFF7FEFF 		bl	mov_Adj_Volt
 212:main.c        **** 			xSemaphoreGive(gatekeeper);                     // give the semaphore back
 625              		.loc 1 212 0
 626 00b8 0A4B     		ldr	r3, .L25+20
 627 00ba 1868     		ldr	r0, [r3]
 628 00bc 0023     		movs	r3, #0
 629 00be 0022     		movs	r2, #0
 630 00c0 0021     		movs	r1, #0
 631 00c2 FFF7FEFF 		bl	xQueueGenericSend
 632              	.L23:
 213:main.c        ****     	}
 214:main.c        ****         vTaskDelay(10);                                     // wait 10ms before going again
 633              		.loc 1 214 0
 634 00c6 0A20     		movs	r0, #10
 635 00c8 FFF7FEFF 		bl	vTaskDelay
 215:main.c        ****     }
 636              		.loc 1 215 0
 637 00cc B9E7     		b	.L24
 638              	.L26:
 639 00ce 00BF     		.align	2
 640              	.L25:
 641 00d0 00000000 		.word	left_wheel
 642 00d4 00000000 		.word	right_wheel
 643 00d8 00000000 		.word	k
 644 00dc 00004440 		.word	1078198272
 645 00e0 00003440 		.word	1077149696
 646 00e4 00000000 		.word	gatekeeper
 647 00e8 BC000000 		.word	.LC9
 648 00ec 00000000 		.word	pxPort
 649              		.cfi_endproc
 650              	.LFE71:
 651              		.size	PID_initialise, .-PID_initialise
 652              		.section	.text.prvHardwareSetup,"ax",%progbits
 653              		.align	2
 654              		.thumb
 655              		.thumb_func
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccalsaR2.s 			page 17


 656              		.type	prvHardwareSetup, %function
 657              	prvHardwareSetup:
 658              	.LFB72:
 216:main.c        **** }
 217:main.c        **** 
 218:main.c        **** void prvHardwareSetup( void ) {
 659              		.loc 1 218 0
 660              		.cfi_startproc
 661              		@ args = 0, pretend = 0, frame = 0
 662              		@ frame_needed = 1, uses_anonymous_args = 0
 663 0000 80B5     		push	{r7, lr}
 664              		.cfi_def_cfa_offset 8
 665              		.cfi_offset 7, -8
 666              		.cfi_offset 14, -4
 667 0002 00AF     		add	r7, sp, #0
 668              		.cfi_def_cfa_register 7
 219:main.c        ****     
 220:main.c        ****     /* Port layer functions that need to be copied into the vector table. */
 221:main.c        ****     extern void xPortPendSVHandler( void );
 222:main.c        ****     extern void xPortSysTickHandler( void );
 223:main.c        ****     extern void vPortSVCHandler( void );
 224:main.c        ****     extern cyisraddress CyRamVectors[];
 225:main.c        **** 
 226:main.c        **** 	/* Install the OS Interrupt Handlers. */
 227:main.c        **** 	CyRamVectors[ 11 ] = ( cyisraddress ) vPortSVCHandler;
 669              		.loc 1 227 0
 670 0004 214B     		ldr	r3, .L31
 671 0006 224A     		ldr	r2, .L31+4
 672 0008 DA62     		str	r2, [r3, #44]
 228:main.c        **** 	CyRamVectors[ 14 ] = ( cyisraddress ) xPortPendSVHandler;
 673              		.loc 1 228 0
 674 000a 204B     		ldr	r3, .L31
 675 000c 214A     		ldr	r2, .L31+8
 676 000e 9A63     		str	r2, [r3, #56]
 229:main.c        **** 	CyRamVectors[ 15 ] = ( cyisraddress ) xPortSysTickHandler;
 677              		.loc 1 229 0
 678 0010 1E4B     		ldr	r3, .L31
 679 0012 214A     		ldr	r2, .L31+12
 680 0014 DA63     		str	r2, [r3, #60]
 230:main.c        **** 
 231:main.c        **** 	/* Start-up the shared peripherals. */
 232:main.c        ****     PWM_M1_Start();
 681              		.loc 1 232 0
 682 0016 FFF7FEFF 		bl	PWM_M1_Start
 233:main.c        ****     PWM_M2_Start();
 683              		.loc 1 233 0
 684 001a FFF7FEFF 		bl	PWM_M2_Start
 234:main.c        ****     M1Clock_Start();
 685              		.loc 1 234 0
 686 001e FFF7FEFF 		bl	M1Clock_Start
 235:main.c        ****     MClock_Start();
 687              		.loc 1 235 0
 688 0022 FFF7FEFF 		bl	MClock_Start
 236:main.c        ****     
 237:main.c        ****     M1QuadDec_Start();
 689              		.loc 1 237 0
 690 0026 FFF7FEFF 		bl	M1QuadDec_Start
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccalsaR2.s 			page 18


 238:main.c        ****     M1QuadDec_Enable();
 691              		.loc 1 238 0
 692 002a FFF7FEFF 		bl	M1QuadDec_Enable
 239:main.c        ****     M1QuadDec_SetCounter(0);
 693              		.loc 1 239 0
 694 002e 0020     		movs	r0, #0
 695 0030 FFF7FEFF 		bl	M1QuadDec_SetCounter
 240:main.c        ****     
 241:main.c        ****     M2QuadDec_Start();
 696              		.loc 1 241 0
 697 0034 FFF7FEFF 		bl	M2QuadDec_Start
 242:main.c        ****     M2QuadDec_Enable();
 698              		.loc 1 242 0
 699 0038 FFF7FEFF 		bl	M2QuadDec_Enable
 243:main.c        ****     M2QuadDec_SetCounter(0);
 700              		.loc 1 243 0
 701 003c 0020     		movs	r0, #0
 702 003e FFF7FEFF 		bl	M2QuadDec_SetCounter
 244:main.c        **** 
 245:main.c        **** 	UART_1_Start();                         // Start the UART
 703              		.loc 1 245 0
 704 0042 FFF7FEFF 		bl	UART_1_Start
 246:main.c        ****     xSerialPortInitMinimal( 57600, 64 );    // Set the serial baud rate and buffer size in bytes
 705              		.loc 1 246 0
 706 0046 4021     		movs	r1, #64
 707 0048 4FF46140 		mov	r0, #57600
 708 004c FFF7FEFF 		bl	xSerialPortInitMinimal
 247:main.c        ****     
 248:main.c        ****     Timer_1_Start();
 709              		.loc 1 248 0
 710 0050 FFF7FEFF 		bl	Timer_1_Start
 249:main.c        **** 
 250:main.c        ****     /* Start up the master peripherals. */
 251:main.c        ****     if (isMaster){
 711              		.loc 1 251 0
 712 0054 114B     		ldr	r3, .L31+16
 713 0056 1B68     		ldr	r3, [r3]
 714 0058 002B     		cmp	r3, #0
 715 005a 02D0     		beq	.L28
 252:main.c        ****          Laser_Write(1);// turn on the laser
 716              		.loc 1 252 0
 717 005c 0120     		movs	r0, #1
 718 005e FFF7FEFF 		bl	Laser_Write
 719              	.L28:
 253:main.c        ****     }
 254:main.c        ****     
 255:main.c        ****     /* Start up the slave peripherals. */
 256:main.c        ****     if (~isMaster){
 720              		.loc 1 256 0
 721 0062 0E4B     		ldr	r3, .L31+16
 722 0064 1B68     		ldr	r3, [r3]
 723 0066 B3F1FF3F 		cmp	r3, #-1
 724 006a 0DD0     		beq	.L30
 257:main.c        ****         
 258:main.c        ****         Clock_1_Start();
 725              		.loc 1 258 0
 726 006c FFF7FEFF 		bl	Clock_1_Start
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccalsaR2.s 			page 19


 259:main.c        ****         PWM_1_Start();
 727              		.loc 1 259 0
 728 0070 FFF7FEFF 		bl	PWM_1_Start
 260:main.c        ****         PWM_1_WriteCompare(2100);//90 deg Camera;
 729              		.loc 1 260 0
 730 0074 40F63400 		movw	r0, #2100
 731 0078 FFF7FEFF 		bl	PWM_1_WriteCompare
 261:main.c        ****         CyDelay(1000);
 732              		.loc 1 261 0
 733 007c 4FF47A70 		mov	r0, #1000
 734 0080 FFF7FEFF 		bl	CyDelay
 262:main.c        ****         PWM_1_Sleep();
 735              		.loc 1 262 0
 736 0084 FFF7FEFF 		bl	PWM_1_Sleep
 737              	.L30:
=======
  82              		.loc 1 102 0
  83 0006 FFF7FEFF 		bl	prvHardwareSetup
 103:main.c        ****     
 104:main.c        ****     sprintf((char *) run, "\n=== Master ===\n\n");
  84              		.loc 1 104 0
  85 000a 3B46     		mov	r3, r7
  86 000c 1F4A     		ldr	r2, .L3
  87 000e 1C46     		mov	r4, r3
  88 0010 1546     		mov	r5, r2
  89 0012 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
  90 0014 0FC4     		stmia	r4!, {r0, r1, r2, r3}
  91 0016 2B68     		ldr	r3, [r5]
  92 0018 2380     		strh	r3, [r4]	@ movhi
>>>>>>> 477ec7bbc14d269664e547f45035acf333f4eb07
 105:main.c        ****     vSerialPutString(pxPort, (const signed char *) run, 64);
 151              		.loc 1 105 0
 152 0070 144B     		ldr	r3, .L5+8
 153 0072 1B68     		ldr	r3, [r3]
 154 0074 3946     		mov	r1, r7
 155 0076 4022     		movs	r2, #64
 156 0078 1846     		mov	r0, r3
 157 007a FFF7FEFF 		bl	vSerialPutString
 106:main.c        ****     
 107:main.c        ****     gatekeeper = xSemaphoreCreateMutex();
 158              		.loc 1 107 0
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 6


 159 007e 0120     		movs	r0, #1
 160 0080 FFF7FEFF 		bl	xQueueCreateMutex
 161 0084 0246     		mov	r2, r0
 162 0086 124B     		ldr	r3, .L5+20
 163 0088 1A60     		str	r2, [r3]
 108:main.c        ****     
 109:main.c        ****     xTaskCreate( PID_initialise, (const char*) "initialise the PID", 1024, NULL, 2, NULL );
 164              		.loc 1 109 0
 165 008a 0023     		movs	r3, #0
 166 008c 0193     		str	r3, [sp, #4]
 167 008e 0223     		movs	r3, #2
 168 0090 0093     		str	r3, [sp]
 169 0092 0023     		movs	r3, #0
 170 0094 4FF48062 		mov	r2, #1024
 171 0098 0E49     		ldr	r1, .L5+24
 172 009a 0F48     		ldr	r0, .L5+28
 173 009c FFF7FEFF 		bl	xTaskCreate
 110:main.c        ****     xTaskCreate( receive_data, (const char*) "waiting for a serial bus to come in", 1024, NULL, 1, 
 174              		.loc 1 110 0
 175 00a0 0023     		movs	r3, #0
 176 00a2 0193     		str	r3, [sp, #4]
 177 00a4 0123     		movs	r3, #1
 178 00a6 0093     		str	r3, [sp]
 179 00a8 0023     		movs	r3, #0
 180 00aa 4FF48062 		mov	r2, #1024
 181 00ae 0B49     		ldr	r1, .L5+32
 182 00b0 0B48     		ldr	r0, .L5+36
 183 00b2 FFF7FEFF 		bl	xTaskCreate
 111:main.c        ****     
 112:main.c        **** 	vTaskStartScheduler();
 184              		.loc 1 112 0
 185 00b6 FFF7FEFF 		bl	vTaskStartScheduler
 186              	.L4:
 113:main.c        **** 
 114:main.c        **** 	for( ;; );  // You won't actually reach this for loop.
 187              		.loc 1 114 0 discriminator 1
 188 00ba FEE7     		b	.L4
 189              	.L6:
 190              		.align	2
 191              	.L5:
 192 00bc 00000000 		.word	isMaster
 193 00c0 00000000 		.word	.LC0
 194 00c4 00000000 		.word	pxPort
 195 00c8 14000000 		.word	.LC1
 196 00cc 28000000 		.word	.LC2
 197 00d0 00000000 		.word	gatekeeper
 198 00d4 3C000000 		.word	.LC3
 199 00d8 00000000 		.word	PID_initialise
 200 00dc 50000000 		.word	.LC4
 201 00e0 00000000 		.word	receive_data
 202              		.cfi_endproc
 203              	.LFE69:
 204              		.size	main, .-main
 205              		.section	.rodata
 206              		.align	2
 207              	.LC5:
 208 0074 62756666 		.ascii	"buffer read as %s\012\000"
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 7


 208      65722072 
 208      65616420 
 208      61732025 
 208      730A00
 209 0087 00       		.align	2
 210              	.LC6:
 211 0088 6C656674 		.ascii	"left inc: %i\012right inc: %i\012\000"
 211      20696E63 
 211      3A202569 
 211      0A726967 
 211      68742069 
 212              		.align	2
 213              	.LC7:
 214 00a4 56455254 		.ascii	"VERTICAL \012\000"
 214      4943414C 
 214      200A00
 215 00af 00       		.align	2
 216              	.LC8:
 217 00b0 484F5249 		.ascii	"HORIZONTAL \012\000"
 217      5A4F4E54 
 217      414C200A 
 217      00
 218 00bd 000000   		.align	2
 219              	.LC9:
 220 00c0 4C454420 		.ascii	"LED BLUE TURN ON\000"
 220      424C5545 
 220      20545552 
 220      4E204F4E 
 220      00
 221 00d1 000000   		.align	2
 222              	.LC10:
 223 00d4 4C454420 		.ascii	"LED RED TURN ON\000"
 223      52454420 
 223      5455524E 
 223      204F4E00 
 224              		.align	2
 225              	.LC11:
 226 00e4 4C454420 		.ascii	"LED BLUE TURN OFF\000"
 226      424C5545 
 226      20545552 
 226      4E204F46 
 226      4600
 227 00f6 0000     		.align	2
 228              	.LC12:
 229 00f8 4C454420 		.ascii	"LED RED TURN OFF\000"
 229      52454420 
 229      5455524E 
 229      204F4646 
 229      00
 230              		.section	.text.receive_data,"ax",%progbits
 231              		.align	2
 232              		.global	receive_data
 233              		.thumb
 234              		.thumb_func
 235              		.type	receive_data, %function
 236              	receive_data:
 237              	.LFB70:
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 8


 115:main.c        **** }
 116:main.c        **** 
 117:main.c        **** void receive_data( void *p ) {
 238              		.loc 1 117 0
 239              		.cfi_startproc
 240              		@ args = 0, pretend = 0, frame = 288
 241              		@ frame_needed = 1, uses_anonymous_args = 0
 242 0000 B0B5     		push	{r4, r5, r7, lr}
 243              		.cfi_def_cfa_offset 16
 244              		.cfi_offset 4, -16
 245              		.cfi_offset 5, -12
 246              		.cfi_offset 7, -8
 247              		.cfi_offset 14, -4
 248 0002 C8B0     		sub	sp, sp, #288
 249              		.cfi_def_cfa_offset 304
 250 0004 00AF     		add	r7, sp, #0
 251              		.cfi_def_cfa_register 7
 252 0006 3B1D     		adds	r3, r7, #4
 253 0008 1860     		str	r0, [r3]
 118:main.c        ****     
 119:main.c        ****     p = NULL;
 254              		.loc 1 119 0
 255 000a 3B1D     		adds	r3, r7, #4
 256 000c 0022     		movs	r2, #0
 257 000e 1A60     		str	r2, [r3]
 120:main.c        ****     
 121:main.c        ****     const signed char * local_write[64];
 122:main.c        ****     int i = 0;
 258              		.loc 1 122 0
 259 0010 0023     		movs	r3, #0
 260 0012 C7F81C31 		str	r3, [r7, #284]
 123:main.c        ****     int go = 0;
 261              		.loc 1 123 0
 262 0016 0023     		movs	r3, #0
 263 0018 C7F81831 		str	r3, [r7, #280]
 124:main.c        ****     signed char type = 0;
 264              		.loc 1 124 0
 265 001c 0023     		movs	r3, #0
 266 001e 87F81731 		strb	r3, [r7, #279]
 267              	.L21:
 125:main.c        ****     char temp[10];
 126:main.c        ****     
 127:main.c        ****     while(1) {
 128:main.c        ****         if (pdTRUE == xSerialGetChar(pxPort, &rx_receive, comRX_BLOCK_TIME)) {
 268              		.loc 1 128 0
 269 0022 A24B     		ldr	r3, .L22
 270 0024 1B68     		ldr	r3, [r3]
 271 0026 4FF6FF72 		movw	r2, #65535
 272 002a A149     		ldr	r1, .L22+4
 273 002c 1846     		mov	r0, r3
 274 002e FFF7FEFF 		bl	xSerialGetChar
 275 0032 0346     		mov	r3, r0
 276 0034 012B     		cmp	r3, #1
 277 0036 F4D1     		bne	.L21
 129:main.c        ****             type = rx_receive;
 278              		.loc 1 129 0
 279 0038 9D4B     		ldr	r3, .L22+4
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 9


 280 003a 1B78     		ldrb	r3, [r3]
 281 003c 87F81731 		strb	r3, [r7, #279]
 130:main.c        ****             if(xSemaphoreTake(gatekeeper, 50000)) {
 282              		.loc 1 130 0
 283 0040 9C4B     		ldr	r3, .L22+8
 284 0042 1B68     		ldr	r3, [r3]
 285 0044 4CF25031 		movw	r1, #50000
 286 0048 1846     		mov	r0, r3
 287 004a FFF7FEFF 		bl	xQueueSemaphoreTake
 288 004e 0346     		mov	r3, r0
 289 0050 002B     		cmp	r3, #0
 290 0052 E6D0     		beq	.L21
 131:main.c        ****                 if(type=='1'){//
 291              		.loc 1 131 0
 292 0054 97F91731 		ldrsb	r3, [r7, #279]
 293 0058 312B     		cmp	r3, #49
 294 005a 43D1     		bne	.L9
 132:main.c        ****                     for(i=0;i<8;i++){
 295              		.loc 1 132 0
 296 005c 0023     		movs	r3, #0
 297 005e C7F81C31 		str	r3, [r7, #284]
 298 0062 16E0     		b	.L10
 299              	.L11:
 133:main.c        ****                         xSerialGetChar(pxPort, &rx_receive, comRX_BLOCK_TIME);
 300              		.loc 1 133 0 discriminator 3
 301 0064 914B     		ldr	r3, .L22
 302 0066 1B68     		ldr	r3, [r3]
 303 0068 4FF6FF72 		movw	r2, #65535
 304 006c 9049     		ldr	r1, .L22+4
 305 006e 1846     		mov	r0, r3
 306 0070 FFF7FEFF 		bl	xSerialGetChar
 134:main.c        ****                         buffer[i] = rx_receive;
 307              		.loc 1 134 0 discriminator 3
 308 0074 8E4B     		ldr	r3, .L22+4
 309 0076 93F90030 		ldrsb	r3, [r3]
 310 007a D9B2     		uxtb	r1, r3
 311 007c 8E4A     		ldr	r2, .L22+12
 312 007e D7F81C31 		ldr	r3, [r7, #284]
 313 0082 1344     		add	r3, r3, r2
 314 0084 0A46     		mov	r2, r1
 315 0086 1A70     		strb	r2, [r3]
 132:main.c        ****                     for(i=0;i<8;i++){
 316              		.loc 1 132 0 discriminator 3
 317 0088 D7F81C31 		ldr	r3, [r7, #284]
 318 008c 0133     		adds	r3, r3, #1
 319 008e C7F81C31 		str	r3, [r7, #284]
 320              	.L10:
 132:main.c        ****                     for(i=0;i<8;i++){
 321              		.loc 1 132 0 is_stmt 0 discriminator 1
 322 0092 D7F81C31 		ldr	r3, [r7, #284]
 323 0096 072B     		cmp	r3, #7
 324 0098 E4DD     		ble	.L11
 135:main.c        ****                     }
 136:main.c        ****                     sprintf((char *) local_write, "buffer read as %s\n", buffer);
 325              		.loc 1 136 0 is_stmt 1
 326 009a 07F11403 		add	r3, r7, #20
 327 009e 864A     		ldr	r2, .L22+12
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 10


 328 00a0 8649     		ldr	r1, .L22+16
 329 00a2 1846     		mov	r0, r3
 330 00a4 FFF7FEFF 		bl	sprintf
 137:main.c        ****                     vSerialPutString(pxPort, (const signed char *) local_write, 64);
 331              		.loc 1 137 0
 332 00a8 804B     		ldr	r3, .L22
 333 00aa 1B68     		ldr	r3, [r3]
 334 00ac 07F11401 		add	r1, r7, #20
 335 00b0 4022     		movs	r2, #64
 336 00b2 1846     		mov	r0, r3
 337 00b4 FFF7FEFF 		bl	vSerialPutString
 138:main.c        ****                     update_inc( &left_wheel, &right_wheel, buffer);
 338              		.loc 1 138 0
 339 00b8 7F4A     		ldr	r2, .L22+12
 340 00ba 8149     		ldr	r1, .L22+20
 341 00bc 8148     		ldr	r0, .L22+24
 342 00be FFF7FEFF 		bl	update_inc
 139:main.c        ****                     sprintf((char *) local_write, "left inc: %i\nright inc: %i\n", left_wheel.inc, 
 343              		.loc 1 139 0
 344 00c2 804B     		ldr	r3, .L22+24
 345 00c4 9A69     		ldr	r2, [r3, #24]
 346 00c6 7E4B     		ldr	r3, .L22+20
 347 00c8 9B69     		ldr	r3, [r3, #24]
 348 00ca 07F11400 		add	r0, r7, #20
 349 00ce 7E49     		ldr	r1, .L22+28
 350 00d0 FFF7FEFF 		bl	sprintf
 140:main.c        ****                     vSerialPutString(pxPort, (const signed char *) local_write, 64);
 351              		.loc 1 140 0
 352 00d4 754B     		ldr	r3, .L22
 353 00d6 1B68     		ldr	r3, [r3]
 354 00d8 07F11401 		add	r1, r7, #20
 355 00dc 4022     		movs	r2, #64
 356 00de 1846     		mov	r0, r3
 357 00e0 FFF7FEFF 		bl	vSerialPutString
 358              	.L9:
 141:main.c        ****                 }
 142:main.c        ****                 if(type=='2'){
 359              		.loc 1 142 0
 360 00e4 97F91731 		ldrsb	r3, [r7, #279]
 361 00e8 322B     		cmp	r3, #50
 362 00ea 01D1     		bne	.L12
 143:main.c        ****                     CySoftwareReset();
 363              		.loc 1 143 0
 364 00ec FFF7FEFF 		bl	CySoftwareReset
 365              	.L12:
 144:main.c        ****                 }  
 145:main.c        ****             
 146:main.c        ****                 if (type=='4' && ~isMaster){//Camera position for LED CV
 366              		.loc 1 146 0
 367 00f0 97F91731 		ldrsb	r3, [r7, #279]
 368 00f4 342B     		cmp	r3, #52
 369 00f6 21D1     		bne	.L13
 370              		.loc 1 146 0 is_stmt 0 discriminator 1
 371 00f8 744B     		ldr	r3, .L22+32
 372 00fa 1B68     		ldr	r3, [r3]
 373 00fc B3F1FF3F 		cmp	r3, #-1
 374 0100 1CD0     		beq	.L13
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 11


 147:main.c        ****                     sprintf((char *) local_write, "VERTICAL \n");
 375              		.loc 1 147 0 is_stmt 1
 376 0102 07F11403 		add	r3, r7, #20
 377 0106 724A     		ldr	r2, .L22+36
 378 0108 07CA     		ldmia	r2, {r0, r1, r2}
 379 010a 03C3     		stmia	r3!, {r0, r1}
 380 010c 1A80     		strh	r2, [r3]	@ movhi
 381 010e 0233     		adds	r3, r3, #2
 382 0110 120C     		lsrs	r2, r2, #16
 383 0112 1A70     		strb	r2, [r3]
 148:main.c        ****                     vSerialPutString(pxPort, (const signed char *) local_write, 64);
 384              		.loc 1 148 0
 385 0114 654B     		ldr	r3, .L22
 386 0116 1B68     		ldr	r3, [r3]
 387 0118 07F11401 		add	r1, r7, #20
 388 011c 4022     		movs	r2, #64
 389 011e 1846     		mov	r0, r3
 390 0120 FFF7FEFF 		bl	vSerialPutString
 149:main.c        ****                     PWM_1_Wakeup();                 
 391              		.loc 1 149 0
 392 0124 FFF7FEFF 		bl	PWM_1_Wakeup
 150:main.c        ****                     PWM_1_WriteCompare(1200);
 393              		.loc 1 150 0
 394 0128 4FF49660 		mov	r0, #1200
 395 012c FFF7FEFF 		bl	PWM_1_WriteCompare
 151:main.c        ****                     CyDelay(1000);
 396              		.loc 1 151 0
 397 0130 4FF47A70 		mov	r0, #1000
 398 0134 FFF7FEFF 		bl	CyDelay
 152:main.c        ****                     PWM_1_Sleep();
 399              		.loc 1 152 0
 400 0138 FFF7FEFF 		bl	PWM_1_Sleep
 401              	.L13:
 153:main.c        ****                     
 154:main.c        ****                 }
 155:main.c        ****                 if (type=='5' && ~isMaster){//Causes position for Laser DOT CV
 402              		.loc 1 155 0
 403 013c 97F91731 		ldrsb	r3, [r7, #279]
 404 0140 352B     		cmp	r3, #53
 405 0142 20D1     		bne	.L14
 406              		.loc 1 155 0 is_stmt 0 discriminator 1
 407 0144 614B     		ldr	r3, .L22+32
 408 0146 1B68     		ldr	r3, [r3]
 409 0148 B3F1FF3F 		cmp	r3, #-1
 410 014c 1BD0     		beq	.L14
 156:main.c        ****                     sprintf((char *) local_write, "HORIZONTAL \n");
 411              		.loc 1 156 0 is_stmt 1
 412 014e 07F11403 		add	r3, r7, #20
 413 0152 604A     		ldr	r2, .L22+40
 414 0154 1C46     		mov	r4, r3
 415 0156 1346     		mov	r3, r2
 416 0158 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 417 015a 07C4     		stmia	r4!, {r0, r1, r2}
 418 015c 2370     		strb	r3, [r4]
 157:main.c        ****                     vSerialPutString(pxPort, (const signed char *) local_write, 64);
 419              		.loc 1 157 0
 420 015e 534B     		ldr	r3, .L22
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 12


 421 0160 1B68     		ldr	r3, [r3]
 422 0162 07F11401 		add	r1, r7, #20
 423 0166 4022     		movs	r2, #64
 424 0168 1846     		mov	r0, r3
 425 016a FFF7FEFF 		bl	vSerialPutString
 158:main.c        ****                     PWM_1_Wakeup();
 426              		.loc 1 158 0
 427 016e FFF7FEFF 		bl	PWM_1_Wakeup
 159:main.c        ****                     PWM_1_WriteCompare(2100);//0 deg;
 428              		.loc 1 159 0
 429 0172 40F63400 		movw	r0, #2100
 430 0176 FFF7FEFF 		bl	PWM_1_WriteCompare
 160:main.c        ****                     CyDelay(1000);
 431              		.loc 1 160 0
 432 017a 4FF47A70 		mov	r0, #1000
 433 017e FFF7FEFF 		bl	CyDelay
 161:main.c        ****                     PWM_1_Sleep();
 434              		.loc 1 161 0
 435 0182 FFF7FEFF 		bl	PWM_1_Sleep
 436              	.L14:
 162:main.c        ****                     
 163:main.c        ****                 }
 164:main.c        ****                  if (type=='6' && isMaster){//TURN ON LED_BLUE
 437              		.loc 1 164 0
 438 0186 97F91731 		ldrsb	r3, [r7, #279]
 439 018a 362B     		cmp	r3, #54
 440 018c 17D1     		bne	.L15
 441              		.loc 1 164 0 is_stmt 0 discriminator 1
 442 018e 4F4B     		ldr	r3, .L22+32
 443 0190 1B68     		ldr	r3, [r3]
 444 0192 002B     		cmp	r3, #0
 445 0194 13D0     		beq	.L15
 165:main.c        ****                     sprintf((char *) local_write, "LED BLUE TURN ON");
 446              		.loc 1 165 0 is_stmt 1
 447 0196 07F11403 		add	r3, r7, #20
 448 019a 4F4A     		ldr	r2, .L22+44
 449 019c 1C46     		mov	r4, r3
 450 019e 1546     		mov	r5, r2
 451 01a0 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 452 01a2 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 453 01a4 2B68     		ldr	r3, [r5]
 454 01a6 2370     		strb	r3, [r4]
 166:main.c        ****                     vSerialPutString(pxPort, (const signed char *) local_write, 64);
 455              		.loc 1 166 0
 456 01a8 404B     		ldr	r3, .L22
 457 01aa 1B68     		ldr	r3, [r3]
 458 01ac 07F11401 		add	r1, r7, #20
 459 01b0 4022     		movs	r2, #64
 460 01b2 1846     		mov	r0, r3
 461 01b4 FFF7FEFF 		bl	vSerialPutString
 167:main.c        ****                     LED_BLUE_Write(1);                    
 462              		.loc 1 167 0
 463 01b8 0120     		movs	r0, #1
 464 01ba FFF7FEFF 		bl	LED_BLUE_Write
 465              	.L15:
 168:main.c        ****                 }
 169:main.c        ****                 if (type=='7' && isMaster){//TURN ON LED_RED
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 13


 466              		.loc 1 169 0
 467 01be 97F91731 		ldrsb	r3, [r7, #279]
 468 01c2 372B     		cmp	r3, #55
 469 01c4 16D1     		bne	.L16
 470              		.loc 1 169 0 is_stmt 0 discriminator 1
 471 01c6 414B     		ldr	r3, .L22+32
 472 01c8 1B68     		ldr	r3, [r3]
 473 01ca 002B     		cmp	r3, #0
 474 01cc 12D0     		beq	.L16
 170:main.c        ****                     sprintf((char *) local_write, "LED RED TURN ON");
 475              		.loc 1 170 0 is_stmt 1
 476 01ce 07F11403 		add	r3, r7, #20
 477 01d2 424A     		ldr	r2, .L22+48
 478 01d4 1C46     		mov	r4, r3
 479 01d6 1346     		mov	r3, r2
 480 01d8 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 481 01da 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 171:main.c        ****                     vSerialPutString(pxPort, (const signed char *) local_write, 64);
 482              		.loc 1 171 0
 483 01de 334B     		ldr	r3, .L22
 484 01e0 1B68     		ldr	r3, [r3]
 485 01e2 07F11401 		add	r1, r7, #20
 486 01e6 4022     		movs	r2, #64
 487 01e8 1846     		mov	r0, r3
 488 01ea FFF7FEFF 		bl	vSerialPutString
 172:main.c        ****                     LED_RED_Write(1);                    
 489              		.loc 1 172 0
 490 01ee 0120     		movs	r0, #1
 491 01f0 FFF7FEFF 		bl	LED_RED_Write
 492              	.L16:
 173:main.c        ****                 }
 174:main.c        ****                  if (type=='8' && isMaster){//TURN OFF LED_BLUE
 493              		.loc 1 174 0
 494 01f4 97F91731 		ldrsb	r3, [r7, #279]
 495 01f8 382B     		cmp	r3, #56
 496 01fa 17D1     		bne	.L17
 497              		.loc 1 174 0 is_stmt 0 discriminator 1
 498 01fc 334B     		ldr	r3, .L22+32
 499 01fe 1B68     		ldr	r3, [r3]
 500 0200 002B     		cmp	r3, #0
 501 0202 13D0     		beq	.L17
 175:main.c        ****                     sprintf((char *) local_write, "LED BLUE TURN OFF");
 502              		.loc 1 175 0 is_stmt 1
 503 0204 07F11403 		add	r3, r7, #20
 504 0208 354A     		ldr	r2, .L22+52
 505 020a 1C46     		mov	r4, r3
 506 020c 1546     		mov	r5, r2
 507 020e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 508 0210 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 509 0212 2B68     		ldr	r3, [r5]
 510 0214 2380     		strh	r3, [r4]	@ movhi
 176:main.c        ****                     vSerialPutString(pxPort, (const signed char *) local_write, 64);
 511              		.loc 1 176 0
 512 0216 254B     		ldr	r3, .L22
 513 0218 1B68     		ldr	r3, [r3]
 514 021a 07F11401 		add	r1, r7, #20
 515 021e 4022     		movs	r2, #64
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 14


 516 0220 1846     		mov	r0, r3
 517 0222 FFF7FEFF 		bl	vSerialPutString
 177:main.c        ****                     LED_BLUE_Write(0);                    
 518              		.loc 1 177 0
 519 0226 0020     		movs	r0, #0
 520 0228 FFF7FEFF 		bl	LED_BLUE_Write
 521              	.L17:
 178:main.c        ****                 }
 179:main.c        ****                 if (type=='9' && isMaster){//TURN OFF LED_RED
 522              		.loc 1 179 0
 523 022c 97F91731 		ldrsb	r3, [r7, #279]
 524 0230 392B     		cmp	r3, #57
 525 0232 17D1     		bne	.L18
 526              		.loc 1 179 0 is_stmt 0 discriminator 1
 527 0234 254B     		ldr	r3, .L22+32
 528 0236 1B68     		ldr	r3, [r3]
 529 0238 002B     		cmp	r3, #0
 530 023a 13D0     		beq	.L18
 180:main.c        ****                     sprintf((char *) local_write, "LED RED TURN OFF");
 531              		.loc 1 180 0 is_stmt 1
 532 023c 07F11403 		add	r3, r7, #20
 533 0240 284A     		ldr	r2, .L22+56
 534 0242 1C46     		mov	r4, r3
 535 0244 1546     		mov	r5, r2
 536 0246 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 537 0248 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 538 024a 2B68     		ldr	r3, [r5]
 539 024c 2370     		strb	r3, [r4]
 181:main.c        ****                     vSerialPutString(pxPort, (const signed char *) local_write, 64);
 540              		.loc 1 181 0
 541 024e 174B     		ldr	r3, .L22
 542 0250 1B68     		ldr	r3, [r3]
 543 0252 07F11401 		add	r1, r7, #20
 544 0256 4022     		movs	r2, #64
 545 0258 1846     		mov	r0, r3
 546 025a FFF7FEFF 		bl	vSerialPutString
 182:main.c        ****                     LED_RED_Write(0);                    
 547              		.loc 1 182 0
 548 025e 0020     		movs	r0, #0
 549 0260 FFF7FEFF 		bl	LED_RED_Write
 550              	.L18:
 183:main.c        ****                 }
 184:main.c        ****                 for (i=0; i<65; i++) {
 551              		.loc 1 184 0
 552 0264 0023     		movs	r3, #0
 553 0266 C7F81C31 		str	r3, [r7, #284]
 554 026a 0AE0     		b	.L19
 555              	.L20:
 185:main.c        ****                     buffer[i] = ' ';
 556              		.loc 1 185 0 discriminator 3
 557 026c 124A     		ldr	r2, .L22+12
 558 026e D7F81C31 		ldr	r3, [r7, #284]
 559 0272 1344     		add	r3, r3, r2
 560 0274 2022     		movs	r2, #32
 561 0276 1A70     		strb	r2, [r3]
 184:main.c        ****                     buffer[i] = ' ';
 562              		.loc 1 184 0 discriminator 3
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 15


 563 0278 D7F81C31 		ldr	r3, [r7, #284]
 564 027c 0133     		adds	r3, r3, #1
 565 027e C7F81C31 		str	r3, [r7, #284]
 566              	.L19:
 184:main.c        ****                     buffer[i] = ' ';
 567              		.loc 1 184 0 is_stmt 0 discriminator 1
 568 0282 D7F81C31 		ldr	r3, [r7, #284]
 569 0286 402B     		cmp	r3, #64
 570 0288 F0DD     		ble	.L20
 186:main.c        ****                 }
 187:main.c        ****                 go = 0;
 571              		.loc 1 187 0 is_stmt 1
 572 028a 0023     		movs	r3, #0
 573 028c C7F81831 		str	r3, [r7, #280]
 188:main.c        ****                 i = 0;
 574              		.loc 1 188 0
 575 0290 0023     		movs	r3, #0
 576 0292 C7F81C31 		str	r3, [r7, #284]
 189:main.c        ****                 type=0;                   
 577              		.loc 1 189 0
 578 0296 0023     		movs	r3, #0
 579 0298 87F81731 		strb	r3, [r7, #279]
 190:main.c        ****                 xSemaphoreGive(gatekeeper);
 580              		.loc 1 190 0
 581 029c 054B     		ldr	r3, .L22+8
 582 029e 1868     		ldr	r0, [r3]
 583 02a0 0023     		movs	r3, #0
 584 02a2 0022     		movs	r2, #0
 585 02a4 0021     		movs	r1, #0
 586 02a6 FFF7FEFF 		bl	xQueueGenericSend
 191:main.c        ****             }
 192:main.c        ****         }
 193:main.c        ****     }
 587              		.loc 1 193 0
 588 02aa BAE6     		b	.L21
 589              	.L23:
 590              		.align	2
 591              	.L22:
 592 02ac 00000000 		.word	pxPort
 593 02b0 00000000 		.word	rx_receive
 594 02b4 00000000 		.word	gatekeeper
 595 02b8 00000000 		.word	buffer
 596 02bc 74000000 		.word	.LC5
 597 02c0 00000000 		.word	right_wheel
 598 02c4 00000000 		.word	left_wheel
 599 02c8 88000000 		.word	.LC6
 600 02cc 00000000 		.word	isMaster
 601 02d0 A4000000 		.word	.LC7
 602 02d4 B0000000 		.word	.LC8
 603 02d8 C0000000 		.word	.LC9
 604 02dc D4000000 		.word	.LC10
 605 02e0 E4000000 		.word	.LC11
 606 02e4 F8000000 		.word	.LC12
 607              		.cfi_endproc
 608              	.LFE70:
 609              		.size	receive_data, .-receive_data
 610              		.section	.rodata
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 16


 611 0109 000000   		.align	2
 612              	.LC13:
 613 010c 6C656674 		.ascii	"left wheel inc: %li\012\000"
 613      20776865 
 613      656C2069 
 613      6E633A20 
 613      256C690A 
 614              		.section	.text.PID_initialise,"ax",%progbits
 615              		.align	2
 616              		.global	PID_initialise
 617              		.thumb
 618              		.thumb_func
 619              		.type	PID_initialise, %function
 620              	PID_initialise:
 621              	.LFB71:
 194:main.c        **** }
 195:main.c        **** 
 196:main.c        **** void PID_initialise( void *p ) {
 622              		.loc 1 196 0
 623              		.cfi_startproc
 624              		@ args = 0, pretend = 0, frame = 264
 625              		@ frame_needed = 1, uses_anonymous_args = 0
 626 0000 90B5     		push	{r4, r7, lr}
 627              		.cfi_def_cfa_offset 12
 628              		.cfi_offset 4, -12
 629              		.cfi_offset 7, -8
 630              		.cfi_offset 14, -4
 631 0002 C3B0     		sub	sp, sp, #268
 632              		.cfi_def_cfa_offset 280
 633 0004 00AF     		add	r7, sp, #0
 634              		.cfi_def_cfa_register 7
 635 0006 3B1D     		adds	r3, r7, #4
 636 0008 1860     		str	r0, [r3]
 197:main.c        ****     
 198:main.c        ****     p = NULL;
 637              		.loc 1 198 0
 638 000a 3B1D     		adds	r3, r7, #4
 639 000c 0022     		movs	r2, #0
 640 000e 1A60     		str	r2, [r3]
 199:main.c        ****         
 200:main.c        ****     initialise_wheel_data(&left_wheel);
 641              		.loc 1 200 0
 642 0010 2B48     		ldr	r0, .L28
 643 0012 FFF7FEFF 		bl	initialise_wheel_data
 201:main.c        ****     initialise_wheel_data(&right_wheel);
 644              		.loc 1 201 0
 645 0016 2B48     		ldr	r0, .L28+4
 646 0018 FFF7FEFF 		bl	initialise_wheel_data
 202:main.c        ****     
<<<<<<< HEAD
 203:main.c        ****     k.Kp = 40;
 647              		.loc 1 203 0
 648 001c 2A4A     		ldr	r2, .L28+8
 649 001e 4FF00003 		mov	r3, #0
 650 0022 2A4C     		ldr	r4, .L28+12
 651 0024 C2E90234 		strd	r3, [r2, #8]
 204:main.c        ****     k.Ki = 0;
 652              		.loc 1 204 0
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 17


 653 0028 274A     		ldr	r2, .L28+8
 654 002a 4FF00003 		mov	r3, #0
 655 002e 4FF00004 		mov	r4, #0
 656 0032 C2E90034 		strd	r3, [r2]
 205:main.c        ****     k.Kd = 20;
 657              		.loc 1 205 0
 658 0036 244A     		ldr	r2, .L28+8
 659 0038 4FF00003 		mov	r3, #0
 660 003c 244C     		ldr	r4, .L28+16
 661 003e C2E90434 		strd	r3, [r2, #16]
 662              	.L27:
 206:main.c        ****     
 207:main.c        ****     signed char *local_write[64];  
 208:main.c        ****     
 209:main.c        ****     while(1) {
 210:main.c        ****     	if(xSemaphoreTake(gatekeeper, 50000)) {              // wait until semaphore is free:
 663              		.loc 1 210 0
 664 0042 244B     		ldr	r3, .L28+20
 665 0044 1B68     		ldr	r3, [r3]
 666 0046 4CF25031 		movw	r1, #50000
 667 004a 1846     		mov	r0, r3
 668 004c FFF7FEFF 		bl	xQueueSemaphoreTake
 669 0050 0346     		mov	r3, r0
 670 0052 002B     		cmp	r3, #0
 671 0054 30D0     		beq	.L25
 211:main.c        ****             if (first_run==1){
 672              		.loc 1 211 0
 673 0056 204B     		ldr	r3, .L28+24
 674 0058 1B68     		ldr	r3, [r3]
 675 005a 012B     		cmp	r3, #1
 676 005c 08D1     		bne	.L26
 212:main.c        ****                 M1QuadDec_SetCounter(0);
 677              		.loc 1 212 0
 678 005e 0020     		movs	r0, #0
 679 0060 FFF7FEFF 		bl	M1QuadDec_SetCounter
 213:main.c        ****                 M2QuadDec_SetCounter(0);
 680              		.loc 1 213 0
 681 0064 0020     		movs	r0, #0
 682 0066 FFF7FEFF 		bl	M2QuadDec_SetCounter
 214:main.c        ****                 first_run=0;
 683              		.loc 1 214 0
 684 006a 1B4B     		ldr	r3, .L28+24
 685 006c 0022     		movs	r2, #0
 686 006e 1A60     		str	r2, [r3]
 687              	.L26:
 215:main.c        ****             }
 216:main.c        ****                 
 217:main.c        ****             mov_update_error(&left_wheel, &right_wheel);    // update error values
 688              		.loc 1 217 0
 689 0070 1449     		ldr	r1, .L28+4
 690 0072 1348     		ldr	r0, .L28
 691 0074 FFF7FEFF 		bl	mov_update_error
 218:main.c        ****                 sprintf((char *) local_write, "left wheel inc: %li\n", left_wheel.cur_dest);
 692              		.loc 1 218 0
 693 0078 114B     		ldr	r3, .L28
 694 007a 5A68     		ldr	r2, [r3, #4]
 695 007c 07F10803 		add	r3, r7, #8
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 18


 696 0080 1649     		ldr	r1, .L28+28
 697 0082 1846     		mov	r0, r3
 698 0084 FFF7FEFF 		bl	sprintf
 219:main.c        ****                 vSerialPutString(pxPort, (signed char *) local_write, 64);
 699              		.loc 1 219 0
 700 0088 154B     		ldr	r3, .L28+32
 701 008a 1B68     		ldr	r3, [r3]
 702 008c 07F10801 		add	r1, r7, #8
 703 0090 4022     		movs	r2, #64
 704 0092 1846     		mov	r0, r3
 705 0094 FFF7FEFF 		bl	vSerialPutString
 220:main.c        ****             mov_get_PID(&left_wheel, &right_wheel, &k);     // calculate wheel voltage from errors 
 706              		.loc 1 220 0
 707 0098 0B4A     		ldr	r2, .L28+8
 708 009a 0A49     		ldr	r1, .L28+4
 709 009c 0848     		ldr	r0, .L28
 710 009e FFF7FEFF 		bl	mov_get_PID
 221:main.c        ****             
 222:main.c        ****             mov_Adj_Volt(&left_wheel, &right_wheel);        // adjust the voltage of the wheels
 711              		.loc 1 222 0
 712 00a2 0849     		ldr	r1, .L28+4
 713 00a4 0648     		ldr	r0, .L28
 714 00a6 FFF7FEFF 		bl	mov_Adj_Volt
 223:main.c        **** 			xSemaphoreGive(gatekeeper);                     // give the semaphore back
 715              		.loc 1 223 0
 716 00aa 0A4B     		ldr	r3, .L28+20
 717 00ac 1868     		ldr	r0, [r3]
 718 00ae 0023     		movs	r3, #0
 719 00b0 0022     		movs	r2, #0
 720 00b2 0021     		movs	r1, #0
 721 00b4 FFF7FEFF 		bl	xQueueGenericSend
 722              	.L25:
 224:main.c        ****     	}
 225:main.c        ****         vTaskDelay(10);                                     // wait 10ms before going again
 723              		.loc 1 225 0
 724 00b8 0A20     		movs	r0, #10
 725 00ba FFF7FEFF 		bl	vTaskDelay
 226:main.c        ****     }
 726              		.loc 1 226 0
 727 00be C0E7     		b	.L27
 728              	.L29:
 729              		.align	2
 730              	.L28:
 731 00c0 00000000 		.word	left_wheel
 732 00c4 00000000 		.word	right_wheel
 733 00c8 00000000 		.word	k
 734 00cc 00004440 		.word	1078198272
 735 00d0 00003440 		.word	1077149696
 736 00d4 00000000 		.word	gatekeeper
 737 00d8 00000000 		.word	first_run
 738 00dc 0C010000 		.word	.LC13
 739 00e0 00000000 		.word	pxPort
 740              		.cfi_endproc
 741              	.LFE71:
 742              		.size	PID_initialise, .-PID_initialise
 743              		.section	.text.prvHardwareSetup,"ax",%progbits
 744              		.align	2
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 19


 745              		.thumb
 746              		.thumb_func
 747              		.type	prvHardwareSetup, %function
 748              	prvHardwareSetup:
 749              	.LFB72:
 227:main.c        **** }
 228:main.c        **** 
 229:main.c        **** void prvHardwareSetup( void ) {
 750              		.loc 1 229 0
 751              		.cfi_startproc
 752              		@ args = 0, pretend = 0, frame = 0
 753              		@ frame_needed = 1, uses_anonymous_args = 0
 754 0000 80B5     		push	{r7, lr}
 755              		.cfi_def_cfa_offset 8
 756              		.cfi_offset 7, -8
 757              		.cfi_offset 14, -4
 758 0002 00AF     		add	r7, sp, #0
 759              		.cfi_def_cfa_register 7
 230:main.c        ****     
 231:main.c        ****     /* Port layer functions that need to be copied into the vector table. */
 232:main.c        ****     extern void xPortPendSVHandler( void );
 233:main.c        ****     extern void xPortSysTickHandler( void );
 234:main.c        ****     extern void vPortSVCHandler( void );
 235:main.c        ****     extern cyisraddress CyRamVectors[];
 236:main.c        **** 
 237:main.c        **** 	/* Install the OS Interrupt Handlers. */
 238:main.c        **** 	CyRamVectors[ 11 ] = ( cyisraddress ) vPortSVCHandler;
 760              		.loc 1 238 0
 761 0004 1E4B     		ldr	r3, .L33
 762 0006 1F4A     		ldr	r2, .L33+4
 763 0008 DA62     		str	r2, [r3, #44]
 239:main.c        **** 	CyRamVectors[ 14 ] = ( cyisraddress ) xPortPendSVHandler;
 764              		.loc 1 239 0
 765 000a 1D4B     		ldr	r3, .L33
 766 000c 1E4A     		ldr	r2, .L33+8
 767 000e 9A63     		str	r2, [r3, #56]
 240:main.c        **** 	CyRamVectors[ 15 ] = ( cyisraddress ) xPortSysTickHandler;
 768              		.loc 1 240 0
 769 0010 1B4B     		ldr	r3, .L33
 770 0012 1E4A     		ldr	r2, .L33+12
 771 0014 DA63     		str	r2, [r3, #60]
 241:main.c        **** 
 242:main.c        **** 	/* Start-up the shared peripherals. */
 243:main.c        ****     PWM_M1_Start();
 772              		.loc 1 243 0
 773 0016 FFF7FEFF 		bl	PWM_M1_Start
 244:main.c        ****     PWM_M2_Start();
 774              		.loc 1 244 0
 775 001a FFF7FEFF 		bl	PWM_M2_Start
 245:main.c        ****     M1Clock_Start();
 776              		.loc 1 245 0
 777 001e FFF7FEFF 		bl	M1Clock_Start
 246:main.c        ****     MClock_Start();
 778              		.loc 1 246 0
 779 0022 FFF7FEFF 		bl	MClock_Start
 247:main.c        ****     
 248:main.c        ****     M1QuadDec_Start();
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 20


 780              		.loc 1 248 0
 781 0026 FFF7FEFF 		bl	M1QuadDec_Start
 249:main.c        ****     M1QuadDec_Enable();
 782              		.loc 1 249 0
 783 002a FFF7FEFF 		bl	M1QuadDec_Enable
 250:main.c        ****     M1QuadDec_SetCounter(0);
 784              		.loc 1 250 0
 785 002e 0020     		movs	r0, #0
 786 0030 FFF7FEFF 		bl	M1QuadDec_SetCounter
 251:main.c        ****     
 252:main.c        ****     M2QuadDec_Start();
 787              		.loc 1 252 0
 788 0034 FFF7FEFF 		bl	M2QuadDec_Start
 253:main.c        ****     M2QuadDec_Enable();
 789              		.loc 1 253 0
 790 0038 FFF7FEFF 		bl	M2QuadDec_Enable
 254:main.c        ****     M2QuadDec_SetCounter(0);
 791              		.loc 1 254 0
 792 003c 0020     		movs	r0, #0
 793 003e FFF7FEFF 		bl	M2QuadDec_SetCounter
 255:main.c        **** 
 256:main.c        **** 	UART_1_Start();                         // Start the UART
 794              		.loc 1 256 0
 795 0042 FFF7FEFF 		bl	UART_1_Start
 257:main.c        ****     xSerialPortInitMinimal( 57600, 64 );    // Set the serial baud rate and buffer size in bytes
 796              		.loc 1 257 0
 797 0046 4021     		movs	r1, #64
 798 0048 4FF46140 		mov	r0, #57600
 799 004c FFF7FEFF 		bl	xSerialPortInitMinimal
 258:main.c        ****     
 259:main.c        ****     Timer_1_Start();
 800              		.loc 1 259 0
 801 0050 FFF7FEFF 		bl	Timer_1_Start
 260:main.c        **** 
 261:main.c        ****     /* Start up the master peripherals. */
 262:main.c        ****     if (isMaster){
 263:main.c        ****          
 264:main.c        ****     }
 265:main.c        ****     
 266:main.c        ****     /* Start up the slave peripherals. */
 267:main.c        ****     if (~isMaster){
 802              		.loc 1 267 0
 803 0054 0E4B     		ldr	r3, .L33+16
 804 0056 1B68     		ldr	r3, [r3]
 805 0058 B3F1FF3F 		cmp	r3, #-1
 806 005c 0DD0     		beq	.L32
 268:main.c        ****         
 269:main.c        ****         Clock_1_Start();
 807              		.loc 1 269 0
 808 005e FFF7FEFF 		bl	Clock_1_Start
 270:main.c        ****         PWM_1_Start();
 809              		.loc 1 270 0
 810 0062 FFF7FEFF 		bl	PWM_1_Start
 271:main.c        ****         PWM_1_WriteCompare(2100);//90 deg Camera;
 811              		.loc 1 271 0
 812 0066 40F63400 		movw	r0, #2100
 813 006a FFF7FEFF 		bl	PWM_1_WriteCompare
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 21


 272:main.c        ****         CyDelay(1000);
 814              		.loc 1 272 0
 815 006e 4FF47A70 		mov	r0, #1000
 816 0072 FFF7FEFF 		bl	CyDelay
 273:main.c        ****         PWM_1_Sleep();
 817              		.loc 1 273 0
 818 0076 FFF7FEFF 		bl	PWM_1_Sleep
 819              	.L32:
 274:main.c        ****         
 275:main.c        ****         
 276:main.c        ****         
 277:main.c        ****     }
 278:main.c        **** }
 820              		.loc 1 278 0
 821 007a 00BF     		nop
 822 007c 80BD     		pop	{r7, pc}
 823              	.L34:
 824 007e 00BF     		.align	2
 825              	.L33:
 826 0080 00000000 		.word	CyRamVectors
 827 0084 00000000 		.word	vPortSVCHandler
 828 0088 00000000 		.word	xPortPendSVHandler
 829 008c 00000000 		.word	xPortSysTickHandler
 830 0090 00000000 		.word	isMaster
 831              		.cfi_endproc
 832              	.LFE72:
 833              		.size	prvHardwareSetup, .-prvHardwareSetup
 834              		.section	.text.vApplicationStackOverflowHook,"ax",%progbits
 835              		.align	2
 836              		.global	vApplicationStackOverflowHook
 837              		.thumb
 838              		.thumb_func
 839              		.type	vApplicationStackOverflowHook, %function
 840              	vApplicationStackOverflowHook:
 841              	.LFB73:
 279:main.c        **** 
 280:main.c        **** 
 281:main.c        **** // DON'T TOUCH THESE (PART OF FREERTOS)
 282:main.c        **** void vApplicationStackOverflowHook( TaskHandle_t pxTask, char *pcTaskName ) {
 842              		.loc 1 282 0
 843              		.cfi_startproc
 844              		@ args = 0, pretend = 0, frame = 16
 845              		@ frame_needed = 1, uses_anonymous_args = 0
 846              		@ link register save eliminated.
 847 0000 80B4     		push	{r7}
 848              		.cfi_def_cfa_offset 4
 849              		.cfi_offset 7, -4
 850 0002 85B0     		sub	sp, sp, #20
 851              		.cfi_def_cfa_offset 24
 852 0004 00AF     		add	r7, sp, #0
 853              		.cfi_def_cfa_register 7
 854 0006 7860     		str	r0, [r7, #4]
 855 0008 3960     		str	r1, [r7]
 856              	.LBB6:
 857              	.LBB7:
 858              		.file 2 "..\\..\\FreeRTOS_Source\\portable\\GCC\\ARM_CM3/portmacro.h"
=======
 203:main.c        ****     while(1) {
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccSeeFBQ.s 			page 15


 204:main.c        ****     	if(xSemaphoreTake(gatekeeper, 50000)) {              // wait until semaphore is free:
 554              		.loc 1 204 0
 555 0042 1A4B     		ldr	r3, .L24+20
 556 0044 1B68     		ldr	r3, [r3]
 557 0046 4CF25031 		movw	r1, #50000
 558 004a 1846     		mov	r0, r3
 559 004c FFF7FEFF 		bl	xQueueSemaphoreTake
 560 0050 0346     		mov	r3, r0
 561 0052 002B     		cmp	r3, #0
 562 0054 1BD0     		beq	.L22
 205:main.c        ****             mov_update_error(&left_wheel, &right_wheel);    // update error values
 563              		.loc 1 205 0
 564 0056 1149     		ldr	r1, .L24+4
 565 0058 0F48     		ldr	r0, .L24
 566 005a FFF7FEFF 		bl	mov_update_error
 206:main.c        ****                 sprintf((char *) local_write, "left wheel inc: %li\n", left_wheel.cur_dest);
 567              		.loc 1 206 0
 568 005e 0E4B     		ldr	r3, .L24
 569 0060 5A68     		ldr	r2, [r3, #4]
 570 0062 07F10803 		add	r3, r7, #8
 571 0066 1249     		ldr	r1, .L24+24
 572 0068 1846     		mov	r0, r3
 573 006a FFF7FEFF 		bl	sprintf
 207:main.c        ****                 //vSerialPutString(pxPort, (signed char *) local_write, 64);
 208:main.c        ****             mov_get_PID(&left_wheel, &right_wheel, &k);     // calculate wheel voltage from errors 
 574              		.loc 1 208 0
 575 006e 0C4A     		ldr	r2, .L24+8
 576 0070 0A49     		ldr	r1, .L24+4
 577 0072 0948     		ldr	r0, .L24
 578 0074 FFF7FEFF 		bl	mov_get_PID
 209:main.c        ****             
 210:main.c        ****             mov_Adj_Volt(&left_wheel, &right_wheel);        // adjust the voltage of the wheels
 579              		.loc 1 210 0
 580 0078 0849     		ldr	r1, .L24+4
 581 007a 0748     		ldr	r0, .L24
 582 007c FFF7FEFF 		bl	mov_Adj_Volt
 211:main.c        **** 			xSemaphoreGive(gatekeeper);                     // give the semaphore back
 583              		.loc 1 211 0
 584 0080 0A4B     		ldr	r3, .L24+20
 585 0082 1868     		ldr	r0, [r3]
 586 0084 0023     		movs	r3, #0
 587 0086 0022     		movs	r2, #0
 588 0088 0021     		movs	r1, #0
 589 008a FFF7FEFF 		bl	xQueueGenericSend
 590              	.L22:
 212:main.c        ****     	}
 213:main.c        ****         vTaskDelay(10);                                     // wait 10ms before going again
 591              		.loc 1 213 0
 592 008e 0A20     		movs	r0, #10
 593 0090 FFF7FEFF 		bl	vTaskDelay
 214:main.c        ****     }
 594              		.loc 1 214 0
 595 0094 D5E7     		b	.L23
 596              	.L25:
 597 0096 00BF     		.align	2
 598              	.L24:
 599 0098 00000000 		.word	left_wheel
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccSeeFBQ.s 			page 16


 600 009c 00000000 		.word	right_wheel
 601 00a0 00000000 		.word	k
 602 00a4 00004440 		.word	1078198272
 603 00a8 00003440 		.word	1077149696
 604 00ac 00000000 		.word	gatekeeper
 605 00b0 BC000000 		.word	.LC9
 606              		.cfi_endproc
 607              	.LFE71:
 608              		.size	PID_initialise, .-PID_initialise
 609              		.section	.text.prvHardwareSetup,"ax",%progbits
 610              		.align	2
 611              		.thumb
 612              		.thumb_func
 613              		.type	prvHardwareSetup, %function
 614              	prvHardwareSetup:
 615              	.LFB72:
 215:main.c        **** }
 216:main.c        **** 
 217:main.c        **** void prvHardwareSetup( void ) {
 616              		.loc 1 217 0
 617              		.cfi_startproc
 618              		@ args = 0, pretend = 0, frame = 0
 619              		@ frame_needed = 1, uses_anonymous_args = 0
 620 0000 80B5     		push	{r7, lr}
 621              		.cfi_def_cfa_offset 8
 622              		.cfi_offset 7, -8
 623              		.cfi_offset 14, -4
 624 0002 00AF     		add	r7, sp, #0
 625              		.cfi_def_cfa_register 7
 218:main.c        ****     
 219:main.c        ****     /* Port layer functions that need to be copied into the vector table. */
 220:main.c        ****     extern void xPortPendSVHandler( void );
 221:main.c        ****     extern void xPortSysTickHandler( void );
 222:main.c        ****     extern void vPortSVCHandler( void );
 223:main.c        ****     extern cyisraddress CyRamVectors[];
 224:main.c        **** 
 225:main.c        **** 	/* Install the OS Interrupt Handlers. */
 226:main.c        **** 	CyRamVectors[ 11 ] = ( cyisraddress ) vPortSVCHandler;
 626              		.loc 1 226 0
 627 0004 214B     		ldr	r3, .L30
 628 0006 224A     		ldr	r2, .L30+4
 629 0008 DA62     		str	r2, [r3, #44]
 227:main.c        **** 	CyRamVectors[ 14 ] = ( cyisraddress ) xPortPendSVHandler;
 630              		.loc 1 227 0
 631 000a 204B     		ldr	r3, .L30
 632 000c 214A     		ldr	r2, .L30+8
 633 000e 9A63     		str	r2, [r3, #56]
 228:main.c        **** 	CyRamVectors[ 15 ] = ( cyisraddress ) xPortSysTickHandler;
 634              		.loc 1 228 0
 635 0010 1E4B     		ldr	r3, .L30
 636 0012 214A     		ldr	r2, .L30+12
 637 0014 DA63     		str	r2, [r3, #60]
 229:main.c        **** 
 230:main.c        **** 	/* Start-up the shared peripherals. */
 231:main.c        ****     PWM_M1_Start();
 638              		.loc 1 231 0
 639 0016 FFF7FEFF 		bl	PWM_M1_Start
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccSeeFBQ.s 			page 17


 232:main.c        ****     PWM_M2_Start();
 640              		.loc 1 232 0
 641 001a FFF7FEFF 		bl	PWM_M2_Start
 233:main.c        ****     M1Clock_Start();
 642              		.loc 1 233 0
 643 001e FFF7FEFF 		bl	M1Clock_Start
 234:main.c        ****     MClock_Start();
 644              		.loc 1 234 0
 645 0022 FFF7FEFF 		bl	MClock_Start
 235:main.c        ****     
 236:main.c        ****     M1QuadDec_Start();
 646              		.loc 1 236 0
 647 0026 FFF7FEFF 		bl	M1QuadDec_Start
 237:main.c        ****     M1QuadDec_Enable();
 648              		.loc 1 237 0
 649 002a FFF7FEFF 		bl	M1QuadDec_Enable
 238:main.c        ****     M1QuadDec_SetCounter(0);
 650              		.loc 1 238 0
 651 002e 0020     		movs	r0, #0
 652 0030 FFF7FEFF 		bl	M1QuadDec_SetCounter
 239:main.c        ****     
 240:main.c        ****     M2QuadDec_Start();
 653              		.loc 1 240 0
 654 0034 FFF7FEFF 		bl	M2QuadDec_Start
 241:main.c        ****     M2QuadDec_Enable();
 655              		.loc 1 241 0
 656 0038 FFF7FEFF 		bl	M2QuadDec_Enable
 242:main.c        ****     M2QuadDec_SetCounter(0);
 657              		.loc 1 242 0
 658 003c 0020     		movs	r0, #0
 659 003e FFF7FEFF 		bl	M2QuadDec_SetCounter
 243:main.c        **** 
 244:main.c        **** 	UART_1_Start();                         // Start the UART
 660              		.loc 1 244 0
 661 0042 FFF7FEFF 		bl	UART_1_Start
 245:main.c        ****     xSerialPortInitMinimal( 57600, 64 );    // Set the serial baud rate and buffer size in bytes
 662              		.loc 1 245 0
 663 0046 4021     		movs	r1, #64
 664 0048 4FF46140 		mov	r0, #57600
 665 004c FFF7FEFF 		bl	xSerialPortInitMinimal
 246:main.c        ****     
 247:main.c        ****     Timer_1_Start();
 666              		.loc 1 247 0
 667 0050 FFF7FEFF 		bl	Timer_1_Start
 248:main.c        **** 
 249:main.c        ****     /* Start up the master peripherals. */
 250:main.c        ****     if (isMaster){
 668              		.loc 1 250 0
 669 0054 114B     		ldr	r3, .L30+16
 670 0056 1B68     		ldr	r3, [r3]
 671 0058 002B     		cmp	r3, #0
 672 005a 02D0     		beq	.L27
 251:main.c        ****          Laser_Write(1);// turn on the laser
 673              		.loc 1 251 0
 674 005c 0120     		movs	r0, #1
 675 005e FFF7FEFF 		bl	Laser_Write
 676              	.L27:
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccSeeFBQ.s 			page 18


 252:main.c        ****     }
 253:main.c        ****     
 254:main.c        ****     /* Start up the slave peripherals. */
 255:main.c        ****     if (~isMaster){
 677              		.loc 1 255 0
 678 0062 0E4B     		ldr	r3, .L30+16
 679 0064 1B68     		ldr	r3, [r3]
 680 0066 B3F1FF3F 		cmp	r3, #-1
 681 006a 0DD0     		beq	.L29
 256:main.c        ****         
 257:main.c        ****         Clock_1_Start();
 682              		.loc 1 257 0
 683 006c FFF7FEFF 		bl	Clock_1_Start
 258:main.c        ****         PWM_1_Start();
 684              		.loc 1 258 0
 685 0070 FFF7FEFF 		bl	PWM_1_Start
 259:main.c        ****         PWM_1_WriteCompare(2100);//90 deg Camera;
 686              		.loc 1 259 0
 687 0074 40F63400 		movw	r0, #2100
 688 0078 FFF7FEFF 		bl	PWM_1_WriteCompare
 260:main.c        ****         CyDelay(1000);
 689              		.loc 1 260 0
 690 007c 4FF47A70 		mov	r0, #1000
 691 0080 FFF7FEFF 		bl	CyDelay
 261:main.c        ****         PWM_1_Sleep();
 692              		.loc 1 261 0
 693 0084 FFF7FEFF 		bl	PWM_1_Sleep
 694              	.L29:
 262:main.c        ****         
>>>>>>> c9b510a773d88c725b10924e41e3b58e459a6304
 263:main.c        ****         
 264:main.c        ****         
 265:main.c        ****         
 266:main.c        ****     }
 267:main.c        **** }
 738              		.loc 1 267 0
 739 0088 00BF     		nop
 740 008a 80BD     		pop	{r7, pc}
 741              	.L32:
 742              		.align	2
 743              	.L31:
 744 008c 00000000 		.word	CyRamVectors
 745 0090 00000000 		.word	vPortSVCHandler
 746 0094 00000000 		.word	xPortPendSVHandler
 747 0098 00000000 		.word	xPortSysTickHandler
 748 009c 00000000 		.word	isMaster
 749              		.cfi_endproc
 750              	.LFE72:
 751              		.size	prvHardwareSetup, .-prvHardwareSetup
 752              		.section	.text.vApplicationStackOverflowHook,"ax",%progbits
 753              		.align	2
 754              		.global	vApplicationStackOverflowHook
 755              		.thumb
 756              		.thumb_func
 757              		.type	vApplicationStackOverflowHook, %function
 758              	vApplicationStackOverflowHook:
 759              	.LFB73:
 268:main.c        **** 
<<<<<<< HEAD
 269:main.c        **** 
 270:main.c        **** // DON'T TOUCH THESE (PART OF FREERTOS)
 271:main.c        **** void vApplicationStackOverflowHook( TaskHandle_t pxTask, char *pcTaskName ) {
 760              		.loc 1 271 0
 761              		.cfi_startproc
 762              		@ args = 0, pretend = 0, frame = 16
 763              		@ frame_needed = 1, uses_anonymous_args = 0
 764              		@ link register save eliminated.
 765 0000 80B4     		push	{r7}
 766              		.cfi_def_cfa_offset 4
 767              		.cfi_offset 7, -4
 768 0002 85B0     		sub	sp, sp, #20
 769              		.cfi_def_cfa_offset 24
 770 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccalsaR2.s 			page 20


 771              		.cfi_def_cfa_register 7
 772 0006 7860     		str	r0, [r7, #4]
 773 0008 3960     		str	r1, [r7]
 774              	.LBB6:
 775              	.LBB7:
 776              		.file 2 "..\\..\\FreeRTOS_Source\\portable\\GCC\\ARM_CM3/portmacro.h"
=======
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccSeeFBQ.s 			page 19


 269:main.c        **** // DON'T TOUCH THESE (PART OF FREERTOS)
 270:main.c        **** void vApplicationStackOverflowHook( TaskHandle_t pxTask, char *pcTaskName ) {
 717              		.loc 1 270 0
 718              		.cfi_startproc
 719              		@ args = 0, pretend = 0, frame = 16
 720              		@ frame_needed = 1, uses_anonymous_args = 0
 721              		@ link register save eliminated.
 722 0000 80B4     		push	{r7}
 723              		.cfi_def_cfa_offset 4
 724              		.cfi_offset 7, -4
 725 0002 85B0     		sub	sp, sp, #20
 726              		.cfi_def_cfa_offset 24
 727 0004 00AF     		add	r7, sp, #0
 728              		.cfi_def_cfa_register 7
 729 0006 7860     		str	r0, [r7, #4]
 730 0008 3960     		str	r1, [r7]
 731              	.LBB6:
 732              	.LBB7:
 733              		.file 2 "..\\..\\FreeRTOS_Source\\portable\\GCC\\ARM_CM3/portmacro.h"
>>>>>>> c9b510a773d88c725b10924e41e3b58e459a6304
>>>>>>> 477ec7bbc14d269664e547f45035acf333f4eb07
   1:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /*
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 22


   2:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * FreeRTOS Kernel V10.0.1
   3:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  *
   5:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * subject to the following conditions:
  11:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  12:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * copies or substantial portions of the Software.
  14:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  15:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  22:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * http://www.FreeRTOS.org
  23:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * http://aws.amazon.com/freertos
  24:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  25:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * 1 tab == 4 spaces!
  26:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  */
  27:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
  28:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
  29:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #ifndef PORTMACRO_H
  30:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define PORTMACRO_H
  31:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
  32:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #ifdef __cplusplus
  33:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** extern "C" {
  34:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
  35:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
  36:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------
  37:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * Port specific definitions.
  38:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  *
<<<<<<< HEAD
=======
<<<<<<< HEAD
=======
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccSeeFBQ.s 			page 20


>>>>>>> c9b510a773d88c725b10924e41e3b58e459a6304
>>>>>>> 477ec7bbc14d269664e547f45035acf333f4eb07
  39:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * given hardware and compiler.
  41:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  42:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * These settings should not be altered.
  43:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  *-----------------------------------------------------------
  44:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  */
  45:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
  46:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /* Type definitions. */
  47:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portCHAR		char
  48:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portFLOAT		float
  49:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portDOUBLE		double
  50:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portLONG		long
  51:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portSHORT		short
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccalsaR2.s 			page 21


  52:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portBASE_TYPE	long
  54:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
  55:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** typedef long BaseType_t;
  57:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** typedef unsigned long UBaseType_t;
  58:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 23


  59:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	typedef uint16_t TickType_t;
  61:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #else
  63:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	typedef uint32_t TickType_t;
  64:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
  66:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	not need to be guarded with a critical section. */
  68:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
  70:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  71:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
  72:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /* Architecture specifics. */
  73:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  77:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
  78:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /* Scheduler utilities. */
  79:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portYIELD() 															\
  80:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** {																				\
  81:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 																				\
  84:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile( "isb" );													\
  88:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** }
  89:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
  90:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  95:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
<<<<<<< HEAD
=======
<<<<<<< HEAD
=======
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccSeeFBQ.s 			page 21


>>>>>>> c9b510a773d88c725b10924e41e3b58e459a6304
>>>>>>> 477ec7bbc14d269664e547f45035acf333f4eb07
  96:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /* Critical section management. */
  97:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** extern void vPortEnterCritical( void );
  98:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** extern void vPortExitCritical( void );
  99:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 106:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 107:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 108:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccalsaR2.s 			page 22


 109:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** (which build with all the ports) will build. */
 111:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 114:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 115:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /* Tickless idle/low power functionality. */
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 24


 116:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 117:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 118:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 119:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
 120:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 121:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 122:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /* Architecture specific optimisations. */
 123:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 124:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 125:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
 126:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 127:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 128:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 129:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Generic helper function. */
 130:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 131:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	{
 132:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	uint8_t ucReturn;
 133:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 134:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 135:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 		return ucReturn;
 136:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	}
 137:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 138:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Check the configuration. */
 139:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 140:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 141:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	#endif
 142:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 143:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 144:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 145:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 146:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 147:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	/*-----------------------------------------------------------*/
 148:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 149:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 150:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 151:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 152:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
<<<<<<< HEAD
=======
<<<<<<< HEAD
=======
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccSeeFBQ.s 			page 22


>>>>>>> c9b510a773d88c725b10924e41e3b58e459a6304
>>>>>>> 477ec7bbc14d269664e547f45035acf333f4eb07
 153:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 154:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 155:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #ifdef configASSERT
 156:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 157:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 158:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
 159:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 160:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /* portNOP() is not required by this port. */
 161:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portNOP()
 162:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 163:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portINLINE	__inline
 164:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 165:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #ifndef portFORCE_INLINE
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccalsaR2.s 			page 23


 166:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 167:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
 168:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 169:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 170:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** {
 171:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** uint32_t ulCurrentInterrupt;
 172:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** BaseType_t xReturn;
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 25


 173:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 174:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 175:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 176:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 177:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 178:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	{
 179:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 		xReturn = pdFALSE;
 180:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	}
 181:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	else
 182:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	{
 183:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 		xReturn = pdTRUE;
 184:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	}
 185:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 186:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	return xReturn;
 187:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** }
 188:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 189:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 190:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 191:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 192:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** {
 193:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** uint32_t ulNewBASEPRI;
 194:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 195:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile
<<<<<<< HEAD
 859              		.loc 2 195 0
 860              		.syntax unified
 861              	@ 195 "..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h" 1
 862 000a 4FF0A003 			mov r3, #160												
 863 000e 83F31188 		msr basepri, r3											
 864 0012 BFF36F8F 		isb														
 865 0016 BFF34F8F 		dsb														
 866              	
 867              	@ 0 "" 2
 868              		.thumb
 869              		.syntax unified
 870 001a FB60     		str	r3, [r7, #12]
 871              	.L36:
 872              	.LBE7:
 873              	.LBE6:
 283:main.c        **** 	/* The stack space has been execeeded for a task, considering allocating more. */
 284:main.c        **** 	taskDISABLE_INTERRUPTS();
 285:main.c        **** 	for( ;; );
 874              		.loc 1 285 0 discriminator 1
 875 001c FEE7     		b	.L36
 876              		.cfi_endproc
 877              	.LFE73:
 878              		.size	vApplicationStackOverflowHook, .-vApplicationStackOverflowHook
 879 001e 00BF     		.section	.text.vApplicationMallocFailedHook,"ax",%progbits
 880              		.align	2
 881              		.global	vApplicationMallocFailedHook
 882              		.thumb
 883              		.thumb_func
 884              		.type	vApplicationMallocFailedHook, %function
 885              	vApplicationMallocFailedHook:
 886              	.LFB74:
 286:main.c        **** }
 287:main.c        **** void vApplicationMallocFailedHook( void ) {
 887              		.loc 1 287 0
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 26


 888              		.cfi_startproc
 889              		@ args = 0, pretend = 0, frame = 8
 890              		@ frame_needed = 1, uses_anonymous_args = 0
 891              		@ link register save eliminated.
 892 0000 80B4     		push	{r7}
 893              		.cfi_def_cfa_offset 4
 894              		.cfi_offset 7, -4
 895 0002 83B0     		sub	sp, sp, #12
 896              		.cfi_def_cfa_offset 16
 897 0004 00AF     		add	r7, sp, #0
 898              		.cfi_def_cfa_register 7
 899              	.LBB8:
 900              	.LBB9:
 901              		.loc 2 195 0
 902              		.syntax unified
 903              	@ 195 "..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h" 1
 904 0006 4FF0A003 			mov r3, #160												
 905 000a 83F31188 		msr basepri, r3											
 906 000e BFF36F8F 		isb														
 907 0012 BFF34F8F 		dsb														
 908              	
 909              	@ 0 "" 2
 910              		.thumb
 911              		.syntax unified
 912 0016 7B60     		str	r3, [r7, #4]
 913              	.L38:
 914              	.LBE9:
 915              	.LBE8:
 288:main.c        **** 	/* The heap space has been execeeded. */
 289:main.c        **** 	taskDISABLE_INTERRUPTS();
 290:main.c        **** 	for( ;; );
 916              		.loc 1 290 0 discriminator 1
 917 0018 FEE7     		b	.L38
 918              		.cfi_endproc
 919              	.LFE74:
 920              		.size	vApplicationMallocFailedHook, .-vApplicationMallocFailedHook
 921 001a 00BF     		.text
 922              	.Letext0:
 923              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 924              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 925              		.file 5 "Generated_Source\\PSoC5/cytypes.h"
 926              		.file 6 "..\\..\\FreeRTOS_Source\\include/task.h"
 927              		.file 7 "..\\..\\FreeRTOS_Source\\include/queue.h"
 928              		.file 8 "..\\..\\FreeRTOS_Source\\include/semphr.h"
 929              		.file 9 "..\\..\\FreeRTOS_Source\\include/serial.h"
 930              		.file 10 "movement.h"
 931              		.file 11 "Generated_Source\\PSoC5/core_cm3.h"
 932              		.section	.debug_info,"",%progbits
 933              	.Ldebug_info0:
 934 0000 AD040000 		.4byte	0x4ad
 935 0004 0400     		.2byte	0x4
 936 0006 00000000 		.4byte	.Ldebug_abbrev0
 937 000a 04       		.byte	0x4
 938 000b 01       		.uleb128 0x1
 939 000c 52000000 		.4byte	.LASF60
 940 0010 0C       		.byte	0xc
 941 0011 83030000 		.4byte	.LASF61
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 27


 942 0015 8B010000 		.4byte	.LASF62
 943 0019 00000000 		.4byte	.Ldebug_ranges0+0
 944 001d 00000000 		.4byte	0
 945 0021 00000000 		.4byte	.Ldebug_line0
 946 0025 02       		.uleb128 0x2
 947 0026 01       		.byte	0x1
 948 0027 06       		.byte	0x6
 949 0028 B5020000 		.4byte	.LASF0
 950 002c 03       		.uleb128 0x3
 951 002d 3F020000 		.4byte	.LASF4
 952 0031 03       		.byte	0x3
 953 0032 1D       		.byte	0x1d
 954 0033 37000000 		.4byte	0x37
 955 0037 02       		.uleb128 0x2
 956 0038 01       		.byte	0x1
 957 0039 08       		.byte	0x8
 958 003a 76020000 		.4byte	.LASF1
 959 003e 02       		.uleb128 0x2
 960 003f 02       		.byte	0x2
 961 0040 05       		.byte	0x5
 962 0041 0D010000 		.4byte	.LASF2
 963 0045 02       		.uleb128 0x2
 964 0046 02       		.byte	0x2
 965 0047 07       		.byte	0x7
 966 0048 14030000 		.4byte	.LASF3
 967 004c 03       		.uleb128 0x3
 968 004d AE030000 		.4byte	.LASF5
 969 0051 03       		.byte	0x3
 970 0052 3F       		.byte	0x3f
 971 0053 57000000 		.4byte	0x57
 972 0057 02       		.uleb128 0x2
 973 0058 04       		.byte	0x4
 974 0059 05       		.byte	0x5
 975 005a 0E020000 		.4byte	.LASF6
 976 005e 03       		.uleb128 0x3
 977 005f EC000000 		.4byte	.LASF7
 978 0063 03       		.byte	0x3
 979 0064 41       		.byte	0x41
 980 0065 69000000 		.4byte	0x69
 981 0069 02       		.uleb128 0x2
 982 006a 04       		.byte	0x4
 983 006b 07       		.byte	0x7
 984 006c 8A030000 		.4byte	.LASF8
 985 0070 02       		.uleb128 0x2
 986 0071 08       		.byte	0x8
 987 0072 05       		.byte	0x5
 988 0073 64010000 		.4byte	.LASF9
 989 0077 02       		.uleb128 0x2
 990 0078 08       		.byte	0x8
 991 0079 07       		.byte	0x7
 992 007a C1020000 		.4byte	.LASF10
 993 007e 04       		.uleb128 0x4
 994 007f 04       		.byte	0x4
 995 0080 05       		.byte	0x5
 996 0081 696E7400 		.ascii	"int\000"
 997 0085 02       		.uleb128 0x2
 998 0086 04       		.byte	0x4
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 28


 999 0087 07       		.byte	0x7
 1000 0088 E1020000 		.4byte	.LASF11
 1001 008c 03       		.uleb128 0x3
 1002 008d 21010000 		.4byte	.LASF12
 1003 0091 04       		.byte	0x4
 1004 0092 18       		.byte	0x18
 1005 0093 2C000000 		.4byte	0x2c
 1006 0097 03       		.uleb128 0x3
 1007 0098 41030000 		.4byte	.LASF13
 1008 009c 04       		.byte	0x4
 1009 009d 2C       		.byte	0x2c
 1010 009e 4C000000 		.4byte	0x4c
 1011 00a2 03       		.uleb128 0x3
 1012 00a3 D8020000 		.4byte	.LASF14
 1013 00a7 04       		.byte	0x4
 1014 00a8 30       		.byte	0x30
 1015 00a9 5E000000 		.4byte	0x5e
 1016 00ad 02       		.uleb128 0x2
 1017 00ae 04       		.byte	0x4
 1018 00af 04       		.byte	0x4
 1019 00b0 5E010000 		.4byte	.LASF15
 1020 00b4 02       		.uleb128 0x2
 1021 00b5 08       		.byte	0x8
 1022 00b6 04       		.byte	0x4
 1023 00b7 9C030000 		.4byte	.LASF16
 1024 00bb 02       		.uleb128 0x2
 1025 00bc 01       		.byte	0x1
 1026 00bd 08       		.byte	0x8
 1027 00be 27030000 		.4byte	.LASF17
 1028 00c2 05       		.uleb128 0x5
 1029 00c3 00010000 		.4byte	.LASF18
 1030 00c7 05       		.byte	0x5
 1031 00c8 4E02     		.2byte	0x24e
 1032 00ca CE000000 		.4byte	0xce
 1033 00ce 06       		.uleb128 0x6
 1034 00cf 04       		.byte	0x4
 1035 00d0 D4000000 		.4byte	0xd4
 1036 00d4 07       		.uleb128 0x7
 1037 00d5 02       		.uleb128 0x2
 1038 00d6 08       		.byte	0x8
 1039 00d7 04       		.byte	0x4
 1040 00d8 E0000000 		.4byte	.LASF19
 1041 00dc 02       		.uleb128 0x2
 1042 00dd 04       		.byte	0x4
 1043 00de 07       		.byte	0x7
 1044 00df 28000000 		.4byte	.LASF20
 1045 00e3 08       		.uleb128 0x8
 1046 00e4 04       		.byte	0x4
 1047 00e5 06       		.uleb128 0x6
 1048 00e6 04       		.byte	0x4
 1049 00e7 BB000000 		.4byte	0xbb
 1050 00eb 03       		.uleb128 0x3
 1051 00ec EE020000 		.4byte	.LASF21
 1052 00f0 02       		.byte	0x2
 1053 00f1 38       		.byte	0x38
 1054 00f2 57000000 		.4byte	0x57
 1055 00f6 03       		.uleb128 0x3
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 29


 1056 00f7 84020000 		.4byte	.LASF22
 1057 00fb 02       		.byte	0x2
 1058 00fc 3F       		.byte	0x3f
 1059 00fd A2000000 		.4byte	0xa2
 1060 0101 03       		.uleb128 0x3
 1061 0102 45000000 		.4byte	.LASF23
 1062 0106 06       		.byte	0x6
 1063 0107 3E       		.byte	0x3e
 1064 0108 0C010000 		.4byte	0x10c
 1065 010c 06       		.uleb128 0x6
 1066 010d 04       		.byte	0x4
 1067 010e 12010000 		.4byte	0x112
 1068 0112 09       		.uleb128 0x9
 1069 0113 2C020000 		.4byte	.LASF63
 1070 0117 03       		.uleb128 0x3
 1071 0118 B8030000 		.4byte	.LASF24
 1072 011c 07       		.byte	0x7
 1073 011d 2E       		.byte	0x2e
 1074 011e E3000000 		.4byte	0xe3
 1075 0122 03       		.uleb128 0x3
 1076 0123 99020000 		.4byte	.LASF25
 1077 0127 08       		.byte	0x8
 1078 0128 25       		.byte	0x25
 1079 0129 17010000 		.4byte	0x117
 1080 012d 03       		.uleb128 0x3
 1081 012e 5C030000 		.4byte	.LASF26
 1082 0132 09       		.byte	0x9
 1083 0133 1F       		.byte	0x1f
 1084 0134 E3000000 		.4byte	0xe3
 1085 0138 0A       		.uleb128 0xa
 1086 0139 24       		.byte	0x24
 1087 013a 0A       		.byte	0xa
 1088 013b 03       		.byte	0x3
 1089 013c AD010000 		.4byte	0x1ad
 1090 0140 0B       		.uleb128 0xb
 1091 0141 AB020000 		.4byte	.LASF27
 1092 0145 0A       		.byte	0xa
 1093 0146 04       		.byte	0x4
 1094 0147 57000000 		.4byte	0x57
 1095 014b 00       		.byte	0
 1096 014c 0B       		.uleb128 0xb
 1097 014d 1F000000 		.4byte	.LASF28
 1098 0151 0A       		.byte	0xa
 1099 0152 05       		.byte	0x5
 1100 0153 57000000 		.4byte	0x57
 1101 0157 04       		.byte	0x4
 1102 0158 0B       		.uleb128 0xb
 1103 0159 09030000 		.4byte	.LASF29
 1104 015d 0A       		.byte	0xa
 1105 015e 06       		.byte	0x6
 1106 015f 7E000000 		.4byte	0x7e
 1107 0163 08       		.byte	0x8
 1108 0164 0B       		.uleb128 0xb
 1109 0165 C6030000 		.4byte	.LASF30
 1110 0169 0A       		.byte	0xa
 1111 016a 07       		.byte	0x7
 1112 016b 7E000000 		.4byte	0x7e
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 30


 1113 016f 0C       		.byte	0xc
 1114 0170 0B       		.uleb128 0xb
 1115 0171 8F020000 		.4byte	.LASF31
 1116 0175 0A       		.byte	0xa
 1117 0176 08       		.byte	0x8
 1118 0177 7E000000 		.4byte	0x7e
 1119 017b 10       		.byte	0x10
 1120 017c 0B       		.uleb128 0xb
 1121 017d 2C030000 		.4byte	.LASF32
 1122 0181 0A       		.byte	0xa
 1123 0182 09       		.byte	0x9
 1124 0183 7E000000 		.4byte	0x7e
 1125 0187 14       		.byte	0x14
 1126 0188 0C       		.uleb128 0xc
 1127 0189 696E6300 		.ascii	"inc\000"
 1128 018d 0A       		.byte	0xa
 1129 018e 0A       		.byte	0xa
 1130 018f 7E000000 		.4byte	0x7e
 1131 0193 18       		.byte	0x18
 1132 0194 0B       		.uleb128 0xb
 1133 0195 04030000 		.4byte	.LASF33
 1134 0199 0A       		.byte	0xa
 1135 019a 0B       		.byte	0xb
 1136 019b A2000000 		.4byte	0xa2
 1137 019f 1C       		.byte	0x1c
 1138 01a0 0B       		.uleb128 0xb
 1139 01a1 22020000 		.4byte	.LASF34
 1140 01a5 0A       		.byte	0xa
 1141 01a6 0C       		.byte	0xc
 1142 01a7 A2000000 		.4byte	0xa2
 1143 01ab 20       		.byte	0x20
 1144 01ac 00       		.byte	0
 1145 01ad 03       		.uleb128 0x3
 1146 01ae 17020000 		.4byte	.LASF35
 1147 01b2 0A       		.byte	0xa
 1148 01b3 0D       		.byte	0xd
 1149 01b4 38010000 		.4byte	0x138
 1150 01b8 0A       		.uleb128 0xa
 1151 01b9 18       		.byte	0x18
 1152 01ba 0A       		.byte	0xa
 1153 01bb 0F       		.byte	0xf
 1154 01bc E2010000 		.4byte	0x1e2
 1155 01c0 0C       		.uleb128 0xc
 1156 01c1 4B6900   		.ascii	"Ki\000"
 1157 01c4 0A       		.byte	0xa
 1158 01c5 10       		.byte	0x10
 1159 01c6 B4000000 		.4byte	0xb4
 1160 01ca 00       		.byte	0
 1161 01cb 0C       		.uleb128 0xc
 1162 01cc 4B7000   		.ascii	"Kp\000"
 1163 01cf 0A       		.byte	0xa
 1164 01d0 11       		.byte	0x11
 1165 01d1 B4000000 		.4byte	0xb4
 1166 01d5 08       		.byte	0x8
 1167 01d6 0C       		.uleb128 0xc
 1168 01d7 4B6400   		.ascii	"Kd\000"
 1169 01da 0A       		.byte	0xa
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 31


 1170 01db 12       		.byte	0x12
 1171 01dc B4000000 		.4byte	0xb4
 1172 01e0 10       		.byte	0x10
 1173 01e1 00       		.byte	0
 1174 01e2 03       		.uleb128 0x3
 1175 01e3 F7000000 		.4byte	.LASF36
 1176 01e7 0A       		.byte	0xa
 1177 01e8 13       		.byte	0x13
 1178 01e9 B8010000 		.4byte	0x1b8
 1179 01ed 0D       		.uleb128 0xd
 1180 01ee CC030000 		.4byte	.LASF64
 1181 01f2 02       		.byte	0x2
 1182 01f3 BF       		.byte	0xbf
 1183 01f4 03       		.byte	0x3
 1184 01f5 05020000 		.4byte	0x205
 1185 01f9 0E       		.uleb128 0xe
 1186 01fa 11040000 		.4byte	.LASF65
 1187 01fe 02       		.byte	0x2
 1188 01ff C1       		.byte	0xc1
 1189 0200 A2000000 		.4byte	0xa2
 1190 0204 00       		.byte	0
 1191 0205 0F       		.uleb128 0xf
 1192 0206 37030000 		.4byte	.LASF66
 1193 020a 01       		.byte	0x1
 1194 020b 5B       		.byte	0x5b
 1195 020c 7E000000 		.4byte	0x7e
 1196 0210 00000000 		.4byte	.LFB69
 1197 0214 E4000000 		.4byte	.LFE69-.LFB69
 1198 0218 01       		.uleb128 0x1
 1199 0219 9C       		.byte	0x9c
 1200 021a 2E020000 		.4byte	0x22e
 1201 021e 10       		.uleb128 0x10
 1202 021f 72756E00 		.ascii	"run\000"
 1203 0223 01       		.byte	0x1
 1204 0224 5C       		.byte	0x5c
 1205 0225 2E020000 		.4byte	0x22e
 1206 0229 03       		.uleb128 0x3
 1207 022a 91       		.byte	0x91
 1208 022b F07D     		.sleb128 -272
 1209 022d 00       		.byte	0
 1210 022e 11       		.uleb128 0x11
 1211 022f 3E020000 		.4byte	0x23e
 1212 0233 3E020000 		.4byte	0x23e
 1213 0237 12       		.uleb128 0x12
 1214 0238 DC000000 		.4byte	0xdc
 1215 023c 3F       		.byte	0x3f
 1216 023d 00       		.byte	0
 1217 023e 06       		.uleb128 0x6
 1218 023f 04       		.byte	0x4
 1219 0240 44020000 		.4byte	0x244
 1220 0244 13       		.uleb128 0x13
 1221 0245 25000000 		.4byte	0x25
 1222 0249 14       		.uleb128 0x14
 1223 024a 0D000000 		.4byte	.LASF40
 1224 024e 01       		.byte	0x1
 1225 024f 75       		.byte	0x75
 1226 0250 00000000 		.4byte	.LFB70
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 32


 1227 0254 E8020000 		.4byte	.LFE70-.LFB70
 1228 0258 01       		.uleb128 0x1
 1229 0259 9C       		.byte	0x9c
 1230 025a B1020000 		.4byte	0x2b1
 1231 025e 15       		.uleb128 0x15
 1232 025f 7000     		.ascii	"p\000"
 1233 0261 01       		.byte	0x1
 1234 0262 75       		.byte	0x75
 1235 0263 E3000000 		.4byte	0xe3
 1236 0267 03       		.uleb128 0x3
 1237 0268 91       		.byte	0x91
 1238 0269 D47D     		.sleb128 -300
 1239 026b 16       		.uleb128 0x16
 1240 026c 7F010000 		.4byte	.LASF37
 1241 0270 01       		.byte	0x1
 1242 0271 79       		.byte	0x79
 1243 0272 2E020000 		.4byte	0x22e
 1244 0276 03       		.uleb128 0x3
 1245 0277 91       		.byte	0x91
 1246 0278 E47D     		.sleb128 -284
 1247 027a 10       		.uleb128 0x10
 1248 027b 6900     		.ascii	"i\000"
 1249 027d 01       		.byte	0x1
 1250 027e 7A       		.byte	0x7a
 1251 027f 7E000000 		.4byte	0x7e
 1252 0283 02       		.uleb128 0x2
 1253 0284 91       		.byte	0x91
 1254 0285 6C       		.sleb128 -20
 1255 0286 10       		.uleb128 0x10
 1256 0287 676F00   		.ascii	"go\000"
 1257 028a 01       		.byte	0x1
 1258 028b 7B       		.byte	0x7b
 1259 028c 7E000000 		.4byte	0x7e
 1260 0290 02       		.uleb128 0x2
 1261 0291 91       		.byte	0x91
 1262 0292 68       		.sleb128 -24
 1263 0293 16       		.uleb128 0x16
 1264 0294 3C030000 		.4byte	.LASF38
 1265 0298 01       		.byte	0x1
 1266 0299 7C       		.byte	0x7c
 1267 029a 25000000 		.4byte	0x25
 1268 029e 02       		.uleb128 0x2
 1269 029f 91       		.byte	0x91
 1270 02a0 67       		.sleb128 -25
 1271 02a1 16       		.uleb128 0x16
 1272 02a2 1A000000 		.4byte	.LASF39
 1273 02a6 01       		.byte	0x1
 1274 02a7 7D       		.byte	0x7d
 1275 02a8 B1020000 		.4byte	0x2b1
 1276 02ac 03       		.uleb128 0x3
 1277 02ad 91       		.byte	0x91
 1278 02ae D87D     		.sleb128 -296
 1279 02b0 00       		.byte	0
 1280 02b1 11       		.uleb128 0x11
 1281 02b2 BB000000 		.4byte	0xbb
 1282 02b6 C1020000 		.4byte	0x2c1
 1283 02ba 12       		.uleb128 0x12
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 33


 1284 02bb DC000000 		.4byte	0xdc
 1285 02bf 09       		.byte	0x9
 1286 02c0 00       		.byte	0
 1287 02c1 14       		.uleb128 0x14
 1288 02c2 02040000 		.4byte	.LASF41
 1289 02c6 01       		.byte	0x1
 1290 02c7 C4       		.byte	0xc4
 1291 02c8 00000000 		.4byte	.LFB71
 1292 02cc E4000000 		.4byte	.LFE71-.LFB71
 1293 02d0 01       		.uleb128 0x1
 1294 02d1 9C       		.byte	0x9c
 1295 02d2 F3020000 		.4byte	0x2f3
 1296 02d6 15       		.uleb128 0x15
 1297 02d7 7000     		.ascii	"p\000"
 1298 02d9 01       		.byte	0x1
 1299 02da C4       		.byte	0xc4
 1300 02db E3000000 		.4byte	0xe3
 1301 02df 03       		.uleb128 0x3
 1302 02e0 91       		.byte	0x91
 1303 02e1 EC7D     		.sleb128 -276
 1304 02e3 16       		.uleb128 0x16
 1305 02e4 7F010000 		.4byte	.LASF37
 1306 02e8 01       		.byte	0x1
 1307 02e9 CF       		.byte	0xcf
 1308 02ea F3020000 		.4byte	0x2f3
 1309 02ee 03       		.uleb128 0x3
 1310 02ef 91       		.byte	0x91
 1311 02f0 F07D     		.sleb128 -272
 1312 02f2 00       		.byte	0
 1313 02f3 11       		.uleb128 0x11
 1314 02f4 03030000 		.4byte	0x303
 1315 02f8 03030000 		.4byte	0x303
 1316 02fc 12       		.uleb128 0x12
 1317 02fd DC000000 		.4byte	0xdc
 1318 0301 3F       		.byte	0x3f
 1319 0302 00       		.byte	0
 1320 0303 06       		.uleb128 0x6
 1321 0304 04       		.byte	0x4
 1322 0305 25000000 		.4byte	0x25
 1323 0309 17       		.uleb128 0x17
 1324 030a 6B030000 		.4byte	.LASF67
 1325 030e 01       		.byte	0x1
 1326 030f E5       		.byte	0xe5
 1327 0310 00000000 		.4byte	.LFB72
 1328 0314 94000000 		.4byte	.LFE72-.LFB72
 1329 0318 01       		.uleb128 0x1
 1330 0319 9C       		.byte	0x9c
 1331 031a 3F030000 		.4byte	0x33f
 1332 031e 18       		.uleb128 0x18
 1333 031f 49030000 		.4byte	.LASF42
 1334 0323 01       		.byte	0x1
 1335 0324 E8       		.byte	0xe8
 1336 0325 18       		.uleb128 0x18
 1337 0326 31000000 		.4byte	.LASF43
 1338 032a 01       		.byte	0x1
 1339 032b E9       		.byte	0xe9
 1340 032c 18       		.uleb128 0x18
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 34


 1341 032d 29010000 		.4byte	.LASF44
 1342 0331 01       		.byte	0x1
 1343 0332 EA       		.byte	0xea
 1344 0333 19       		.uleb128 0x19
 1345 0334 00000000 		.4byte	.LASF50
 1346 0338 01       		.byte	0x1
 1347 0339 EB       		.byte	0xeb
 1348 033a 3F030000 		.4byte	0x33f
 1349 033e 00       		.byte	0
 1350 033f 11       		.uleb128 0x11
 1351 0340 C2000000 		.4byte	0xc2
 1352 0344 4A030000 		.4byte	0x34a
 1353 0348 1A       		.uleb128 0x1a
 1354 0349 00       		.byte	0
 1355 034a 1B       		.uleb128 0x1b
 1356 034b 39010000 		.4byte	.LASF45
 1357 034f 01       		.byte	0x1
 1358 0350 1A01     		.2byte	0x11a
 1359 0352 00000000 		.4byte	.LFB73
 1360 0356 1E000000 		.4byte	.LFE73-.LFB73
 1361 035a 01       		.uleb128 0x1
 1362 035b 9C       		.byte	0x9c
 1363 035c A2030000 		.4byte	0x3a2
 1364 0360 1C       		.uleb128 0x1c
 1365 0361 57010000 		.4byte	.LASF46
 1366 0365 01       		.byte	0x1
 1367 0366 1A01     		.2byte	0x11a
 1368 0368 01010000 		.4byte	0x101
 1369 036c 02       		.uleb128 0x2
 1370 036d 91       		.byte	0x91
 1371 036e 6C       		.sleb128 -20
 1372 036f 1C       		.uleb128 0x1c
 1373 0370 1E040000 		.4byte	.LASF47
 1374 0374 01       		.byte	0x1
 1375 0375 1A01     		.2byte	0x11a
 1376 0377 E5000000 		.4byte	0xe5
 1377 037b 02       		.uleb128 0x2
 1378 037c 91       		.byte	0x91
 1379 037d 68       		.sleb128 -24
 1380 037e 1D       		.uleb128 0x1d
 1381 037f ED010000 		.4byte	0x1ed
 1382 0383 0A000000 		.4byte	.LBB6
 1383 0387 12000000 		.4byte	.LBE6-.LBB6
 1384 038b 01       		.byte	0x1
 1385 038c 1C01     		.2byte	0x11c
 1386 038e 1E       		.uleb128 0x1e
 1387 038f 0A000000 		.4byte	.LBB7
 1388 0393 12000000 		.4byte	.LBE7-.LBB7
 1389 0397 1F       		.uleb128 0x1f
 1390 0398 F9010000 		.4byte	0x1f9
 1391 039c 02       		.uleb128 0x2
 1392 039d 91       		.byte	0x91
 1393 039e 74       		.sleb128 -12
 1394 039f 00       		.byte	0
 1395 03a0 00       		.byte	0
 1396 03a1 00       		.byte	0
 1397 03a2 1B       		.uleb128 0x1b
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 35


 1398 03a3 50020000 		.4byte	.LASF48
 1399 03a7 01       		.byte	0x1
 1400 03a8 1F01     		.2byte	0x11f
 1401 03aa 00000000 		.4byte	.LFB74
 1402 03ae 1A000000 		.4byte	.LFE74-.LFB74
 1403 03b2 01       		.uleb128 0x1
 1404 03b3 9C       		.byte	0x9c
 1405 03b4 DC030000 		.4byte	0x3dc
 1406 03b8 1D       		.uleb128 0x1d
 1407 03b9 ED010000 		.4byte	0x1ed
 1408 03bd 06000000 		.4byte	.LBB8
 1409 03c1 12000000 		.4byte	.LBE8-.LBB8
 1410 03c5 01       		.byte	0x1
 1411 03c6 2101     		.2byte	0x121
 1412 03c8 1E       		.uleb128 0x1e
 1413 03c9 06000000 		.4byte	.LBB9
 1414 03cd 12000000 		.4byte	.LBE9-.LBB9
 1415 03d1 1F       		.uleb128 0x1f
 1416 03d2 F9010000 		.4byte	0x1f9
 1417 03d6 02       		.uleb128 0x2
 1418 03d7 91       		.byte	0x91
 1419 03d8 74       		.sleb128 -12
 1420 03d9 00       		.byte	0
 1421 03da 00       		.byte	0
 1422 03db 00       		.byte	0
 1423 03dc 16       		.uleb128 0x16
 1424 03dd 49020000 		.4byte	.LASF49
 1425 03e1 01       		.byte	0x1
 1426 03e2 49       		.byte	0x49
 1427 03e3 2D010000 		.4byte	0x12d
 1428 03e7 05       		.uleb128 0x5
 1429 03e8 03       		.byte	0x3
 1430 03e9 00000000 		.4byte	pxPort
 1431 03ed 20       		.uleb128 0x20
 1432 03ee EA030000 		.4byte	.LASF51
 1433 03f2 0B       		.byte	0xb
 1434 03f3 9606     		.2byte	0x696
 1435 03f5 F9030000 		.4byte	0x3f9
 1436 03f9 21       		.uleb128 0x21
 1437 03fa 97000000 		.4byte	0x97
 1438 03fe 22       		.uleb128 0x22
 1439 03ff F9020000 		.4byte	.LASF52
 1440 0403 01       		.byte	0x1
 1441 0404 4A       		.byte	0x4a
 1442 0405 22010000 		.4byte	0x122
 1443 0409 05       		.uleb128 0x5
 1444 040a 03       		.byte	0x3
 1445 040b 00000000 		.4byte	gatekeeper
 1446 040f 22       		.uleb128 0x22
 1447 0410 72010000 		.4byte	.LASF53
 1448 0414 01       		.byte	0x1
 1449 0415 4B       		.byte	0x4b
 1450 0416 17010000 		.4byte	0x117
 1451 041a 05       		.uleb128 0x5
 1452 041b 03       		.byte	0x3
 1453 041c 00000000 		.4byte	queue_handle
 1454 0420 22       		.uleb128 0x22
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 36


 1455 0421 A3030000 		.4byte	.LASF54
 1456 0425 01       		.byte	0x1
 1457 0426 4F       		.byte	0x4f
 1458 0427 25000000 		.4byte	0x25
 1459 042b 05       		.uleb128 0x5
 1460 042c 03       		.byte	0x3
 1461 042d 00000000 		.4byte	rx_receive
 1462 0431 11       		.uleb128 0x11
 1463 0432 37000000 		.4byte	0x37
 1464 0436 41040000 		.4byte	0x441
 1465 043a 12       		.uleb128 0x12
 1466 043b DC000000 		.4byte	0xdc
 1467 043f 3F       		.byte	0x3f
 1468 0440 00       		.byte	0
 1469 0441 22       		.uleb128 0x22
 1470 0442 7C030000 		.4byte	.LASF55
 1471 0446 01       		.byte	0x1
 1472 0447 50       		.byte	0x50
 1473 0448 31040000 		.4byte	0x431
 1474 044c 05       		.uleb128 0x5
 1475 044d 03       		.byte	0x3
 1476 044e 00000000 		.4byte	buffer
 1477 0452 22       		.uleb128 0x22
 1478 0453 F7030000 		.4byte	.LASF56
 1479 0457 01       		.byte	0x1
 1480 0458 53       		.byte	0x53
 1481 0459 AD010000 		.4byte	0x1ad
 1482 045d 05       		.uleb128 0x5
 1483 045e 03       		.byte	0x3
 1484 045f 00000000 		.4byte	left_wheel
 1485 0463 22       		.uleb128 0x22
 1486 0464 DE030000 		.4byte	.LASF57
 1487 0468 01       		.byte	0x1
 1488 0469 54       		.byte	0x54
 1489 046a AD010000 		.4byte	0x1ad
 1490 046e 05       		.uleb128 0x5
 1491 046f 03       		.byte	0x3
 1492 0470 00000000 		.4byte	right_wheel
 1493 0474 23       		.uleb128 0x23
 1494 0475 6B00     		.ascii	"k\000"
 1495 0477 01       		.byte	0x1
 1496 0478 55       		.byte	0x55
 1497 0479 E2010000 		.4byte	0x1e2
 1498 047d 05       		.uleb128 0x5
 1499 047e 03       		.byte	0x3
 1500 047f 00000000 		.4byte	k
 1501 0483 22       		.uleb128 0x22
 1502 0484 6D020000 		.4byte	.LASF58
 1503 0488 01       		.byte	0x1
 1504 0489 57       		.byte	0x57
 1505 048a 7E000000 		.4byte	0x7e
 1506 048e 05       		.uleb128 0x5
 1507 048f 03       		.byte	0x3
 1508 0490 00000000 		.4byte	isMaster
 1509 0494 22       		.uleb128 0x22
 1510 0495 17010000 		.4byte	.LASF59
 1511 0499 01       		.byte	0x1
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 37


 1512 049a 58       		.byte	0x58
 1513 049b 7E000000 		.4byte	0x7e
 1514 049f 05       		.uleb128 0x5
 1515 04a0 03       		.byte	0x3
 1516 04a1 00000000 		.4byte	first_run
 1517 04a5 19       		.uleb128 0x19
 1518 04a6 00000000 		.4byte	.LASF50
 1519 04aa 01       		.byte	0x1
 1520 04ab EB       		.byte	0xeb
 1521 04ac 3F030000 		.4byte	0x33f
 1522 04b0 00       		.byte	0
 1523              		.section	.debug_abbrev,"",%progbits
 1524              	.Ldebug_abbrev0:
 1525 0000 01       		.uleb128 0x1
 1526 0001 11       		.uleb128 0x11
 1527 0002 01       		.byte	0x1
 1528 0003 25       		.uleb128 0x25
 1529 0004 0E       		.uleb128 0xe
 1530 0005 13       		.uleb128 0x13
 1531 0006 0B       		.uleb128 0xb
 1532 0007 03       		.uleb128 0x3
 1533 0008 0E       		.uleb128 0xe
 1534 0009 1B       		.uleb128 0x1b
 1535 000a 0E       		.uleb128 0xe
 1536 000b 55       		.uleb128 0x55
 1537 000c 17       		.uleb128 0x17
 1538 000d 11       		.uleb128 0x11
 1539 000e 01       		.uleb128 0x1
 1540 000f 10       		.uleb128 0x10
 1541 0010 17       		.uleb128 0x17
 1542 0011 00       		.byte	0
 1543 0012 00       		.byte	0
 1544 0013 02       		.uleb128 0x2
 1545 0014 24       		.uleb128 0x24
 1546 0015 00       		.byte	0
 1547 0016 0B       		.uleb128 0xb
 1548 0017 0B       		.uleb128 0xb
 1549 0018 3E       		.uleb128 0x3e
 1550 0019 0B       		.uleb128 0xb
 1551 001a 03       		.uleb128 0x3
 1552 001b 0E       		.uleb128 0xe
 1553 001c 00       		.byte	0
 1554 001d 00       		.byte	0
 1555 001e 03       		.uleb128 0x3
 1556 001f 16       		.uleb128 0x16
 1557 0020 00       		.byte	0
 1558 0021 03       		.uleb128 0x3
 1559 0022 0E       		.uleb128 0xe
 1560 0023 3A       		.uleb128 0x3a
 1561 0024 0B       		.uleb128 0xb
 1562 0025 3B       		.uleb128 0x3b
 1563 0026 0B       		.uleb128 0xb
 1564 0027 49       		.uleb128 0x49
 1565 0028 13       		.uleb128 0x13
 1566 0029 00       		.byte	0
 1567 002a 00       		.byte	0
 1568 002b 04       		.uleb128 0x4
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 38


 1569 002c 24       		.uleb128 0x24
 1570 002d 00       		.byte	0
 1571 002e 0B       		.uleb128 0xb
 1572 002f 0B       		.uleb128 0xb
 1573 0030 3E       		.uleb128 0x3e
 1574 0031 0B       		.uleb128 0xb
 1575 0032 03       		.uleb128 0x3
 1576 0033 08       		.uleb128 0x8
 1577 0034 00       		.byte	0
 1578 0035 00       		.byte	0
 1579 0036 05       		.uleb128 0x5
 1580 0037 16       		.uleb128 0x16
 1581 0038 00       		.byte	0
 1582 0039 03       		.uleb128 0x3
 1583 003a 0E       		.uleb128 0xe
 1584 003b 3A       		.uleb128 0x3a
 1585 003c 0B       		.uleb128 0xb
 1586 003d 3B       		.uleb128 0x3b
 1587 003e 05       		.uleb128 0x5
 1588 003f 49       		.uleb128 0x49
 1589 0040 13       		.uleb128 0x13
 1590 0041 00       		.byte	0
 1591 0042 00       		.byte	0
 1592 0043 06       		.uleb128 0x6
 1593 0044 0F       		.uleb128 0xf
 1594 0045 00       		.byte	0
 1595 0046 0B       		.uleb128 0xb
 1596 0047 0B       		.uleb128 0xb
 1597 0048 49       		.uleb128 0x49
 1598 0049 13       		.uleb128 0x13
 1599 004a 00       		.byte	0
 1600 004b 00       		.byte	0
 1601 004c 07       		.uleb128 0x7
 1602 004d 15       		.uleb128 0x15
 1603 004e 00       		.byte	0
 1604 004f 27       		.uleb128 0x27
 1605 0050 19       		.uleb128 0x19
 1606 0051 00       		.byte	0
 1607 0052 00       		.byte	0
 1608 0053 08       		.uleb128 0x8
 1609 0054 0F       		.uleb128 0xf
 1610 0055 00       		.byte	0
 1611 0056 0B       		.uleb128 0xb
 1612 0057 0B       		.uleb128 0xb
 1613 0058 00       		.byte	0
 1614 0059 00       		.byte	0
 1615 005a 09       		.uleb128 0x9
 1616 005b 13       		.uleb128 0x13
 1617 005c 00       		.byte	0
 1618 005d 03       		.uleb128 0x3
 1619 005e 0E       		.uleb128 0xe
 1620 005f 3C       		.uleb128 0x3c
 1621 0060 19       		.uleb128 0x19
 1622 0061 00       		.byte	0
 1623 0062 00       		.byte	0
 1624 0063 0A       		.uleb128 0xa
 1625 0064 13       		.uleb128 0x13
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 39


 1626 0065 01       		.byte	0x1
 1627 0066 0B       		.uleb128 0xb
 1628 0067 0B       		.uleb128 0xb
 1629 0068 3A       		.uleb128 0x3a
 1630 0069 0B       		.uleb128 0xb
 1631 006a 3B       		.uleb128 0x3b
 1632 006b 0B       		.uleb128 0xb
 1633 006c 01       		.uleb128 0x1
 1634 006d 13       		.uleb128 0x13
 1635 006e 00       		.byte	0
 1636 006f 00       		.byte	0
 1637 0070 0B       		.uleb128 0xb
 1638 0071 0D       		.uleb128 0xd
 1639 0072 00       		.byte	0
 1640 0073 03       		.uleb128 0x3
 1641 0074 0E       		.uleb128 0xe
 1642 0075 3A       		.uleb128 0x3a
 1643 0076 0B       		.uleb128 0xb
 1644 0077 3B       		.uleb128 0x3b
 1645 0078 0B       		.uleb128 0xb
 1646 0079 49       		.uleb128 0x49
 1647 007a 13       		.uleb128 0x13
 1648 007b 38       		.uleb128 0x38
 1649 007c 0B       		.uleb128 0xb
 1650 007d 00       		.byte	0
 1651 007e 00       		.byte	0
 1652 007f 0C       		.uleb128 0xc
 1653 0080 0D       		.uleb128 0xd
 1654 0081 00       		.byte	0
 1655 0082 03       		.uleb128 0x3
 1656 0083 08       		.uleb128 0x8
 1657 0084 3A       		.uleb128 0x3a
 1658 0085 0B       		.uleb128 0xb
 1659 0086 3B       		.uleb128 0x3b
 1660 0087 0B       		.uleb128 0xb
 1661 0088 49       		.uleb128 0x49
 1662 0089 13       		.uleb128 0x13
 1663 008a 38       		.uleb128 0x38
 1664 008b 0B       		.uleb128 0xb
 1665 008c 00       		.byte	0
 1666 008d 00       		.byte	0
 1667 008e 0D       		.uleb128 0xd
 1668 008f 2E       		.uleb128 0x2e
 1669 0090 01       		.byte	0x1
 1670 0091 03       		.uleb128 0x3
 1671 0092 0E       		.uleb128 0xe
 1672 0093 3A       		.uleb128 0x3a
 1673 0094 0B       		.uleb128 0xb
 1674 0095 3B       		.uleb128 0x3b
 1675 0096 0B       		.uleb128 0xb
 1676 0097 27       		.uleb128 0x27
 1677 0098 19       		.uleb128 0x19
 1678 0099 20       		.uleb128 0x20
 1679 009a 0B       		.uleb128 0xb
 1680 009b 01       		.uleb128 0x1
 1681 009c 13       		.uleb128 0x13
 1682 009d 00       		.byte	0
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 40


 1683 009e 00       		.byte	0
 1684 009f 0E       		.uleb128 0xe
 1685 00a0 34       		.uleb128 0x34
 1686 00a1 00       		.byte	0
 1687 00a2 03       		.uleb128 0x3
 1688 00a3 0E       		.uleb128 0xe
 1689 00a4 3A       		.uleb128 0x3a
 1690 00a5 0B       		.uleb128 0xb
 1691 00a6 3B       		.uleb128 0x3b
 1692 00a7 0B       		.uleb128 0xb
 1693 00a8 49       		.uleb128 0x49
 1694 00a9 13       		.uleb128 0x13
 1695 00aa 00       		.byte	0
 1696 00ab 00       		.byte	0
 1697 00ac 0F       		.uleb128 0xf
 1698 00ad 2E       		.uleb128 0x2e
 1699 00ae 01       		.byte	0x1
 1700 00af 3F       		.uleb128 0x3f
 1701 00b0 19       		.uleb128 0x19
 1702 00b1 03       		.uleb128 0x3
 1703 00b2 0E       		.uleb128 0xe
 1704 00b3 3A       		.uleb128 0x3a
 1705 00b4 0B       		.uleb128 0xb
 1706 00b5 3B       		.uleb128 0x3b
 1707 00b6 0B       		.uleb128 0xb
 1708 00b7 27       		.uleb128 0x27
 1709 00b8 19       		.uleb128 0x19
 1710 00b9 49       		.uleb128 0x49
 1711 00ba 13       		.uleb128 0x13
 1712 00bb 11       		.uleb128 0x11
 1713 00bc 01       		.uleb128 0x1
 1714 00bd 12       		.uleb128 0x12
 1715 00be 06       		.uleb128 0x6
 1716 00bf 40       		.uleb128 0x40
 1717 00c0 18       		.uleb128 0x18
 1718 00c1 9642     		.uleb128 0x2116
 1719 00c3 19       		.uleb128 0x19
 1720 00c4 01       		.uleb128 0x1
 1721 00c5 13       		.uleb128 0x13
 1722 00c6 00       		.byte	0
 1723 00c7 00       		.byte	0
 1724 00c8 10       		.uleb128 0x10
 1725 00c9 34       		.uleb128 0x34
 1726 00ca 00       		.byte	0
 1727 00cb 03       		.uleb128 0x3
 1728 00cc 08       		.uleb128 0x8
 1729 00cd 3A       		.uleb128 0x3a
 1730 00ce 0B       		.uleb128 0xb
 1731 00cf 3B       		.uleb128 0x3b
 1732 00d0 0B       		.uleb128 0xb
 1733 00d1 49       		.uleb128 0x49
 1734 00d2 13       		.uleb128 0x13
 1735 00d3 02       		.uleb128 0x2
 1736 00d4 18       		.uleb128 0x18
 1737 00d5 00       		.byte	0
 1738 00d6 00       		.byte	0
 1739 00d7 11       		.uleb128 0x11
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 41


 1740 00d8 01       		.uleb128 0x1
 1741 00d9 01       		.byte	0x1
 1742 00da 49       		.uleb128 0x49
 1743 00db 13       		.uleb128 0x13
 1744 00dc 01       		.uleb128 0x1
 1745 00dd 13       		.uleb128 0x13
 1746 00de 00       		.byte	0
 1747 00df 00       		.byte	0
 1748 00e0 12       		.uleb128 0x12
 1749 00e1 21       		.uleb128 0x21
 1750 00e2 00       		.byte	0
 1751 00e3 49       		.uleb128 0x49
 1752 00e4 13       		.uleb128 0x13
 1753 00e5 2F       		.uleb128 0x2f
 1754 00e6 0B       		.uleb128 0xb
 1755 00e7 00       		.byte	0
 1756 00e8 00       		.byte	0
 1757 00e9 13       		.uleb128 0x13
 1758 00ea 26       		.uleb128 0x26
 1759 00eb 00       		.byte	0
 1760 00ec 49       		.uleb128 0x49
 1761 00ed 13       		.uleb128 0x13
 1762 00ee 00       		.byte	0
 1763 00ef 00       		.byte	0
 1764 00f0 14       		.uleb128 0x14
 1765 00f1 2E       		.uleb128 0x2e
 1766 00f2 01       		.byte	0x1
 1767 00f3 3F       		.uleb128 0x3f
 1768 00f4 19       		.uleb128 0x19
 1769 00f5 03       		.uleb128 0x3
 1770 00f6 0E       		.uleb128 0xe
 1771 00f7 3A       		.uleb128 0x3a
 1772 00f8 0B       		.uleb128 0xb
 1773 00f9 3B       		.uleb128 0x3b
 1774 00fa 0B       		.uleb128 0xb
 1775 00fb 27       		.uleb128 0x27
 1776 00fc 19       		.uleb128 0x19
 1777 00fd 11       		.uleb128 0x11
 1778 00fe 01       		.uleb128 0x1
 1779 00ff 12       		.uleb128 0x12
 1780 0100 06       		.uleb128 0x6
 1781 0101 40       		.uleb128 0x40
 1782 0102 18       		.uleb128 0x18
 1783 0103 9642     		.uleb128 0x2116
 1784 0105 19       		.uleb128 0x19
 1785 0106 01       		.uleb128 0x1
 1786 0107 13       		.uleb128 0x13
 1787 0108 00       		.byte	0
 1788 0109 00       		.byte	0
 1789 010a 15       		.uleb128 0x15
 1790 010b 05       		.uleb128 0x5
 1791 010c 00       		.byte	0
 1792 010d 03       		.uleb128 0x3
 1793 010e 08       		.uleb128 0x8
 1794 010f 3A       		.uleb128 0x3a
 1795 0110 0B       		.uleb128 0xb
 1796 0111 3B       		.uleb128 0x3b
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 42


 1797 0112 0B       		.uleb128 0xb
 1798 0113 49       		.uleb128 0x49
 1799 0114 13       		.uleb128 0x13
 1800 0115 02       		.uleb128 0x2
 1801 0116 18       		.uleb128 0x18
 1802 0117 00       		.byte	0
 1803 0118 00       		.byte	0
 1804 0119 16       		.uleb128 0x16
 1805 011a 34       		.uleb128 0x34
 1806 011b 00       		.byte	0
 1807 011c 03       		.uleb128 0x3
 1808 011d 0E       		.uleb128 0xe
 1809 011e 3A       		.uleb128 0x3a
 1810 011f 0B       		.uleb128 0xb
 1811 0120 3B       		.uleb128 0x3b
 1812 0121 0B       		.uleb128 0xb
 1813 0122 49       		.uleb128 0x49
 1814 0123 13       		.uleb128 0x13
 1815 0124 02       		.uleb128 0x2
 1816 0125 18       		.uleb128 0x18
 1817 0126 00       		.byte	0
 1818 0127 00       		.byte	0
 1819 0128 17       		.uleb128 0x17
 1820 0129 2E       		.uleb128 0x2e
 1821 012a 01       		.byte	0x1
 1822 012b 03       		.uleb128 0x3
 1823 012c 0E       		.uleb128 0xe
 1824 012d 3A       		.uleb128 0x3a
 1825 012e 0B       		.uleb128 0xb
 1826 012f 3B       		.uleb128 0x3b
 1827 0130 0B       		.uleb128 0xb
 1828 0131 27       		.uleb128 0x27
 1829 0132 19       		.uleb128 0x19
 1830 0133 11       		.uleb128 0x11
 1831 0134 01       		.uleb128 0x1
 1832 0135 12       		.uleb128 0x12
 1833 0136 06       		.uleb128 0x6
 1834 0137 40       		.uleb128 0x40
 1835 0138 18       		.uleb128 0x18
 1836 0139 9642     		.uleb128 0x2116
 1837 013b 19       		.uleb128 0x19
 1838 013c 01       		.uleb128 0x1
 1839 013d 13       		.uleb128 0x13
 1840 013e 00       		.byte	0
 1841 013f 00       		.byte	0
 1842 0140 18       		.uleb128 0x18
 1843 0141 2E       		.uleb128 0x2e
 1844 0142 00       		.byte	0
 1845 0143 3F       		.uleb128 0x3f
 1846 0144 19       		.uleb128 0x19
 1847 0145 03       		.uleb128 0x3
 1848 0146 0E       		.uleb128 0xe
 1849 0147 3A       		.uleb128 0x3a
 1850 0148 0B       		.uleb128 0xb
 1851 0149 3B       		.uleb128 0x3b
 1852 014a 0B       		.uleb128 0xb
 1853 014b 27       		.uleb128 0x27
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 43


 1854 014c 19       		.uleb128 0x19
 1855 014d 3C       		.uleb128 0x3c
 1856 014e 19       		.uleb128 0x19
 1857 014f 00       		.byte	0
 1858 0150 00       		.byte	0
 1859 0151 19       		.uleb128 0x19
 1860 0152 34       		.uleb128 0x34
 1861 0153 00       		.byte	0
 1862 0154 03       		.uleb128 0x3
 1863 0155 0E       		.uleb128 0xe
 1864 0156 3A       		.uleb128 0x3a
 1865 0157 0B       		.uleb128 0xb
 1866 0158 3B       		.uleb128 0x3b
 1867 0159 0B       		.uleb128 0xb
 1868 015a 49       		.uleb128 0x49
 1869 015b 13       		.uleb128 0x13
 1870 015c 3F       		.uleb128 0x3f
 1871 015d 19       		.uleb128 0x19
 1872 015e 3C       		.uleb128 0x3c
 1873 015f 19       		.uleb128 0x19
 1874 0160 00       		.byte	0
 1875 0161 00       		.byte	0
 1876 0162 1A       		.uleb128 0x1a
 1877 0163 21       		.uleb128 0x21
 1878 0164 00       		.byte	0
 1879 0165 00       		.byte	0
 1880 0166 00       		.byte	0
 1881 0167 1B       		.uleb128 0x1b
 1882 0168 2E       		.uleb128 0x2e
 1883 0169 01       		.byte	0x1
 1884 016a 3F       		.uleb128 0x3f
 1885 016b 19       		.uleb128 0x19
 1886 016c 03       		.uleb128 0x3
 1887 016d 0E       		.uleb128 0xe
 1888 016e 3A       		.uleb128 0x3a
 1889 016f 0B       		.uleb128 0xb
 1890 0170 3B       		.uleb128 0x3b
 1891 0171 05       		.uleb128 0x5
 1892 0172 27       		.uleb128 0x27
 1893 0173 19       		.uleb128 0x19
 1894 0174 11       		.uleb128 0x11
 1895 0175 01       		.uleb128 0x1
 1896 0176 12       		.uleb128 0x12
 1897 0177 06       		.uleb128 0x6
 1898 0178 40       		.uleb128 0x40
 1899 0179 18       		.uleb128 0x18
 1900 017a 9742     		.uleb128 0x2117
 1901 017c 19       		.uleb128 0x19
 1902 017d 01       		.uleb128 0x1
 1903 017e 13       		.uleb128 0x13
 1904 017f 00       		.byte	0
 1905 0180 00       		.byte	0
 1906 0181 1C       		.uleb128 0x1c
 1907 0182 05       		.uleb128 0x5
 1908 0183 00       		.byte	0
 1909 0184 03       		.uleb128 0x3
 1910 0185 0E       		.uleb128 0xe
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 44


 1911 0186 3A       		.uleb128 0x3a
 1912 0187 0B       		.uleb128 0xb
 1913 0188 3B       		.uleb128 0x3b
 1914 0189 05       		.uleb128 0x5
 1915 018a 49       		.uleb128 0x49
 1916 018b 13       		.uleb128 0x13
 1917 018c 02       		.uleb128 0x2
 1918 018d 18       		.uleb128 0x18
 1919 018e 00       		.byte	0
 1920 018f 00       		.byte	0
 1921 0190 1D       		.uleb128 0x1d
 1922 0191 1D       		.uleb128 0x1d
 1923 0192 01       		.byte	0x1
 1924 0193 31       		.uleb128 0x31
 1925 0194 13       		.uleb128 0x13
 1926 0195 11       		.uleb128 0x11
 1927 0196 01       		.uleb128 0x1
 1928 0197 12       		.uleb128 0x12
 1929 0198 06       		.uleb128 0x6
 1930 0199 58       		.uleb128 0x58
 1931 019a 0B       		.uleb128 0xb
 1932 019b 59       		.uleb128 0x59
 1933 019c 05       		.uleb128 0x5
 1934 019d 00       		.byte	0
 1935 019e 00       		.byte	0
 1936 019f 1E       		.uleb128 0x1e
 1937 01a0 0B       		.uleb128 0xb
 1938 01a1 01       		.byte	0x1
 1939 01a2 11       		.uleb128 0x11
 1940 01a3 01       		.uleb128 0x1
 1941 01a4 12       		.uleb128 0x12
 1942 01a5 06       		.uleb128 0x6
 1943 01a6 00       		.byte	0
 1944 01a7 00       		.byte	0
 1945 01a8 1F       		.uleb128 0x1f
 1946 01a9 34       		.uleb128 0x34
 1947 01aa 00       		.byte	0
 1948 01ab 31       		.uleb128 0x31
 1949 01ac 13       		.uleb128 0x13
 1950 01ad 02       		.uleb128 0x2
 1951 01ae 18       		.uleb128 0x18
 1952 01af 00       		.byte	0
 1953 01b0 00       		.byte	0
 1954 01b1 20       		.uleb128 0x20
 1955 01b2 34       		.uleb128 0x34
 1956 01b3 00       		.byte	0
 1957 01b4 03       		.uleb128 0x3
 1958 01b5 0E       		.uleb128 0xe
 1959 01b6 3A       		.uleb128 0x3a
 1960 01b7 0B       		.uleb128 0xb
 1961 01b8 3B       		.uleb128 0x3b
 1962 01b9 05       		.uleb128 0x5
 1963 01ba 49       		.uleb128 0x49
 1964 01bb 13       		.uleb128 0x13
 1965 01bc 3F       		.uleb128 0x3f
 1966 01bd 19       		.uleb128 0x19
 1967 01be 3C       		.uleb128 0x3c
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 45


 1968 01bf 19       		.uleb128 0x19
 1969 01c0 00       		.byte	0
 1970 01c1 00       		.byte	0
 1971 01c2 21       		.uleb128 0x21
 1972 01c3 35       		.uleb128 0x35
 1973 01c4 00       		.byte	0
 1974 01c5 49       		.uleb128 0x49
 1975 01c6 13       		.uleb128 0x13
 1976 01c7 00       		.byte	0
 1977 01c8 00       		.byte	0
 1978 01c9 22       		.uleb128 0x22
 1979 01ca 34       		.uleb128 0x34
 1980 01cb 00       		.byte	0
 1981 01cc 03       		.uleb128 0x3
 1982 01cd 0E       		.uleb128 0xe
 1983 01ce 3A       		.uleb128 0x3a
 1984 01cf 0B       		.uleb128 0xb
 1985 01d0 3B       		.uleb128 0x3b
 1986 01d1 0B       		.uleb128 0xb
 1987 01d2 49       		.uleb128 0x49
 1988 01d3 13       		.uleb128 0x13
 1989 01d4 3F       		.uleb128 0x3f
 1990 01d5 19       		.uleb128 0x19
 1991 01d6 02       		.uleb128 0x2
 1992 01d7 18       		.uleb128 0x18
 1993 01d8 00       		.byte	0
 1994 01d9 00       		.byte	0
 1995 01da 23       		.uleb128 0x23
 1996 01db 34       		.uleb128 0x34
 1997 01dc 00       		.byte	0
 1998 01dd 03       		.uleb128 0x3
 1999 01de 08       		.uleb128 0x8
 2000 01df 3A       		.uleb128 0x3a
 2001 01e0 0B       		.uleb128 0xb
 2002 01e1 3B       		.uleb128 0x3b
 2003 01e2 0B       		.uleb128 0xb
 2004 01e3 49       		.uleb128 0x49
 2005 01e4 13       		.uleb128 0x13
 2006 01e5 3F       		.uleb128 0x3f
 2007 01e6 19       		.uleb128 0x19
 2008 01e7 02       		.uleb128 0x2
 2009 01e8 18       		.uleb128 0x18
 2010 01e9 00       		.byte	0
 2011 01ea 00       		.byte	0
 2012 01eb 00       		.byte	0
 2013              		.section	.debug_aranges,"",%progbits
 2014 0000 44000000 		.4byte	0x44
 2015 0004 0200     		.2byte	0x2
 2016 0006 00000000 		.4byte	.Ldebug_info0
 2017 000a 04       		.byte	0x4
 2018 000b 00       		.byte	0
 2019 000c 0000     		.2byte	0
 2020 000e 0000     		.2byte	0
 2021 0010 00000000 		.4byte	.LFB69
 2022 0014 E4000000 		.4byte	.LFE69-.LFB69
 2023 0018 00000000 		.4byte	.LFB70
 2024 001c E8020000 		.4byte	.LFE70-.LFB70
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 46


 2025 0020 00000000 		.4byte	.LFB71
 2026 0024 E4000000 		.4byte	.LFE71-.LFB71
 2027 0028 00000000 		.4byte	.LFB72
 2028 002c 94000000 		.4byte	.LFE72-.LFB72
 2029 0030 00000000 		.4byte	.LFB73
 2030 0034 1E000000 		.4byte	.LFE73-.LFB73
 2031 0038 00000000 		.4byte	.LFB74
 2032 003c 1A000000 		.4byte	.LFE74-.LFB74
 2033 0040 00000000 		.4byte	0
 2034 0044 00000000 		.4byte	0
 2035              		.section	.debug_ranges,"",%progbits
 2036              	.Ldebug_ranges0:
 2037 0000 00000000 		.4byte	.LFB69
 2038 0004 E4000000 		.4byte	.LFE69
 2039 0008 00000000 		.4byte	.LFB70
 2040 000c E8020000 		.4byte	.LFE70
 2041 0010 00000000 		.4byte	.LFB71
 2042 0014 E4000000 		.4byte	.LFE71
 2043 0018 00000000 		.4byte	.LFB72
 2044 001c 94000000 		.4byte	.LFE72
 2045 0020 00000000 		.4byte	.LFB73
 2046 0024 1E000000 		.4byte	.LFE73
 2047 0028 00000000 		.4byte	.LFB74
 2048 002c 1A000000 		.4byte	.LFE74
 2049 0030 00000000 		.4byte	0
 2050 0034 00000000 		.4byte	0
 2051              		.section	.debug_line,"",%progbits
 2052              	.Ldebug_line0:
 2053 0000 28030000 		.section	.debug_str,"MS",%progbits,1
 2053      0200DF01 
 2053      00000201 
 2053      FB0E0D00 
 2053      01010101 
 2054              	.LASF50:
 2055 0000 43795261 		.ascii	"CyRamVectors\000"
 2055      6D566563 
 2055      746F7273 
 2055      00
 2056              	.LASF40:
 2057 000d 72656365 		.ascii	"receive_data\000"
 2057      6976655F 
 2057      64617461 
 2057      00
 2058              	.LASF39:
 2059 001a 74656D70 		.ascii	"temp\000"
 2059      00
 2060              	.LASF28:
 2061 001f 6375725F 		.ascii	"cur_dest\000"
 2061      64657374 
 2061      00
 2062              	.LASF20:
 2063 0028 73697A65 		.ascii	"sizetype\000"
 2063      74797065 
 2063      00
 2064              	.LASF43:
 2065 0031 78506F72 		.ascii	"xPortSysTickHandler\000"
 2065      74537973 
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 47


 2065      5469636B 
 2065      48616E64 
 2065      6C657200 
 2066              	.LASF23:
 2067 0045 5461736B 		.ascii	"TaskHandle_t\000"
 2067      48616E64 
 2067      6C655F74 
 2067      00
 2068              	.LASF60:
 2069 0052 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2069      43313120 
 2069      352E342E 
 2069      31203230 
 2069      31363036 
 2070 0085 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2070      20726576 
 2070      6973696F 
 2070      6E203233 
 2070      37373135 
 2071 00b8 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2071      66756E63 
 2071      74696F6E 
 2071      2D736563 
 2071      74696F6E 
 2072              	.LASF19:
 2073 00e0 6C6F6E67 		.ascii	"long double\000"
 2073      20646F75 
 2073      626C6500 
 2074              	.LASF7:
 2075 00ec 5F5F7569 		.ascii	"__uint32_t\000"
 2075      6E743332 
 2075      5F7400
 2076              	.LASF36:
 2077 00f7 5049445F 		.ascii	"PID_data\000"
 2077      64617461 
 2077      00
 2078              	.LASF18:
 2079 0100 63796973 		.ascii	"cyisraddress\000"
 2079      72616464 
 2079      72657373 
 2079      00
 2080              	.LASF2:
 2081 010d 73686F72 		.ascii	"short int\000"
 2081      7420696E 
 2081      7400
 2082              	.LASF59:
 2083 0117 66697273 		.ascii	"first_run\000"
 2083      745F7275 
 2083      6E00
 2084              	.LASF12:
 2085 0121 75696E74 		.ascii	"uint8_t\000"
 2085      385F7400 
 2086              	.LASF44:
 2087 0129 76506F72 		.ascii	"vPortSVCHandler\000"
 2087      74535643 
 2087      48616E64 
 2087      6C657200 
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 48


 2088              	.LASF45:
 2089 0139 76417070 		.ascii	"vApplicationStackOverflowHook\000"
 2089      6C696361 
 2089      74696F6E 
 2089      53746163 
 2089      6B4F7665 
 2090              	.LASF46:
 2091 0157 70785461 		.ascii	"pxTask\000"
 2091      736B00
 2092              	.LASF15:
 2093 015e 666C6F61 		.ascii	"float\000"
 2093      7400
 2094              	.LASF9:
 2095 0164 6C6F6E67 		.ascii	"long long int\000"
 2095      206C6F6E 
 2095      6720696E 
 2095      7400
 2096              	.LASF53:
 2097 0172 71756575 		.ascii	"queue_handle\000"
 2097      655F6861 
 2097      6E646C65 
 2097      00
 2098              	.LASF37:
 2099 017f 6C6F6361 		.ascii	"local_write\000"
 2099      6C5F7772 
 2099      69746500 
 2100              	.LASF62:
 2101 018b 433A5C55 		.ascii	"C:\\Users\\shevi\\Documents\\GitHub\\FYP_POSCCreato"
 2101      73657273 
 2101      5C736865 
 2101      76695C44 
 2101      6F63756D 
 2102 01b9 725F4D61 		.ascii	"r_Master\\FYP_PSOCCreator_Master\\CORTEX_CY8C5588_P"
 2102      73746572 
 2102      5C465950 
 2102      5F50534F 
 2102      43437265 
 2103 01ea 536F435F 		.ascii	"SoC_Creator_GCC\\FreeRTOS_Demo.cydsn\000"
 2103      43726561 
 2103      746F725F 
 2103      4743435C 
 2103      46726565 
 2104              	.LASF6:
 2105 020e 6C6F6E67 		.ascii	"long int\000"
 2105      20696E74 
 2105      00
 2106              	.LASF35:
 2107 0217 77686565 		.ascii	"wheel_data\000"
 2107      6C5F6461 
 2107      746100
 2108              	.LASF34:
 2109 0222 74696D65 		.ascii	"time_prev\000"
 2109      5F707265 
 2109      7600
 2110              	.LASF63:
 2111 022c 5461736B 		.ascii	"TaskControlBlock_t\000"
 2111      436F6E74 
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 49


 2111      726F6C42 
 2111      6C6F636B 
 2111      5F7400
 2112              	.LASF4:
 2113 023f 5F5F7569 		.ascii	"__uint8_t\000"
 2113      6E74385F 
 2113      7400
 2114              	.LASF49:
 2115 0249 7078506F 		.ascii	"pxPort\000"
 2115      727400
 2116              	.LASF48:
 2117 0250 76417070 		.ascii	"vApplicationMallocFailedHook\000"
 2117      6C696361 
 2117      74696F6E 
 2117      4D616C6C 
 2117      6F634661 
 2118              	.LASF58:
 2119 026d 69734D61 		.ascii	"isMaster\000"
 2119      73746572 
 2119      00
 2120              	.LASF1:
 2121 0276 756E7369 		.ascii	"unsigned char\000"
 2121      676E6564 
 2121      20636861 
 2121      7200
 2122              	.LASF22:
 2123 0284 5469636B 		.ascii	"TickType_t\000"
 2123      54797065 
 2123      5F7400
 2124              	.LASF31:
 2125 028f 6572726F 		.ascii	"error_sum\000"
 2125      725F7375 
 2125      6D00
 2126              	.LASF25:
 2127 0299 53656D61 		.ascii	"SemaphoreHandle_t\000"
 2127      70686F72 
 2127      6548616E 
 2127      646C655F 
 2127      7400
 2128              	.LASF27:
 2129 02ab 70726576 		.ascii	"prev_dest\000"
 2129      5F646573 
 2129      7400
 2130              	.LASF0:
 2131 02b5 7369676E 		.ascii	"signed char\000"
 2131      65642063 
 2131      68617200 
 2132              	.LASF10:
 2133 02c1 6C6F6E67 		.ascii	"long long unsigned int\000"
 2133      206C6F6E 
 2133      6720756E 
 2133      7369676E 
 2133      65642069 
 2134              	.LASF14:
 2135 02d8 75696E74 		.ascii	"uint32_t\000"
 2135      33325F74 
 2135      00
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 50


 2136              	.LASF11:
 2137 02e1 756E7369 		.ascii	"unsigned int\000"
 2137      676E6564 
 2137      20696E74 
 2137      00
 2138              	.LASF21:
 2139 02ee 42617365 		.ascii	"BaseType_t\000"
 2139      54797065 
 2139      5F7400
 2140              	.LASF52:
 2141 02f9 67617465 		.ascii	"gatekeeper\000"
 2141      6B656570 
 2141      657200
 2142              	.LASF33:
 2143 0304 74696D65 		.ascii	"time\000"
 2143      00
 2144              	.LASF29:
 2145 0309 6572726F 		.ascii	"error_prev\000"
 2145      725F7072 
 2145      657600
 2146              	.LASF3:
 2147 0314 73686F72 		.ascii	"short unsigned int\000"
 2147      7420756E 
 2147      7369676E 
 2147      65642069 
 2147      6E7400
 2148              	.LASF17:
 2149 0327 63686172 		.ascii	"char\000"
 2149      00
 2150              	.LASF32:
 2151 032c 6D6F746F 		.ascii	"motor_volt\000"
 2151      725F766F 
 2151      6C7400
 2152              	.LASF66:
 2153 0337 6D61696E 		.ascii	"main\000"
 2153      00
 2154              	.LASF38:
 2155 033c 74797065 		.ascii	"type\000"
 2155      00
 2156              	.LASF13:
 2157 0341 696E7433 		.ascii	"int32_t\000"
 2157      325F7400 
 2158              	.LASF42:
 2159 0349 78506F72 		.ascii	"xPortPendSVHandler\000"
 2159      7450656E 
 2159      64535648 
 2159      616E646C 
 2159      657200
 2160              	.LASF26:
 2161 035c 78436F6D 		.ascii	"xComPortHandle\000"
 2161      506F7274 
 2161      48616E64 
 2161      6C6500
 2162              	.LASF67:
 2163 036b 70727648 		.ascii	"prvHardwareSetup\000"
 2163      61726477 
 2163      61726553 
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 51


 2163      65747570 
 2163      00
 2164              	.LASF55:
 2165 037c 62756666 		.ascii	"buffer\000"
 2165      657200
 2166              	.LASF61:
 2167 0383 6D61696E 		.ascii	"main.c\000"
 2167      2E6300
 2168              	.LASF8:
 2169 038a 6C6F6E67 		.ascii	"long unsigned int\000"
 2169      20756E73 
 2169      69676E65 
 2169      6420696E 
 2169      7400
 2170              	.LASF16:
 2171 039c 646F7562 		.ascii	"double\000"
 2171      6C6500
 2172              	.LASF54:
 2173 03a3 72785F72 		.ascii	"rx_receive\000"
 2173      65636569 
 2173      766500
 2174              	.LASF5:
 2175 03ae 5F5F696E 		.ascii	"__int32_t\000"
 2175      7433325F 
 2175      7400
 2176              	.LASF24:
 2177 03b8 51756575 		.ascii	"QueueHandle_t\000"
 2177      6548616E 
 2177      646C655F 
 2177      7400
 2178              	.LASF30:
 2179 03c6 6572726F 		.ascii	"error\000"
 2179      7200
 2180              	.LASF64:
 2181 03cc 76506F72 		.ascii	"vPortRaiseBASEPRI\000"
 2181      74526169 
 2181      73654241 
 2181      53455052 
 2181      4900
 2182              	.LASF57:
 2183 03de 72696768 		.ascii	"right_wheel\000"
 2183      745F7768 
 2183      65656C00 
 2184              	.LASF51:
 2185 03ea 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2185      52784275 
 2185      66666572 
 2185      00
 2186              	.LASF56:
 2187 03f7 6C656674 		.ascii	"left_wheel\000"
 2187      5F776865 
 2187      656C00
 2188              	.LASF41:
 2189 0402 5049445F 		.ascii	"PID_initialise\000"
 2189      696E6974 
 2189      69616C69 
 2189      736500
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccXPcAYx.s 			page 52


 2190              	.LASF65:
 2191 0411 756C4E65 		.ascii	"ulNewBASEPRI\000"
 2191      77424153 
 2191      45505249 
 2191      00
 2192              	.LASF47:
 2193 041e 70635461 		.ascii	"pcTaskName\000"
 2193      736B4E61 
 2193      6D6500
 2194              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
=======
<<<<<<< HEAD
 777              		.loc 2 195 0
 778              		.syntax unified
 779              	@ 195 "..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h" 1
 780 000a 4FF0A003 			mov r3, #160												
 781 000e 83F31188 		msr basepri, r3											
 782 0012 BFF36F8F 		isb														
 783 0016 BFF34F8F 		dsb														
 784              	
 785              	@ 0 "" 2
 786              		.thumb
 787              		.syntax unified
 788 001a FB60     		str	r3, [r7, #12]
 789              	.L34:
 790              	.LBE7:
 791              	.LBE6:
 272:main.c        **** 	/* The stack space has been execeeded for a task, considering allocating more. */
 273:main.c        **** 	taskDISABLE_INTERRUPTS();
 274:main.c        **** 	for( ;; );
 792              		.loc 1 274 0 discriminator 1
 793 001c FEE7     		b	.L34
 794              		.cfi_endproc
 795              	.LFE73:
 796              		.size	vApplicationStackOverflowHook, .-vApplicationStackOverflowHook
 797 001e 00BF     		.section	.text.vApplicationMallocFailedHook,"ax",%progbits
 798              		.align	2
 799              		.global	vApplicationMallocFailedHook
 800              		.thumb
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccalsaR2.s 			page 24


 801              		.thumb_func
 802              		.type	vApplicationMallocFailedHook, %function
 803              	vApplicationMallocFailedHook:
 804              	.LFB74:
 275:main.c        **** }
 276:main.c        **** void vApplicationMallocFailedHook( void ) {
 805              		.loc 1 276 0
 806              		.cfi_startproc
 807              		@ args = 0, pretend = 0, frame = 8
 808              		@ frame_needed = 1, uses_anonymous_args = 0
 809              		@ link register save eliminated.
 810 0000 80B4     		push	{r7}
 811              		.cfi_def_cfa_offset 4
 812              		.cfi_offset 7, -4
 813 0002 83B0     		sub	sp, sp, #12
 814              		.cfi_def_cfa_offset 16
 815 0004 00AF     		add	r7, sp, #0
 816              		.cfi_def_cfa_register 7
 817              	.LBB8:
 818              	.LBB9:
 819              		.loc 2 195 0
 820              		.syntax unified
 821              	@ 195 "..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h" 1
 822 0006 4FF0A003 			mov r3, #160												
 823 000a 83F31188 		msr basepri, r3											
 824 000e BFF36F8F 		isb														
 825 0012 BFF34F8F 		dsb														
 826              	
 827              	@ 0 "" 2
 828              		.thumb
 829              		.syntax unified
 830 0016 7B60     		str	r3, [r7, #4]
 831              	.L36:
 832              	.LBE9:
 833              	.LBE8:
 277:main.c        **** 	/* The heap space has been execeeded. */
 278:main.c        **** 	taskDISABLE_INTERRUPTS();
 279:main.c        **** 	for( ;; );
 834              		.loc 1 279 0 discriminator 1
 835 0018 FEE7     		b	.L36
 836              		.cfi_endproc
 837              	.LFE74:
 838              		.size	vApplicationMallocFailedHook, .-vApplicationMallocFailedHook
 839 001a 00BF     		.text
 840              	.Letext0:
 841              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 842              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 843              		.file 5 "Generated_Source\\PSoC5/cytypes.h"
 844              		.file 6 "..\\..\\FreeRTOS_Source\\include/task.h"
 845              		.file 7 "..\\..\\FreeRTOS_Source\\include/queue.h"
 846              		.file 8 "..\\..\\FreeRTOS_Source\\include/semphr.h"
 847              		.file 9 "..\\..\\FreeRTOS_Source\\include/serial.h"
 848              		.file 10 "movement.h"
 849              		.file 11 "Generated_Source\\PSoC5/core_cm3.h"
 850              		.section	.debug_info,"",%progbits
 851              	.Ldebug_info0:
 852 0000 9C040000 		.4byte	0x49c
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccalsaR2.s 			page 25


 853 0004 0400     		.2byte	0x4
 854 0006 00000000 		.4byte	.Ldebug_abbrev0
 855 000a 04       		.byte	0x4
 856 000b 01       		.uleb128 0x1
 857 000c 52000000 		.4byte	.LASF59
 858 0010 0C       		.byte	0xc
 859 0011 F6020000 		.4byte	.LASF60
 860 0015 16030000 		.4byte	.LASF61
 861 0019 00000000 		.4byte	.Ldebug_ranges0+0
 862 001d 00000000 		.4byte	0
 863 0021 00000000 		.4byte	.Ldebug_line0
 864 0025 02       		.uleb128 0x2
 865 0026 01       		.byte	0x1
 866 0027 06       		.byte	0x6
 867 0028 28020000 		.4byte	.LASF0
 868 002c 03       		.uleb128 0x3
 869 002d B2010000 		.4byte	.LASF4
 870 0031 03       		.byte	0x3
 871 0032 1D       		.byte	0x1d
 872 0033 37000000 		.4byte	0x37
 873 0037 02       		.uleb128 0x2
 874 0038 01       		.byte	0x1
 875 0039 08       		.byte	0x8
 876 003a E9010000 		.4byte	.LASF1
 877 003e 02       		.uleb128 0x2
 878 003f 02       		.byte	0x2
 879 0040 05       		.byte	0x5
 880 0041 0D010000 		.4byte	.LASF2
 881 0045 02       		.uleb128 0x2
 882 0046 02       		.byte	0x2
 883 0047 07       		.byte	0x7
 884 0048 87020000 		.4byte	.LASF3
 885 004c 03       		.uleb128 0x3
 886 004d B9030000 		.4byte	.LASF5
 887 0051 03       		.byte	0x3
 888 0052 3F       		.byte	0x3f
 889 0053 57000000 		.4byte	0x57
 890 0057 02       		.uleb128 0x2
 891 0058 04       		.byte	0x4
 892 0059 05       		.byte	0x5
 893 005a 81010000 		.4byte	.LASF6
 894 005e 03       		.uleb128 0x3
 895 005f EC000000 		.4byte	.LASF7
 896 0063 03       		.byte	0x3
 897 0064 41       		.byte	0x41
 898 0065 69000000 		.4byte	0x69
 899 0069 02       		.uleb128 0x2
 900 006a 04       		.byte	0x4
 901 006b 07       		.byte	0x7
 902 006c FD020000 		.4byte	.LASF8
 903 0070 02       		.uleb128 0x2
 904 0071 08       		.byte	0x8
 905 0072 05       		.byte	0x5
 906 0073 5A010000 		.4byte	.LASF9
 907 0077 02       		.uleb128 0x2
 908 0078 08       		.byte	0x8
 909 0079 07       		.byte	0x7
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccalsaR2.s 			page 26


 910 007a 34020000 		.4byte	.LASF10
 911 007e 04       		.uleb128 0x4
 912 007f 04       		.byte	0x4
 913 0080 05       		.byte	0x5
 914 0081 696E7400 		.ascii	"int\000"
 915 0085 02       		.uleb128 0x2
 916 0086 04       		.byte	0x4
 917 0087 07       		.byte	0x7
 918 0088 54020000 		.4byte	.LASF11
 919 008c 03       		.uleb128 0x3
 920 008d 17010000 		.4byte	.LASF12
 921 0091 04       		.byte	0x4
 922 0092 18       		.byte	0x18
 923 0093 2C000000 		.4byte	0x2c
 924 0097 03       		.uleb128 0x3
 925 0098 B4020000 		.4byte	.LASF13
 926 009c 04       		.byte	0x4
 927 009d 2C       		.byte	0x2c
 928 009e 4C000000 		.4byte	0x4c
 929 00a2 03       		.uleb128 0x3
 930 00a3 4B020000 		.4byte	.LASF14
 931 00a7 04       		.byte	0x4
 932 00a8 30       		.byte	0x30
 933 00a9 5E000000 		.4byte	0x5e
 934 00ad 02       		.uleb128 0x2
 935 00ae 04       		.byte	0x4
 936 00af 04       		.byte	0x4
 937 00b0 54010000 		.4byte	.LASF15
 938 00b4 02       		.uleb128 0x2
 939 00b5 08       		.byte	0x8
 940 00b6 04       		.byte	0x4
 941 00b7 0F030000 		.4byte	.LASF16
 942 00bb 02       		.uleb128 0x2
 943 00bc 01       		.byte	0x1
 944 00bd 08       		.byte	0x8
 945 00be 9A020000 		.4byte	.LASF17
 946 00c2 05       		.uleb128 0x5
 947 00c3 00010000 		.4byte	.LASF18
 948 00c7 05       		.byte	0x5
 949 00c8 4E02     		.2byte	0x24e
 950 00ca CE000000 		.4byte	0xce
 951 00ce 06       		.uleb128 0x6
 952 00cf 04       		.byte	0x4
 953 00d0 D4000000 		.4byte	0xd4
 954 00d4 07       		.uleb128 0x7
 955 00d5 02       		.uleb128 0x2
 956 00d6 08       		.byte	0x8
 957 00d7 04       		.byte	0x4
 958 00d8 E0000000 		.4byte	.LASF19
 959 00dc 02       		.uleb128 0x2
 960 00dd 04       		.byte	0x4
 961 00de 07       		.byte	0x7
 962 00df 28000000 		.4byte	.LASF20
 963 00e3 08       		.uleb128 0x8
 964 00e4 04       		.byte	0x4
 965 00e5 06       		.uleb128 0x6
 966 00e6 04       		.byte	0x4
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccalsaR2.s 			page 27


 967 00e7 BB000000 		.4byte	0xbb
 968 00eb 03       		.uleb128 0x3
 969 00ec 61020000 		.4byte	.LASF21
 970 00f0 02       		.byte	0x2
 971 00f1 38       		.byte	0x38
 972 00f2 57000000 		.4byte	0x57
 973 00f6 03       		.uleb128 0x3
 974 00f7 F7010000 		.4byte	.LASF22
 975 00fb 02       		.byte	0x2
 976 00fc 3F       		.byte	0x3f
 977 00fd A2000000 		.4byte	0xa2
 978 0101 03       		.uleb128 0x3
 979 0102 45000000 		.4byte	.LASF23
 980 0106 06       		.byte	0x6
 981 0107 3E       		.byte	0x3e
 982 0108 0C010000 		.4byte	0x10c
 983 010c 06       		.uleb128 0x6
 984 010d 04       		.byte	0x4
 985 010e 12010000 		.4byte	0x112
 986 0112 09       		.uleb128 0x9
 987 0113 9F010000 		.4byte	.LASF62
 988 0117 03       		.uleb128 0x3
 989 0118 C3030000 		.4byte	.LASF24
 990 011c 07       		.byte	0x7
 991 011d 2E       		.byte	0x2e
 992 011e E3000000 		.4byte	0xe3
 993 0122 03       		.uleb128 0x3
 994 0123 0C020000 		.4byte	.LASF25
 995 0127 08       		.byte	0x8
 996 0128 25       		.byte	0x25
 997 0129 17010000 		.4byte	0x117
 998 012d 03       		.uleb128 0x3
 999 012e CF020000 		.4byte	.LASF26
 1000 0132 09       		.byte	0x9
 1001 0133 1F       		.byte	0x1f
 1002 0134 E3000000 		.4byte	0xe3
 1003 0138 0A       		.uleb128 0xa
 1004 0139 24       		.byte	0x24
 1005 013a 0A       		.byte	0xa
 1006 013b 03       		.byte	0x3
 1007 013c AD010000 		.4byte	0x1ad
 1008 0140 0B       		.uleb128 0xb
 1009 0141 1E020000 		.4byte	.LASF27
 1010 0145 0A       		.byte	0xa
 1011 0146 04       		.byte	0x4
 1012 0147 57000000 		.4byte	0x57
 1013 014b 00       		.byte	0
 1014 014c 0B       		.uleb128 0xb
 1015 014d 1F000000 		.4byte	.LASF28
 1016 0151 0A       		.byte	0xa
 1017 0152 05       		.byte	0x5
 1018 0153 57000000 		.4byte	0x57
 1019 0157 04       		.byte	0x4
 1020 0158 0B       		.uleb128 0xb
 1021 0159 7C020000 		.4byte	.LASF29
 1022 015d 0A       		.byte	0xa
 1023 015e 06       		.byte	0x6
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccalsaR2.s 			page 28


 1024 015f 7E000000 		.4byte	0x7e
 1025 0163 08       		.byte	0x8
 1026 0164 0B       		.uleb128 0xb
 1027 0165 D1030000 		.4byte	.LASF30
 1028 0169 0A       		.byte	0xa
 1029 016a 07       		.byte	0x7
 1030 016b 7E000000 		.4byte	0x7e
 1031 016f 0C       		.byte	0xc
 1032 0170 0B       		.uleb128 0xb
 1033 0171 02020000 		.4byte	.LASF31
 1034 0175 0A       		.byte	0xa
 1035 0176 08       		.byte	0x8
 1036 0177 7E000000 		.4byte	0x7e
 1037 017b 10       		.byte	0x10
 1038 017c 0B       		.uleb128 0xb
 1039 017d 9F020000 		.4byte	.LASF32
 1040 0181 0A       		.byte	0xa
 1041 0182 09       		.byte	0x9
 1042 0183 7E000000 		.4byte	0x7e
 1043 0187 14       		.byte	0x14
 1044 0188 0C       		.uleb128 0xc
 1045 0189 696E6300 		.ascii	"inc\000"
 1046 018d 0A       		.byte	0xa
 1047 018e 0A       		.byte	0xa
 1048 018f 7E000000 		.4byte	0x7e
 1049 0193 18       		.byte	0x18
 1050 0194 0B       		.uleb128 0xb
 1051 0195 77020000 		.4byte	.LASF33
 1052 0199 0A       		.byte	0xa
 1053 019a 0B       		.byte	0xb
 1054 019b A2000000 		.4byte	0xa2
 1055 019f 1C       		.byte	0x1c
 1056 01a0 0B       		.uleb128 0xb
 1057 01a1 95010000 		.4byte	.LASF34
 1058 01a5 0A       		.byte	0xa
 1059 01a6 0C       		.byte	0xc
 1060 01a7 A2000000 		.4byte	0xa2
 1061 01ab 20       		.byte	0x20
 1062 01ac 00       		.byte	0
 1063 01ad 03       		.uleb128 0x3
 1064 01ae 8A010000 		.4byte	.LASF35
 1065 01b2 0A       		.byte	0xa
 1066 01b3 0D       		.byte	0xd
 1067 01b4 38010000 		.4byte	0x138
 1068 01b8 0A       		.uleb128 0xa
 1069 01b9 18       		.byte	0x18
 1070 01ba 0A       		.byte	0xa
 1071 01bb 0F       		.byte	0xf
 1072 01bc E2010000 		.4byte	0x1e2
 1073 01c0 0C       		.uleb128 0xc
 1074 01c1 4B6900   		.ascii	"Ki\000"
 1075 01c4 0A       		.byte	0xa
 1076 01c5 10       		.byte	0x10
 1077 01c6 B4000000 		.4byte	0xb4
 1078 01ca 00       		.byte	0
 1079 01cb 0C       		.uleb128 0xc
 1080 01cc 4B7000   		.ascii	"Kp\000"
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccalsaR2.s 			page 29


 1081 01cf 0A       		.byte	0xa
 1082 01d0 11       		.byte	0x11
 1083 01d1 B4000000 		.4byte	0xb4
 1084 01d5 08       		.byte	0x8
 1085 01d6 0C       		.uleb128 0xc
 1086 01d7 4B6400   		.ascii	"Kd\000"
 1087 01da 0A       		.byte	0xa
 1088 01db 12       		.byte	0x12
 1089 01dc B4000000 		.4byte	0xb4
 1090 01e0 10       		.byte	0x10
 1091 01e1 00       		.byte	0
 1092 01e2 03       		.uleb128 0x3
 1093 01e3 F7000000 		.4byte	.LASF36
 1094 01e7 0A       		.byte	0xa
 1095 01e8 13       		.byte	0x13
 1096 01e9 B8010000 		.4byte	0x1b8
 1097 01ed 0D       		.uleb128 0xd
 1098 01ee D7030000 		.4byte	.LASF63
 1099 01f2 02       		.byte	0x2
 1100 01f3 BF       		.byte	0xbf
 1101 01f4 03       		.byte	0x3
 1102 01f5 05020000 		.4byte	0x205
 1103 01f9 0E       		.uleb128 0xe
 1104 01fa 1C040000 		.4byte	.LASF64
 1105 01fe 02       		.byte	0x2
 1106 01ff C1       		.byte	0xc1
 1107 0200 A2000000 		.4byte	0xa2
 1108 0204 00       		.byte	0
 1109 0205 0F       		.uleb128 0xf
 1110 0206 AA020000 		.4byte	.LASF65
 1111 020a 01       		.byte	0x1
 1112 020b 5B       		.byte	0x5b
 1113 020c 7E000000 		.4byte	0x7e
 1114 0210 00000000 		.4byte	.LFB69
 1115 0214 C4000000 		.4byte	.LFE69-.LFB69
 1116 0218 01       		.uleb128 0x1
 1117 0219 9C       		.byte	0x9c
 1118 021a 2E020000 		.4byte	0x22e
 1119 021e 10       		.uleb128 0x10
 1120 021f 72756E00 		.ascii	"run\000"
 1121 0223 01       		.byte	0x1
 1122 0224 5C       		.byte	0x5c
 1123 0225 2E020000 		.4byte	0x22e
 1124 0229 03       		.uleb128 0x3
 1125 022a 91       		.byte	0x91
 1126 022b F07D     		.sleb128 -272
 1127 022d 00       		.byte	0
 1128 022e 11       		.uleb128 0x11
 1129 022f 3E020000 		.4byte	0x23e
 1130 0233 3E020000 		.4byte	0x23e
 1131 0237 12       		.uleb128 0x12
 1132 0238 DC000000 		.4byte	0xdc
 1133 023c 3F       		.byte	0x3f
 1134 023d 00       		.byte	0
 1135 023e 06       		.uleb128 0x6
 1136 023f 04       		.byte	0x4
 1137 0240 44020000 		.4byte	0x244
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccalsaR2.s 			page 30


 1138 0244 13       		.uleb128 0x13
 1139 0245 25000000 		.4byte	0x25
 1140 0249 14       		.uleb128 0x14
 1141 024a 0D000000 		.4byte	.LASF40
 1142 024e 01       		.byte	0x1
 1143 024f 79       		.byte	0x79
 1144 0250 00000000 		.4byte	.LFB70
 1145 0254 80020000 		.4byte	.LFE70-.LFB70
 1146 0258 01       		.uleb128 0x1
 1147 0259 9C       		.byte	0x9c
 1148 025a B1020000 		.4byte	0x2b1
 1149 025e 15       		.uleb128 0x15
 1150 025f 7000     		.ascii	"p\000"
 1151 0261 01       		.byte	0x1
 1152 0262 79       		.byte	0x79
 1153 0263 E3000000 		.4byte	0xe3
 1154 0267 03       		.uleb128 0x3
 1155 0268 91       		.byte	0x91
 1156 0269 D47D     		.sleb128 -300
 1157 026b 16       		.uleb128 0x16
 1158 026c 75010000 		.4byte	.LASF37
 1159 0270 01       		.byte	0x1
 1160 0271 7D       		.byte	0x7d
 1161 0272 2E020000 		.4byte	0x22e
 1162 0276 03       		.uleb128 0x3
 1163 0277 91       		.byte	0x91
 1164 0278 E47D     		.sleb128 -284
 1165 027a 10       		.uleb128 0x10
 1166 027b 6900     		.ascii	"i\000"
 1167 027d 01       		.byte	0x1
 1168 027e 7E       		.byte	0x7e
 1169 027f 7E000000 		.4byte	0x7e
 1170 0283 02       		.uleb128 0x2
 1171 0284 91       		.byte	0x91
 1172 0285 6C       		.sleb128 -20
 1173 0286 10       		.uleb128 0x10
 1174 0287 676F00   		.ascii	"go\000"
 1175 028a 01       		.byte	0x1
 1176 028b 7F       		.byte	0x7f
 1177 028c 7E000000 		.4byte	0x7e
 1178 0290 02       		.uleb128 0x2
 1179 0291 91       		.byte	0x91
 1180 0292 68       		.sleb128 -24
 1181 0293 16       		.uleb128 0x16
 1182 0294 AF020000 		.4byte	.LASF38
 1183 0298 01       		.byte	0x1
 1184 0299 80       		.byte	0x80
 1185 029a 25000000 		.4byte	0x25
 1186 029e 02       		.uleb128 0x2
 1187 029f 91       		.byte	0x91
 1188 02a0 67       		.sleb128 -25
 1189 02a1 16       		.uleb128 0x16
 1190 02a2 1A000000 		.4byte	.LASF39
 1191 02a6 01       		.byte	0x1
 1192 02a7 81       		.byte	0x81
 1193 02a8 B1020000 		.4byte	0x2b1
 1194 02ac 03       		.uleb128 0x3
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccalsaR2.s 			page 31


 1195 02ad 91       		.byte	0x91
 1196 02ae D87D     		.sleb128 -296
 1197 02b0 00       		.byte	0
 1198 02b1 11       		.uleb128 0x11
 1199 02b2 BB000000 		.4byte	0xbb
 1200 02b6 C1020000 		.4byte	0x2c1
 1201 02ba 12       		.uleb128 0x12
 1202 02bb DC000000 		.4byte	0xdc
 1203 02bf 09       		.byte	0x9
 1204 02c0 00       		.byte	0
 1205 02c1 14       		.uleb128 0x14
 1206 02c2 0D040000 		.4byte	.LASF41
 1207 02c6 01       		.byte	0x1
 1208 02c7 BF       		.byte	0xbf
 1209 02c8 00000000 		.4byte	.LFB71
 1210 02cc F0000000 		.4byte	.LFE71-.LFB71
 1211 02d0 01       		.uleb128 0x1
 1212 02d1 9C       		.byte	0x9c
 1213 02d2 F3020000 		.4byte	0x2f3
 1214 02d6 15       		.uleb128 0x15
 1215 02d7 7000     		.ascii	"p\000"
 1216 02d9 01       		.byte	0x1
 1217 02da BF       		.byte	0xbf
 1218 02db E3000000 		.4byte	0xe3
 1219 02df 03       		.uleb128 0x3
 1220 02e0 91       		.byte	0x91
 1221 02e1 E47D     		.sleb128 -284
 1222 02e3 16       		.uleb128 0x16
 1223 02e4 75010000 		.4byte	.LASF37
 1224 02e8 01       		.byte	0x1
 1225 02e9 CA       		.byte	0xca
 1226 02ea F3020000 		.4byte	0x2f3
 1227 02ee 03       		.uleb128 0x3
 1228 02ef 91       		.byte	0x91
 1229 02f0 E87D     		.sleb128 -280
 1230 02f2 00       		.byte	0
 1231 02f3 11       		.uleb128 0x11
 1232 02f4 03030000 		.4byte	0x303
 1233 02f8 03030000 		.4byte	0x303
 1234 02fc 12       		.uleb128 0x12
 1235 02fd DC000000 		.4byte	0xdc
 1236 0301 3F       		.byte	0x3f
 1237 0302 00       		.byte	0
 1238 0303 06       		.uleb128 0x6
 1239 0304 04       		.byte	0x4
 1240 0305 25000000 		.4byte	0x25
 1241 0309 17       		.uleb128 0x17
 1242 030a DE020000 		.4byte	.LASF66
 1243 030e 01       		.byte	0x1
 1244 030f DA       		.byte	0xda
 1245 0310 00000000 		.4byte	.LFB72
 1246 0314 A0000000 		.4byte	.LFE72-.LFB72
 1247 0318 01       		.uleb128 0x1
 1248 0319 9C       		.byte	0x9c
 1249 031a 3F030000 		.4byte	0x33f
 1250 031e 18       		.uleb128 0x18
 1251 031f BC020000 		.4byte	.LASF42
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccalsaR2.s 			page 32


 1252 0323 01       		.byte	0x1
 1253 0324 DD       		.byte	0xdd
 1254 0325 18       		.uleb128 0x18
 1255 0326 31000000 		.4byte	.LASF43
 1256 032a 01       		.byte	0x1
 1257 032b DE       		.byte	0xde
 1258 032c 18       		.uleb128 0x18
 1259 032d 1F010000 		.4byte	.LASF44
 1260 0331 01       		.byte	0x1
 1261 0332 DF       		.byte	0xdf
 1262 0333 19       		.uleb128 0x19
 1263 0334 00000000 		.4byte	.LASF50
 1264 0338 01       		.byte	0x1
 1265 0339 E0       		.byte	0xe0
 1266 033a 3F030000 		.4byte	0x33f
 1267 033e 00       		.byte	0
 1268 033f 11       		.uleb128 0x11
 1269 0340 C2000000 		.4byte	0xc2
 1270 0344 4A030000 		.4byte	0x34a
 1271 0348 1A       		.uleb128 0x1a
 1272 0349 00       		.byte	0
 1273 034a 1B       		.uleb128 0x1b
 1274 034b 2F010000 		.4byte	.LASF45
 1275 034f 01       		.byte	0x1
 1276 0350 0F01     		.2byte	0x10f
 1277 0352 00000000 		.4byte	.LFB73
 1278 0356 1E000000 		.4byte	.LFE73-.LFB73
 1279 035a 01       		.uleb128 0x1
 1280 035b 9C       		.byte	0x9c
 1281 035c A2030000 		.4byte	0x3a2
 1282 0360 1C       		.uleb128 0x1c
 1283 0361 4D010000 		.4byte	.LASF46
 1284 0365 01       		.byte	0x1
 1285 0366 0F01     		.2byte	0x10f
 1286 0368 01010000 		.4byte	0x101
 1287 036c 02       		.uleb128 0x2
 1288 036d 91       		.byte	0x91
 1289 036e 6C       		.sleb128 -20
 1290 036f 1C       		.uleb128 0x1c
 1291 0370 29040000 		.4byte	.LASF47
 1292 0374 01       		.byte	0x1
 1293 0375 0F01     		.2byte	0x10f
 1294 0377 E5000000 		.4byte	0xe5
 1295 037b 02       		.uleb128 0x2
 1296 037c 91       		.byte	0x91
 1297 037d 68       		.sleb128 -24
 1298 037e 1D       		.uleb128 0x1d
 1299 037f ED010000 		.4byte	0x1ed
 1300 0383 0A000000 		.4byte	.LBB6
 1301 0387 12000000 		.4byte	.LBE6-.LBB6
 1302 038b 01       		.byte	0x1
 1303 038c 1101     		.2byte	0x111
 1304 038e 1E       		.uleb128 0x1e
 1305 038f 0A000000 		.4byte	.LBB7
 1306 0393 12000000 		.4byte	.LBE7-.LBB7
 1307 0397 1F       		.uleb128 0x1f
 1308 0398 F9010000 		.4byte	0x1f9
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccalsaR2.s 			page 33


 1309 039c 02       		.uleb128 0x2
 1310 039d 91       		.byte	0x91
 1311 039e 74       		.sleb128 -12
 1312 039f 00       		.byte	0
 1313 03a0 00       		.byte	0
 1314 03a1 00       		.byte	0
 1315 03a2 1B       		.uleb128 0x1b
 1316 03a3 C3010000 		.4byte	.LASF48
 1317 03a7 01       		.byte	0x1
 1318 03a8 1401     		.2byte	0x114
 1319 03aa 00000000 		.4byte	.LFB74
 1320 03ae 1A000000 		.4byte	.LFE74-.LFB74
 1321 03b2 01       		.uleb128 0x1
 1322 03b3 9C       		.byte	0x9c
 1323 03b4 DC030000 		.4byte	0x3dc
 1324 03b8 1D       		.uleb128 0x1d
 1325 03b9 ED010000 		.4byte	0x1ed
 1326 03bd 06000000 		.4byte	.LBB8
 1327 03c1 12000000 		.4byte	.LBE8-.LBB8
 1328 03c5 01       		.byte	0x1
 1329 03c6 1601     		.2byte	0x116
 1330 03c8 1E       		.uleb128 0x1e
 1331 03c9 06000000 		.4byte	.LBB9
 1332 03cd 12000000 		.4byte	.LBE9-.LBB9
 1333 03d1 1F       		.uleb128 0x1f
 1334 03d2 F9010000 		.4byte	0x1f9
 1335 03d6 02       		.uleb128 0x2
 1336 03d7 91       		.byte	0x91
 1337 03d8 74       		.sleb128 -12
 1338 03d9 00       		.byte	0
 1339 03da 00       		.byte	0
 1340 03db 00       		.byte	0
 1341 03dc 16       		.uleb128 0x16
 1342 03dd BC010000 		.4byte	.LASF49
 1343 03e1 01       		.byte	0x1
 1344 03e2 49       		.byte	0x49
 1345 03e3 2D010000 		.4byte	0x12d
 1346 03e7 05       		.uleb128 0x5
 1347 03e8 03       		.byte	0x3
 1348 03e9 00000000 		.4byte	pxPort
 1349 03ed 20       		.uleb128 0x20
 1350 03ee F5030000 		.4byte	.LASF51
 1351 03f2 0B       		.byte	0xb
 1352 03f3 9606     		.2byte	0x696
 1353 03f5 F9030000 		.4byte	0x3f9
 1354 03f9 21       		.uleb128 0x21
 1355 03fa 97000000 		.4byte	0x97
 1356 03fe 22       		.uleb128 0x22
 1357 03ff 6C020000 		.4byte	.LASF52
 1358 0403 01       		.byte	0x1
 1359 0404 4A       		.byte	0x4a
 1360 0405 22010000 		.4byte	0x122
 1361 0409 05       		.uleb128 0x5
 1362 040a 03       		.byte	0x3
 1363 040b 00000000 		.4byte	gatekeeper
 1364 040f 22       		.uleb128 0x22
 1365 0410 68010000 		.4byte	.LASF53
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccalsaR2.s 			page 34


 1366 0414 01       		.byte	0x1
 1367 0415 4B       		.byte	0x4b
 1368 0416 17010000 		.4byte	0x117
 1369 041a 05       		.uleb128 0x5
 1370 041b 03       		.byte	0x3
 1371 041c 00000000 		.4byte	queue_handle
 1372 0420 22       		.uleb128 0x22
 1373 0421 AE030000 		.4byte	.LASF54
 1374 0425 01       		.byte	0x1
 1375 0426 4F       		.byte	0x4f
 1376 0427 25000000 		.4byte	0x25
 1377 042b 05       		.uleb128 0x5
 1378 042c 03       		.byte	0x3
 1379 042d 00000000 		.4byte	rx_receive
 1380 0431 11       		.uleb128 0x11
 1381 0432 37000000 		.4byte	0x37
 1382 0436 41040000 		.4byte	0x441
 1383 043a 12       		.uleb128 0x12
 1384 043b DC000000 		.4byte	0xdc
 1385 043f 3F       		.byte	0x3f
 1386 0440 00       		.byte	0
 1387 0441 22       		.uleb128 0x22
 1388 0442 EF020000 		.4byte	.LASF55
 1389 0446 01       		.byte	0x1
 1390 0447 50       		.byte	0x50
 1391 0448 31040000 		.4byte	0x431
 1392 044c 05       		.uleb128 0x5
 1393 044d 03       		.byte	0x3
 1394 044e 00000000 		.4byte	buffer
 1395 0452 22       		.uleb128 0x22
 1396 0453 02040000 		.4byte	.LASF56
 1397 0457 01       		.byte	0x1
 1398 0458 53       		.byte	0x53
 1399 0459 AD010000 		.4byte	0x1ad
 1400 045d 05       		.uleb128 0x5
 1401 045e 03       		.byte	0x3
 1402 045f 00000000 		.4byte	left_wheel
 1403 0463 22       		.uleb128 0x22
 1404 0464 E9030000 		.4byte	.LASF57
 1405 0468 01       		.byte	0x1
 1406 0469 54       		.byte	0x54
 1407 046a AD010000 		.4byte	0x1ad
 1408 046e 05       		.uleb128 0x5
 1409 046f 03       		.byte	0x3
 1410 0470 00000000 		.4byte	right_wheel
 1411 0474 23       		.uleb128 0x23
 1412 0475 6B00     		.ascii	"k\000"
 1413 0477 01       		.byte	0x1
 1414 0478 55       		.byte	0x55
 1415 0479 E2010000 		.4byte	0x1e2
 1416 047d 05       		.uleb128 0x5
 1417 047e 03       		.byte	0x3
 1418 047f 00000000 		.4byte	k
 1419 0483 22       		.uleb128 0x22
 1420 0484 E0010000 		.4byte	.LASF58
 1421 0488 01       		.byte	0x1
 1422 0489 57       		.byte	0x57
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccalsaR2.s 			page 35


 1423 048a 7E000000 		.4byte	0x7e
 1424 048e 05       		.uleb128 0x5
 1425 048f 03       		.byte	0x3
 1426 0490 00000000 		.4byte	isMaster
 1427 0494 19       		.uleb128 0x19
 1428 0495 00000000 		.4byte	.LASF50
 1429 0499 01       		.byte	0x1
 1430 049a E0       		.byte	0xe0
 1431 049b 3F030000 		.4byte	0x33f
 1432 049f 00       		.byte	0
 1433              		.section	.debug_abbrev,"",%progbits
 1434              	.Ldebug_abbrev0:
 1435 0000 01       		.uleb128 0x1
 1436 0001 11       		.uleb128 0x11
 1437 0002 01       		.byte	0x1
 1438 0003 25       		.uleb128 0x25
 1439 0004 0E       		.uleb128 0xe
 1440 0005 13       		.uleb128 0x13
 1441 0006 0B       		.uleb128 0xb
 1442 0007 03       		.uleb128 0x3
 1443 0008 0E       		.uleb128 0xe
 1444 0009 1B       		.uleb128 0x1b
 1445 000a 0E       		.uleb128 0xe
 1446 000b 55       		.uleb128 0x55
 1447 000c 17       		.uleb128 0x17
 1448 000d 11       		.uleb128 0x11
 1449 000e 01       		.uleb128 0x1
 1450 000f 10       		.uleb128 0x10
 1451 0010 17       		.uleb128 0x17
 1452 0011 00       		.byte	0
 1453 0012 00       		.byte	0
 1454 0013 02       		.uleb128 0x2
 1455 0014 24       		.uleb128 0x24
 1456 0015 00       		.byte	0
 1457 0016 0B       		.uleb128 0xb
 1458 0017 0B       		.uleb128 0xb
 1459 0018 3E       		.uleb128 0x3e
 1460 0019 0B       		.uleb128 0xb
 1461 001a 03       		.uleb128 0x3
 1462 001b 0E       		.uleb128 0xe
 1463 001c 00       		.byte	0
 1464 001d 00       		.byte	0
 1465 001e 03       		.uleb128 0x3
 1466 001f 16       		.uleb128 0x16
 1467 0020 00       		.byte	0
 1468 0021 03       		.uleb128 0x3
 1469 0022 0E       		.uleb128 0xe
 1470 0023 3A       		.uleb128 0x3a
 1471 0024 0B       		.uleb128 0xb
 1472 0025 3B       		.uleb128 0x3b
 1473 0026 0B       		.uleb128 0xb
 1474 0027 49       		.uleb128 0x49
 1475 0028 13       		.uleb128 0x13
 1476 0029 00       		.byte	0
 1477 002a 00       		.byte	0
 1478 002b 04       		.uleb128 0x4
 1479 002c 24       		.uleb128 0x24
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccalsaR2.s 			page 36


 1480 002d 00       		.byte	0
 1481 002e 0B       		.uleb128 0xb
 1482 002f 0B       		.uleb128 0xb
 1483 0030 3E       		.uleb128 0x3e
 1484 0031 0B       		.uleb128 0xb
 1485 0032 03       		.uleb128 0x3
 1486 0033 08       		.uleb128 0x8
 1487 0034 00       		.byte	0
 1488 0035 00       		.byte	0
 1489 0036 05       		.uleb128 0x5
 1490 0037 16       		.uleb128 0x16
 1491 0038 00       		.byte	0
 1492 0039 03       		.uleb128 0x3
 1493 003a 0E       		.uleb128 0xe
 1494 003b 3A       		.uleb128 0x3a
 1495 003c 0B       		.uleb128 0xb
 1496 003d 3B       		.uleb128 0x3b
 1497 003e 05       		.uleb128 0x5
 1498 003f 49       		.uleb128 0x49
 1499 0040 13       		.uleb128 0x13
 1500 0041 00       		.byte	0
 1501 0042 00       		.byte	0
 1502 0043 06       		.uleb128 0x6
 1503 0044 0F       		.uleb128 0xf
 1504 0045 00       		.byte	0
 1505 0046 0B       		.uleb128 0xb
 1506 0047 0B       		.uleb128 0xb
 1507 0048 49       		.uleb128 0x49
 1508 0049 13       		.uleb128 0x13
 1509 004a 00       		.byte	0
 1510 004b 00       		.byte	0
 1511 004c 07       		.uleb128 0x7
 1512 004d 15       		.uleb128 0x15
 1513 004e 00       		.byte	0
 1514 004f 27       		.uleb128 0x27
 1515 0050 19       		.uleb128 0x19
 1516 0051 00       		.byte	0
 1517 0052 00       		.byte	0
 1518 0053 08       		.uleb128 0x8
 1519 0054 0F       		.uleb128 0xf
 1520 0055 00       		.byte	0
 1521 0056 0B       		.uleb128 0xb
 1522 0057 0B       		.uleb128 0xb
 1523 0058 00       		.byte	0
 1524 0059 00       		.byte	0
 1525 005a 09       		.uleb128 0x9
 1526 005b 13       		.uleb128 0x13
 1527 005c 00       		.byte	0
 1528 005d 03       		.uleb128 0x3
 1529 005e 0E       		.uleb128 0xe
 1530 005f 3C       		.uleb128 0x3c
 1531 0060 19       		.uleb128 0x19
 1532 0061 00       		.byte	0
 1533 0062 00       		.byte	0
 1534 0063 0A       		.uleb128 0xa
 1535 0064 13       		.uleb128 0x13
 1536 0065 01       		.byte	0x1
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccalsaR2.s 			page 37


 1537 0066 0B       		.uleb128 0xb
 1538 0067 0B       		.uleb128 0xb
 1539 0068 3A       		.uleb128 0x3a
 1540 0069 0B       		.uleb128 0xb
 1541 006a 3B       		.uleb128 0x3b
 1542 006b 0B       		.uleb128 0xb
 1543 006c 01       		.uleb128 0x1
 1544 006d 13       		.uleb128 0x13
 1545 006e 00       		.byte	0
 1546 006f 00       		.byte	0
 1547 0070 0B       		.uleb128 0xb
 1548 0071 0D       		.uleb128 0xd
 1549 0072 00       		.byte	0
 1550 0073 03       		.uleb128 0x3
 1551 0074 0E       		.uleb128 0xe
 1552 0075 3A       		.uleb128 0x3a
 1553 0076 0B       		.uleb128 0xb
 1554 0077 3B       		.uleb128 0x3b
 1555 0078 0B       		.uleb128 0xb
 1556 0079 49       		.uleb128 0x49
 1557 007a 13       		.uleb128 0x13
 1558 007b 38       		.uleb128 0x38
 1559 007c 0B       		.uleb128 0xb
 1560 007d 00       		.byte	0
 1561 007e 00       		.byte	0
 1562 007f 0C       		.uleb128 0xc
 1563 0080 0D       		.uleb128 0xd
 1564 0081 00       		.byte	0
 1565 0082 03       		.uleb128 0x3
 1566 0083 08       		.uleb128 0x8
 1567 0084 3A       		.uleb128 0x3a
 1568 0085 0B       		.uleb128 0xb
 1569 0086 3B       		.uleb128 0x3b
 1570 0087 0B       		.uleb128 0xb
 1571 0088 49       		.uleb128 0x49
 1572 0089 13       		.uleb128 0x13
 1573 008a 38       		.uleb128 0x38
 1574 008b 0B       		.uleb128 0xb
 1575 008c 00       		.byte	0
 1576 008d 00       		.byte	0
 1577 008e 0D       		.uleb128 0xd
 1578 008f 2E       		.uleb128 0x2e
 1579 0090 01       		.byte	0x1
 1580 0091 03       		.uleb128 0x3
 1581 0092 0E       		.uleb128 0xe
 1582 0093 3A       		.uleb128 0x3a
 1583 0094 0B       		.uleb128 0xb
 1584 0095 3B       		.uleb128 0x3b
 1585 0096 0B       		.uleb128 0xb
 1586 0097 27       		.uleb128 0x27
 1587 0098 19       		.uleb128 0x19
 1588 0099 20       		.uleb128 0x20
 1589 009a 0B       		.uleb128 0xb
 1590 009b 01       		.uleb128 0x1
 1591 009c 13       		.uleb128 0x13
 1592 009d 00       		.byte	0
 1593 009e 00       		.byte	0
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccalsaR2.s 			page 38


 1594 009f 0E       		.uleb128 0xe
 1595 00a0 34       		.uleb128 0x34
 1596 00a1 00       		.byte	0
 1597 00a2 03       		.uleb128 0x3
 1598 00a3 0E       		.uleb128 0xe
 1599 00a4 3A       		.uleb128 0x3a
 1600 00a5 0B       		.uleb128 0xb
 1601 00a6 3B       		.uleb128 0x3b
 1602 00a7 0B       		.uleb128 0xb
 1603 00a8 49       		.uleb128 0x49
 1604 00a9 13       		.uleb128 0x13
 1605 00aa 00       		.byte	0
 1606 00ab 00       		.byte	0
 1607 00ac 0F       		.uleb128 0xf
 1608 00ad 2E       		.uleb128 0x2e
 1609 00ae 01       		.byte	0x1
 1610 00af 3F       		.uleb128 0x3f
 1611 00b0 19       		.uleb128 0x19
 1612 00b1 03       		.uleb128 0x3
 1613 00b2 0E       		.uleb128 0xe
 1614 00b3 3A       		.uleb128 0x3a
 1615 00b4 0B       		.uleb128 0xb
 1616 00b5 3B       		.uleb128 0x3b
 1617 00b6 0B       		.uleb128 0xb
 1618 00b7 27       		.uleb128 0x27
 1619 00b8 19       		.uleb128 0x19
 1620 00b9 49       		.uleb128 0x49
 1621 00ba 13       		.uleb128 0x13
 1622 00bb 11       		.uleb128 0x11
 1623 00bc 01       		.uleb128 0x1
 1624 00bd 12       		.uleb128 0x12
 1625 00be 06       		.uleb128 0x6
 1626 00bf 40       		.uleb128 0x40
 1627 00c0 18       		.uleb128 0x18
 1628 00c1 9642     		.uleb128 0x2116
 1629 00c3 19       		.uleb128 0x19
 1630 00c4 01       		.uleb128 0x1
 1631 00c5 13       		.uleb128 0x13
 1632 00c6 00       		.byte	0
 1633 00c7 00       		.byte	0
 1634 00c8 10       		.uleb128 0x10
 1635 00c9 34       		.uleb128 0x34
 1636 00ca 00       		.byte	0
 1637 00cb 03       		.uleb128 0x3
 1638 00cc 08       		.uleb128 0x8
 1639 00cd 3A       		.uleb128 0x3a
 1640 00ce 0B       		.uleb128 0xb
 1641 00cf 3B       		.uleb128 0x3b
 1642 00d0 0B       		.uleb128 0xb
 1643 00d1 49       		.uleb128 0x49
 1644 00d2 13       		.uleb128 0x13
 1645 00d3 02       		.uleb128 0x2
 1646 00d4 18       		.uleb128 0x18
 1647 00d5 00       		.byte	0
 1648 00d6 00       		.byte	0
 1649 00d7 11       		.uleb128 0x11
 1650 00d8 01       		.uleb128 0x1
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccalsaR2.s 			page 39


 1651 00d9 01       		.byte	0x1
 1652 00da 49       		.uleb128 0x49
 1653 00db 13       		.uleb128 0x13
 1654 00dc 01       		.uleb128 0x1
 1655 00dd 13       		.uleb128 0x13
 1656 00de 00       		.byte	0
 1657 00df 00       		.byte	0
 1658 00e0 12       		.uleb128 0x12
 1659 00e1 21       		.uleb128 0x21
 1660 00e2 00       		.byte	0
 1661 00e3 49       		.uleb128 0x49
 1662 00e4 13       		.uleb128 0x13
 1663 00e5 2F       		.uleb128 0x2f
 1664 00e6 0B       		.uleb128 0xb
 1665 00e7 00       		.byte	0
 1666 00e8 00       		.byte	0
 1667 00e9 13       		.uleb128 0x13
 1668 00ea 26       		.uleb128 0x26
 1669 00eb 00       		.byte	0
 1670 00ec 49       		.uleb128 0x49
 1671 00ed 13       		.uleb128 0x13
 1672 00ee 00       		.byte	0
 1673 00ef 00       		.byte	0
 1674 00f0 14       		.uleb128 0x14
 1675 00f1 2E       		.uleb128 0x2e
 1676 00f2 01       		.byte	0x1
 1677 00f3 3F       		.uleb128 0x3f
 1678 00f4 19       		.uleb128 0x19
 1679 00f5 03       		.uleb128 0x3
 1680 00f6 0E       		.uleb128 0xe
 1681 00f7 3A       		.uleb128 0x3a
 1682 00f8 0B       		.uleb128 0xb
 1683 00f9 3B       		.uleb128 0x3b
 1684 00fa 0B       		.uleb128 0xb
 1685 00fb 27       		.uleb128 0x27
 1686 00fc 19       		.uleb128 0x19
 1687 00fd 11       		.uleb128 0x11
 1688 00fe 01       		.uleb128 0x1
 1689 00ff 12       		.uleb128 0x12
 1690 0100 06       		.uleb128 0x6
 1691 0101 40       		.uleb128 0x40
 1692 0102 18       		.uleb128 0x18
 1693 0103 9642     		.uleb128 0x2116
 1694 0105 19       		.uleb128 0x19
 1695 0106 01       		.uleb128 0x1
 1696 0107 13       		.uleb128 0x13
 1697 0108 00       		.byte	0
 1698 0109 00       		.byte	0
 1699 010a 15       		.uleb128 0x15
 1700 010b 05       		.uleb128 0x5
 1701 010c 00       		.byte	0
 1702 010d 03       		.uleb128 0x3
 1703 010e 08       		.uleb128 0x8
 1704 010f 3A       		.uleb128 0x3a
 1705 0110 0B       		.uleb128 0xb
 1706 0111 3B       		.uleb128 0x3b
 1707 0112 0B       		.uleb128 0xb
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccalsaR2.s 			page 40


 1708 0113 49       		.uleb128 0x49
 1709 0114 13       		.uleb128 0x13
 1710 0115 02       		.uleb128 0x2
 1711 0116 18       		.uleb128 0x18
 1712 0117 00       		.byte	0
 1713 0118 00       		.byte	0
 1714 0119 16       		.uleb128 0x16
 1715 011a 34       		.uleb128 0x34
 1716 011b 00       		.byte	0
 1717 011c 03       		.uleb128 0x3
 1718 011d 0E       		.uleb128 0xe
 1719 011e 3A       		.uleb128 0x3a
 1720 011f 0B       		.uleb128 0xb
 1721 0120 3B       		.uleb128 0x3b
 1722 0121 0B       		.uleb128 0xb
 1723 0122 49       		.uleb128 0x49
 1724 0123 13       		.uleb128 0x13
 1725 0124 02       		.uleb128 0x2
 1726 0125 18       		.uleb128 0x18
 1727 0126 00       		.byte	0
 1728 0127 00       		.byte	0
 1729 0128 17       		.uleb128 0x17
 1730 0129 2E       		.uleb128 0x2e
 1731 012a 01       		.byte	0x1
 1732 012b 03       		.uleb128 0x3
 1733 012c 0E       		.uleb128 0xe
 1734 012d 3A       		.uleb128 0x3a
 1735 012e 0B       		.uleb128 0xb
 1736 012f 3B       		.uleb128 0x3b
 1737 0130 0B       		.uleb128 0xb
 1738 0131 27       		.uleb128 0x27
 1739 0132 19       		.uleb128 0x19
 1740 0133 11       		.uleb128 0x11
 1741 0134 01       		.uleb128 0x1
 1742 0135 12       		.uleb128 0x12
 1743 0136 06       		.uleb128 0x6
 1744 0137 40       		.uleb128 0x40
 1745 0138 18       		.uleb128 0x18
 1746 0139 9642     		.uleb128 0x2116
 1747 013b 19       		.uleb128 0x19
 1748 013c 01       		.uleb128 0x1
 1749 013d 13       		.uleb128 0x13
 1750 013e 00       		.byte	0
 1751 013f 00       		.byte	0
 1752 0140 18       		.uleb128 0x18
 1753 0141 2E       		.uleb128 0x2e
 1754 0142 00       		.byte	0
 1755 0143 3F       		.uleb128 0x3f
 1756 0144 19       		.uleb128 0x19
 1757 0145 03       		.uleb128 0x3
 1758 0146 0E       		.uleb128 0xe
 1759 0147 3A       		.uleb128 0x3a
 1760 0148 0B       		.uleb128 0xb
 1761 0149 3B       		.uleb128 0x3b
 1762 014a 0B       		.uleb128 0xb
 1763 014b 27       		.uleb128 0x27
 1764 014c 19       		.uleb128 0x19
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccalsaR2.s 			page 41


 1765 014d 3C       		.uleb128 0x3c
 1766 014e 19       		.uleb128 0x19
 1767 014f 00       		.byte	0
 1768 0150 00       		.byte	0
 1769 0151 19       		.uleb128 0x19
 1770 0152 34       		.uleb128 0x34
 1771 0153 00       		.byte	0
 1772 0154 03       		.uleb128 0x3
 1773 0155 0E       		.uleb128 0xe
 1774 0156 3A       		.uleb128 0x3a
 1775 0157 0B       		.uleb128 0xb
 1776 0158 3B       		.uleb128 0x3b
 1777 0159 0B       		.uleb128 0xb
 1778 015a 49       		.uleb128 0x49
 1779 015b 13       		.uleb128 0x13
 1780 015c 3F       		.uleb128 0x3f
 1781 015d 19       		.uleb128 0x19
 1782 015e 3C       		.uleb128 0x3c
 1783 015f 19       		.uleb128 0x19
 1784 0160 00       		.byte	0
 1785 0161 00       		.byte	0
 1786 0162 1A       		.uleb128 0x1a
 1787 0163 21       		.uleb128 0x21
 1788 0164 00       		.byte	0
 1789 0165 00       		.byte	0
 1790 0166 00       		.byte	0
 1791 0167 1B       		.uleb128 0x1b
 1792 0168 2E       		.uleb128 0x2e
 1793 0169 01       		.byte	0x1
 1794 016a 3F       		.uleb128 0x3f
 1795 016b 19       		.uleb128 0x19
 1796 016c 03       		.uleb128 0x3
 1797 016d 0E       		.uleb128 0xe
 1798 016e 3A       		.uleb128 0x3a
 1799 016f 0B       		.uleb128 0xb
 1800 0170 3B       		.uleb128 0x3b
 1801 0171 05       		.uleb128 0x5
 1802 0172 27       		.uleb128 0x27
 1803 0173 19       		.uleb128 0x19
 1804 0174 11       		.uleb128 0x11
 1805 0175 01       		.uleb128 0x1
 1806 0176 12       		.uleb128 0x12
 1807 0177 06       		.uleb128 0x6
 1808 0178 40       		.uleb128 0x40
 1809 0179 18       		.uleb128 0x18
 1810 017a 9742     		.uleb128 0x2117
 1811 017c 19       		.uleb128 0x19
 1812 017d 01       		.uleb128 0x1
 1813 017e 13       		.uleb128 0x13
 1814 017f 00       		.byte	0
 1815 0180 00       		.byte	0
 1816 0181 1C       		.uleb128 0x1c
 1817 0182 05       		.uleb128 0x5
 1818 0183 00       		.byte	0
 1819 0184 03       		.uleb128 0x3
 1820 0185 0E       		.uleb128 0xe
 1821 0186 3A       		.uleb128 0x3a
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccalsaR2.s 			page 42


 1822 0187 0B       		.uleb128 0xb
 1823 0188 3B       		.uleb128 0x3b
 1824 0189 05       		.uleb128 0x5
 1825 018a 49       		.uleb128 0x49
 1826 018b 13       		.uleb128 0x13
 1827 018c 02       		.uleb128 0x2
 1828 018d 18       		.uleb128 0x18
 1829 018e 00       		.byte	0
 1830 018f 00       		.byte	0
 1831 0190 1D       		.uleb128 0x1d
 1832 0191 1D       		.uleb128 0x1d
 1833 0192 01       		.byte	0x1
 1834 0193 31       		.uleb128 0x31
 1835 0194 13       		.uleb128 0x13
 1836 0195 11       		.uleb128 0x11
 1837 0196 01       		.uleb128 0x1
 1838 0197 12       		.uleb128 0x12
 1839 0198 06       		.uleb128 0x6
 1840 0199 58       		.uleb128 0x58
 1841 019a 0B       		.uleb128 0xb
 1842 019b 59       		.uleb128 0x59
 1843 019c 05       		.uleb128 0x5
 1844 019d 00       		.byte	0
 1845 019e 00       		.byte	0
 1846 019f 1E       		.uleb128 0x1e
 1847 01a0 0B       		.uleb128 0xb
 1848 01a1 01       		.byte	0x1
 1849 01a2 11       		.uleb128 0x11
 1850 01a3 01       		.uleb128 0x1
 1851 01a4 12       		.uleb128 0x12
 1852 01a5 06       		.uleb128 0x6
 1853 01a6 00       		.byte	0
 1854 01a7 00       		.byte	0
 1855 01a8 1F       		.uleb128 0x1f
 1856 01a9 34       		.uleb128 0x34
 1857 01aa 00       		.byte	0
 1858 01ab 31       		.uleb128 0x31
 1859 01ac 13       		.uleb128 0x13
 1860 01ad 02       		.uleb128 0x2
 1861 01ae 18       		.uleb128 0x18
 1862 01af 00       		.byte	0
 1863 01b0 00       		.byte	0
 1864 01b1 20       		.uleb128 0x20
 1865 01b2 34       		.uleb128 0x34
 1866 01b3 00       		.byte	0
 1867 01b4 03       		.uleb128 0x3
 1868 01b5 0E       		.uleb128 0xe
 1869 01b6 3A       		.uleb128 0x3a
 1870 01b7 0B       		.uleb128 0xb
 1871 01b8 3B       		.uleb128 0x3b
 1872 01b9 05       		.uleb128 0x5
 1873 01ba 49       		.uleb128 0x49
 1874 01bb 13       		.uleb128 0x13
 1875 01bc 3F       		.uleb128 0x3f
 1876 01bd 19       		.uleb128 0x19
 1877 01be 3C       		.uleb128 0x3c
 1878 01bf 19       		.uleb128 0x19
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccalsaR2.s 			page 43


 1879 01c0 00       		.byte	0
 1880 01c1 00       		.byte	0
 1881 01c2 21       		.uleb128 0x21
 1882 01c3 35       		.uleb128 0x35
 1883 01c4 00       		.byte	0
 1884 01c5 49       		.uleb128 0x49
 1885 01c6 13       		.uleb128 0x13
 1886 01c7 00       		.byte	0
 1887 01c8 00       		.byte	0
 1888 01c9 22       		.uleb128 0x22
 1889 01ca 34       		.uleb128 0x34
 1890 01cb 00       		.byte	0
 1891 01cc 03       		.uleb128 0x3
 1892 01cd 0E       		.uleb128 0xe
 1893 01ce 3A       		.uleb128 0x3a
 1894 01cf 0B       		.uleb128 0xb
 1895 01d0 3B       		.uleb128 0x3b
 1896 01d1 0B       		.uleb128 0xb
 1897 01d2 49       		.uleb128 0x49
 1898 01d3 13       		.uleb128 0x13
 1899 01d4 3F       		.uleb128 0x3f
 1900 01d5 19       		.uleb128 0x19
 1901 01d6 02       		.uleb128 0x2
 1902 01d7 18       		.uleb128 0x18
 1903 01d8 00       		.byte	0
 1904 01d9 00       		.byte	0
 1905 01da 23       		.uleb128 0x23
 1906 01db 34       		.uleb128 0x34
 1907 01dc 00       		.byte	0
 1908 01dd 03       		.uleb128 0x3
 1909 01de 08       		.uleb128 0x8
 1910 01df 3A       		.uleb128 0x3a
 1911 01e0 0B       		.uleb128 0xb
 1912 01e1 3B       		.uleb128 0x3b
 1913 01e2 0B       		.uleb128 0xb
 1914 01e3 49       		.uleb128 0x49
 1915 01e4 13       		.uleb128 0x13
 1916 01e5 3F       		.uleb128 0x3f
 1917 01e6 19       		.uleb128 0x19
 1918 01e7 02       		.uleb128 0x2
 1919 01e8 18       		.uleb128 0x18
 1920 01e9 00       		.byte	0
 1921 01ea 00       		.byte	0
 1922 01eb 00       		.byte	0
 1923              		.section	.debug_aranges,"",%progbits
 1924 0000 44000000 		.4byte	0x44
 1925 0004 0200     		.2byte	0x2
 1926 0006 00000000 		.4byte	.Ldebug_info0
 1927 000a 04       		.byte	0x4
 1928 000b 00       		.byte	0
 1929 000c 0000     		.2byte	0
 1930 000e 0000     		.2byte	0
 1931 0010 00000000 		.4byte	.LFB69
 1932 0014 C4000000 		.4byte	.LFE69-.LFB69
 1933 0018 00000000 		.4byte	.LFB70
 1934 001c 80020000 		.4byte	.LFE70-.LFB70
 1935 0020 00000000 		.4byte	.LFB71
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccalsaR2.s 			page 44


 1936 0024 F0000000 		.4byte	.LFE71-.LFB71
 1937 0028 00000000 		.4byte	.LFB72
 1938 002c A0000000 		.4byte	.LFE72-.LFB72
 1939 0030 00000000 		.4byte	.LFB73
 1940 0034 1E000000 		.4byte	.LFE73-.LFB73
 1941 0038 00000000 		.4byte	.LFB74
 1942 003c 1A000000 		.4byte	.LFE74-.LFB74
 1943 0040 00000000 		.4byte	0
 1944 0044 00000000 		.4byte	0
 1945              		.section	.debug_ranges,"",%progbits
 1946              	.Ldebug_ranges0:
 1947 0000 00000000 		.4byte	.LFB69
 1948 0004 C4000000 		.4byte	.LFE69
 1949 0008 00000000 		.4byte	.LFB70
 1950 000c 80020000 		.4byte	.LFE70
 1951 0010 00000000 		.4byte	.LFB71
 1952 0014 F0000000 		.4byte	.LFE71
 1953 0018 00000000 		.4byte	.LFB72
 1954 001c A0000000 		.4byte	.LFE72
 1955 0020 00000000 		.4byte	.LFB73
 1956 0024 1E000000 		.4byte	.LFE73
 1957 0028 00000000 		.4byte	.LFB74
 1958 002c 1A000000 		.4byte	.LFE74
 1959 0030 00000000 		.4byte	0
 1960 0034 00000000 		.4byte	0
 1961              		.section	.debug_line,"",%progbits
 1962              	.Ldebug_line0:
 1963 0000 09030000 		.section	.debug_str,"MS",%progbits,1
 1963      0200DF01 
 1963      00000201 
 1963      FB0E0D00 
 1963      01010101 
 1964              	.LASF50:
 1965 0000 43795261 		.ascii	"CyRamVectors\000"
 1965      6D566563 
 1965      746F7273 
 1965      00
 1966              	.LASF40:
 1967 000d 72656365 		.ascii	"receive_data\000"
 1967      6976655F 
 1967      64617461 
 1967      00
 1968              	.LASF39:
 1969 001a 74656D70 		.ascii	"temp\000"
 1969      00
 1970              	.LASF28:
 1971 001f 6375725F 		.ascii	"cur_dest\000"
 1971      64657374 
 1971      00
 1972              	.LASF20:
 1973 0028 73697A65 		.ascii	"sizetype\000"
 1973      74797065 
 1973      00
 1974              	.LASF43:
 1975 0031 78506F72 		.ascii	"xPortSysTickHandler\000"
 1975      74537973 
 1975      5469636B 
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccalsaR2.s 			page 45


 1975      48616E64 
 1975      6C657200 
 1976              	.LASF23:
 1977 0045 5461736B 		.ascii	"TaskHandle_t\000"
 1977      48616E64 
 1977      6C655F74 
 1977      00
 1978              	.LASF59:
 1979 0052 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1979      43313120 
 1979      352E342E 
 1979      31203230 
 1979      31363036 
 1980 0085 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1980      20726576 
 1980      6973696F 
 1980      6E203233 
 1980      37373135 
 1981 00b8 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1981      66756E63 
 1981      74696F6E 
 1981      2D736563 
 1981      74696F6E 
 1982              	.LASF19:
 1983 00e0 6C6F6E67 		.ascii	"long double\000"
 1983      20646F75 
 1983      626C6500 
 1984              	.LASF7:
 1985 00ec 5F5F7569 		.ascii	"__uint32_t\000"
 1985      6E743332 
 1985      5F7400
 1986              	.LASF36:
 1987 00f7 5049445F 		.ascii	"PID_data\000"
 1987      64617461 
 1987      00
 1988              	.LASF18:
 1989 0100 63796973 		.ascii	"cyisraddress\000"
 1989      72616464 
 1989      72657373 
 1989      00
 1990              	.LASF2:
 1991 010d 73686F72 		.ascii	"short int\000"
 1991      7420696E 
 1991      7400
 1992              	.LASF12:
 1993 0117 75696E74 		.ascii	"uint8_t\000"
 1993      385F7400 
 1994              	.LASF44:
 1995 011f 76506F72 		.ascii	"vPortSVCHandler\000"
 1995      74535643 
 1995      48616E64 
 1995      6C657200 
 1996              	.LASF45:
 1997 012f 76417070 		.ascii	"vApplicationStackOverflowHook\000"
 1997      6C696361 
 1997      74696F6E 
 1997      53746163 
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccalsaR2.s 			page 46


 1997      6B4F7665 
 1998              	.LASF46:
 1999 014d 70785461 		.ascii	"pxTask\000"
 1999      736B00
 2000              	.LASF15:
 2001 0154 666C6F61 		.ascii	"float\000"
 2001      7400
 2002              	.LASF9:
 2003 015a 6C6F6E67 		.ascii	"long long int\000"
 2003      206C6F6E 
 2003      6720696E 
 2003      7400
 2004              	.LASF53:
 2005 0168 71756575 		.ascii	"queue_handle\000"
 2005      655F6861 
 2005      6E646C65 
 2005      00
 2006              	.LASF37:
 2007 0175 6C6F6361 		.ascii	"local_write\000"
 2007      6C5F7772 
 2007      69746500 
 2008              	.LASF6:
 2009 0181 6C6F6E67 		.ascii	"long int\000"
 2009      20696E74 
 2009      00
 2010              	.LASF35:
 2011 018a 77686565 		.ascii	"wheel_data\000"
 2011      6C5F6461 
 2011      746100
 2012              	.LASF34:
 2013 0195 74696D65 		.ascii	"time_prev\000"
 2013      5F707265 
 2013      7600
 2014              	.LASF62:
 2015 019f 5461736B 		.ascii	"TaskControlBlock_t\000"
 2015      436F6E74 
 2015      726F6C42 
 2015      6C6F636B 
 2015      5F7400
 2016              	.LASF4:
 2017 01b2 5F5F7569 		.ascii	"__uint8_t\000"
 2017      6E74385F 
 2017      7400
 2018              	.LASF49:
 2019 01bc 7078506F 		.ascii	"pxPort\000"
 2019      727400
 2020              	.LASF48:
 2021 01c3 76417070 		.ascii	"vApplicationMallocFailedHook\000"
 2021      6C696361 
 2021      74696F6E 
 2021      4D616C6C 
 2021      6F634661 
 2022              	.LASF58:
 2023 01e0 69734D61 		.ascii	"isMaster\000"
 2023      73746572 
 2023      00
 2024              	.LASF1:
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccalsaR2.s 			page 47


 2025 01e9 756E7369 		.ascii	"unsigned char\000"
 2025      676E6564 
 2025      20636861 
 2025      7200
 2026              	.LASF22:
 2027 01f7 5469636B 		.ascii	"TickType_t\000"
 2027      54797065 
 2027      5F7400
 2028              	.LASF31:
 2029 0202 6572726F 		.ascii	"error_sum\000"
 2029      725F7375 
 2029      6D00
 2030              	.LASF25:
 2031 020c 53656D61 		.ascii	"SemaphoreHandle_t\000"
 2031      70686F72 
 2031      6548616E 
 2031      646C655F 
 2031      7400
 2032              	.LASF27:
 2033 021e 70726576 		.ascii	"prev_dest\000"
 2033      5F646573 
 2033      7400
 2034              	.LASF0:
 2035 0228 7369676E 		.ascii	"signed char\000"
 2035      65642063 
 2035      68617200 
 2036              	.LASF10:
 2037 0234 6C6F6E67 		.ascii	"long long unsigned int\000"
 2037      206C6F6E 
 2037      6720756E 
 2037      7369676E 
 2037      65642069 
 2038              	.LASF14:
 2039 024b 75696E74 		.ascii	"uint32_t\000"
 2039      33325F74 
 2039      00
 2040              	.LASF11:
 2041 0254 756E7369 		.ascii	"unsigned int\000"
 2041      676E6564 
 2041      20696E74 
 2041      00
 2042              	.LASF21:
 2043 0261 42617365 		.ascii	"BaseType_t\000"
 2043      54797065 
 2043      5F7400
 2044              	.LASF52:
 2045 026c 67617465 		.ascii	"gatekeeper\000"
 2045      6B656570 
 2045      657200
 2046              	.LASF33:
 2047 0277 74696D65 		.ascii	"time\000"
 2047      00
 2048              	.LASF29:
 2049 027c 6572726F 		.ascii	"error_prev\000"
 2049      725F7072 
 2049      657600
 2050              	.LASF3:
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccalsaR2.s 			page 48


 2051 0287 73686F72 		.ascii	"short unsigned int\000"
 2051      7420756E 
 2051      7369676E 
 2051      65642069 
 2051      6E7400
 2052              	.LASF17:
 2053 029a 63686172 		.ascii	"char\000"
 2053      00
 2054              	.LASF32:
 2055 029f 6D6F746F 		.ascii	"motor_volt\000"
 2055      725F766F 
 2055      6C7400
 2056              	.LASF65:
 2057 02aa 6D61696E 		.ascii	"main\000"
 2057      00
 2058              	.LASF38:
 2059 02af 74797065 		.ascii	"type\000"
 2059      00
 2060              	.LASF13:
 2061 02b4 696E7433 		.ascii	"int32_t\000"
 2061      325F7400 
 2062              	.LASF42:
 2063 02bc 78506F72 		.ascii	"xPortPendSVHandler\000"
 2063      7450656E 
 2063      64535648 
 2063      616E646C 
 2063      657200
 2064              	.LASF26:
 2065 02cf 78436F6D 		.ascii	"xComPortHandle\000"
 2065      506F7274 
 2065      48616E64 
 2065      6C6500
 2066              	.LASF66:
 2067 02de 70727648 		.ascii	"prvHardwareSetup\000"
 2067      61726477 
 2067      61726553 
 2067      65747570 
 2067      00
 2068              	.LASF55:
 2069 02ef 62756666 		.ascii	"buffer\000"
 2069      657200
 2070              	.LASF60:
 2071 02f6 6D61696E 		.ascii	"main.c\000"
 2071      2E6300
 2072              	.LASF8:
 2073 02fd 6C6F6E67 		.ascii	"long unsigned int\000"
 2073      20756E73 
 2073      69676E65 
 2073      6420696E 
 2073      7400
 2074              	.LASF16:
 2075 030f 646F7562 		.ascii	"double\000"
 2075      6C6500
 2076              	.LASF61:
 2077 0316 5C5C6164 		.ascii	"\\\\ad.monash.edu\\home\\User041\\sdsir3\\Documents"
 2077      2E6D6F6E 
 2077      6173682E 
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccalsaR2.s 			page 49


 2077      6564755C 
 2077      686F6D65 
 2078 0343 5C476974 		.ascii	"\\GitHub\\FYP_POSCCreator_Master\\FYP_PSOCCreator_M"
 2078      4875625C 
 2078      4659505F 
 2078      504F5343 
 2078      43726561 
 2079 0373 61737465 		.ascii	"aster\\CORTEX_CY8C5588_PSoC_Creator_GCC\\FreeRTOS_D"
 2079      725C434F 
 2079      52544558 
 2079      5F435938 
 2079      43353538 
 2080 03a4 656D6F2E 		.ascii	"emo.cydsn\000"
 2080      63796473 
 2080      6E00
 2081              	.LASF54:
 2082 03ae 72785F72 		.ascii	"rx_receive\000"
 2082      65636569 
 2082      766500
 2083              	.LASF5:
 2084 03b9 5F5F696E 		.ascii	"__int32_t\000"
 2084      7433325F 
 2084      7400
 2085              	.LASF24:
 2086 03c3 51756575 		.ascii	"QueueHandle_t\000"
 2086      6548616E 
 2086      646C655F 
 2086      7400
 2087              	.LASF30:
 2088 03d1 6572726F 		.ascii	"error\000"
 2088      7200
 2089              	.LASF63:
 2090 03d7 76506F72 		.ascii	"vPortRaiseBASEPRI\000"
 2090      74526169 
 2090      73654241 
 2090      53455052 
 2090      4900
 2091              	.LASF57:
 2092 03e9 72696768 		.ascii	"right_wheel\000"
 2092      745F7768 
 2092      65656C00 
 2093              	.LASF51:
 2094 03f5 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2094      52784275 
 2094      66666572 
 2094      00
 2095              	.LASF56:
 2096 0402 6C656674 		.ascii	"left_wheel\000"
 2096      5F776865 
 2096      656C00
 2097              	.LASF41:
 2098 040d 5049445F 		.ascii	"PID_initialise\000"
 2098      696E6974 
 2098      69616C69 
 2098      736500
 2099              	.LASF64:
 2100 041c 756C4E65 		.ascii	"ulNewBASEPRI\000"
ARM GAS  C:\Users\sdsir3\AppData\Local\Temp\ccalsaR2.s 			page 50


 2100      77424153 
 2100      45505249 
 2100      00
 2101              	.LASF47:
 2102 0429 70635461 		.ascii	"pcTaskName\000"
 2102      736B4E61 
 2102      6D6500
 2103              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
=======
 734              		.loc 2 195 0
 735              		.syntax unified
 736              	@ 195 "..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h" 1
 737 000a 4FF0A003 			mov r3, #160												
 738 000e 83F31188 		msr basepri, r3											
 739 0012 BFF36F8F 		isb														
 740 0016 BFF34F8F 		dsb														
 741              	
 742              	@ 0 "" 2
 743              		.thumb
 744              		.syntax unified
 745 001a FB60     		str	r3, [r7, #12]
 746              	.L33:
 747              	.LBE7:
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccSeeFBQ.s 			page 23


 748              	.LBE6:
 271:main.c        **** 	/* The stack space has been execeeded for a task, considering allocating more. */
 272:main.c        **** 	taskDISABLE_INTERRUPTS();
 273:main.c        **** 	for( ;; );
 749              		.loc 1 273 0 discriminator 1
 750 001c FEE7     		b	.L33
 751              		.cfi_endproc
 752              	.LFE73:
 753              		.size	vApplicationStackOverflowHook, .-vApplicationStackOverflowHook
 754 001e 00BF     		.section	.text.vApplicationMallocFailedHook,"ax",%progbits
 755              		.align	2
 756              		.global	vApplicationMallocFailedHook
 757              		.thumb
 758              		.thumb_func
 759              		.type	vApplicationMallocFailedHook, %function
 760              	vApplicationMallocFailedHook:
 761              	.LFB74:
 274:main.c        **** }
 275:main.c        **** void vApplicationMallocFailedHook( void ) {
 762              		.loc 1 275 0
 763              		.cfi_startproc
 764              		@ args = 0, pretend = 0, frame = 8
 765              		@ frame_needed = 1, uses_anonymous_args = 0
 766              		@ link register save eliminated.
 767 0000 80B4     		push	{r7}
 768              		.cfi_def_cfa_offset 4
 769              		.cfi_offset 7, -4
 770 0002 83B0     		sub	sp, sp, #12
 771              		.cfi_def_cfa_offset 16
 772 0004 00AF     		add	r7, sp, #0
 773              		.cfi_def_cfa_register 7
 774              	.LBB8:
 775              	.LBB9:
 776              		.loc 2 195 0
 777              		.syntax unified
 778              	@ 195 "..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h" 1
 779 0006 4FF0A003 			mov r3, #160												
 780 000a 83F31188 		msr basepri, r3											
 781 000e BFF36F8F 		isb														
 782 0012 BFF34F8F 		dsb														
 783              	
 784              	@ 0 "" 2
 785              		.thumb
 786              		.syntax unified
 787 0016 7B60     		str	r3, [r7, #4]
 788              	.L35:
 789              	.LBE9:
 790              	.LBE8:
 276:main.c        **** 	/* The heap space has been execeeded. */
 277:main.c        **** 	taskDISABLE_INTERRUPTS();
 278:main.c        **** 	for( ;; );
 791              		.loc 1 278 0 discriminator 1
 792 0018 FEE7     		b	.L35
 793              		.cfi_endproc
 794              	.LFE74:
 795              		.size	vApplicationMallocFailedHook, .-vApplicationMallocFailedHook
 796 001a 00BF     		.text
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccSeeFBQ.s 			page 24


 797              	.Letext0:
 798              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 799              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 800              		.file 5 "Generated_Source\\PSoC5/cytypes.h"
 801              		.file 6 "..\\..\\FreeRTOS_Source\\include/task.h"
 802              		.file 7 "..\\..\\FreeRTOS_Source\\include/queue.h"
 803              		.file 8 "..\\..\\FreeRTOS_Source\\include/semphr.h"
 804              		.file 9 "..\\..\\FreeRTOS_Source\\include/serial.h"
 805              		.file 10 "movement.h"
 806              		.file 11 "Generated_Source\\PSoC5/core_cm3.h"
 807              		.section	.debug_info,"",%progbits
 808              	.Ldebug_info0:
 809 0000 9C040000 		.4byte	0x49c
 810 0004 0400     		.2byte	0x4
 811 0006 00000000 		.4byte	.Ldebug_abbrev0
 812 000a 04       		.byte	0x4
 813 000b 01       		.uleb128 0x1
 814 000c 52000000 		.4byte	.LASF59
 815 0010 0C       		.byte	0xc
 816 0011 79030000 		.4byte	.LASF60
 817 0015 81010000 		.4byte	.LASF61
 818 0019 00000000 		.4byte	.Ldebug_ranges0+0
 819 001d 00000000 		.4byte	0
 820 0021 00000000 		.4byte	.Ldebug_line0
 821 0025 02       		.uleb128 0x2
 822 0026 01       		.byte	0x1
 823 0027 06       		.byte	0x6
 824 0028 AB020000 		.4byte	.LASF0
 825 002c 03       		.uleb128 0x3
 826 002d 35020000 		.4byte	.LASF4
 827 0031 03       		.byte	0x3
 828 0032 1D       		.byte	0x1d
 829 0033 37000000 		.4byte	0x37
 830 0037 02       		.uleb128 0x2
 831 0038 01       		.byte	0x1
 832 0039 08       		.byte	0x8
 833 003a 6C020000 		.4byte	.LASF1
 834 003e 02       		.uleb128 0x2
 835 003f 02       		.byte	0x2
 836 0040 05       		.byte	0x5
 837 0041 0D010000 		.4byte	.LASF2
 838 0045 02       		.uleb128 0x2
 839 0046 02       		.byte	0x2
 840 0047 07       		.byte	0x7
 841 0048 0A030000 		.4byte	.LASF3
 842 004c 03       		.uleb128 0x3
 843 004d A4030000 		.4byte	.LASF5
 844 0051 03       		.byte	0x3
 845 0052 3F       		.byte	0x3f
 846 0053 57000000 		.4byte	0x57
 847 0057 02       		.uleb128 0x2
 848 0058 04       		.byte	0x4
 849 0059 05       		.byte	0x5
 850 005a 04020000 		.4byte	.LASF6
 851 005e 03       		.uleb128 0x3
 852 005f EC000000 		.4byte	.LASF7
 853 0063 03       		.byte	0x3
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccSeeFBQ.s 			page 25


 854 0064 41       		.byte	0x41
 855 0065 69000000 		.4byte	0x69
 856 0069 02       		.uleb128 0x2
 857 006a 04       		.byte	0x4
 858 006b 07       		.byte	0x7
 859 006c 80030000 		.4byte	.LASF8
 860 0070 02       		.uleb128 0x2
 861 0071 08       		.byte	0x8
 862 0072 05       		.byte	0x5
 863 0073 5A010000 		.4byte	.LASF9
 864 0077 02       		.uleb128 0x2
 865 0078 08       		.byte	0x8
 866 0079 07       		.byte	0x7
 867 007a B7020000 		.4byte	.LASF10
 868 007e 04       		.uleb128 0x4
 869 007f 04       		.byte	0x4
 870 0080 05       		.byte	0x5
 871 0081 696E7400 		.ascii	"int\000"
 872 0085 02       		.uleb128 0x2
 873 0086 04       		.byte	0x4
 874 0087 07       		.byte	0x7
 875 0088 D7020000 		.4byte	.LASF11
 876 008c 03       		.uleb128 0x3
 877 008d 17010000 		.4byte	.LASF12
 878 0091 04       		.byte	0x4
 879 0092 18       		.byte	0x18
 880 0093 2C000000 		.4byte	0x2c
 881 0097 03       		.uleb128 0x3
 882 0098 37030000 		.4byte	.LASF13
 883 009c 04       		.byte	0x4
 884 009d 2C       		.byte	0x2c
 885 009e 4C000000 		.4byte	0x4c
 886 00a2 03       		.uleb128 0x3
 887 00a3 CE020000 		.4byte	.LASF14
 888 00a7 04       		.byte	0x4
 889 00a8 30       		.byte	0x30
 890 00a9 5E000000 		.4byte	0x5e
 891 00ad 02       		.uleb128 0x2
 892 00ae 04       		.byte	0x4
 893 00af 04       		.byte	0x4
 894 00b0 54010000 		.4byte	.LASF15
 895 00b4 02       		.uleb128 0x2
 896 00b5 08       		.byte	0x8
 897 00b6 04       		.byte	0x4
 898 00b7 92030000 		.4byte	.LASF16
 899 00bb 02       		.uleb128 0x2
 900 00bc 01       		.byte	0x1
 901 00bd 08       		.byte	0x8
 902 00be 1D030000 		.4byte	.LASF17
 903 00c2 05       		.uleb128 0x5
 904 00c3 00010000 		.4byte	.LASF18
 905 00c7 05       		.byte	0x5
 906 00c8 4E02     		.2byte	0x24e
 907 00ca CE000000 		.4byte	0xce
 908 00ce 06       		.uleb128 0x6
 909 00cf 04       		.byte	0x4
 910 00d0 D4000000 		.4byte	0xd4
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccSeeFBQ.s 			page 26


 911 00d4 07       		.uleb128 0x7
 912 00d5 02       		.uleb128 0x2
 913 00d6 08       		.byte	0x8
 914 00d7 04       		.byte	0x4
 915 00d8 E0000000 		.4byte	.LASF19
 916 00dc 02       		.uleb128 0x2
 917 00dd 04       		.byte	0x4
 918 00de 07       		.byte	0x7
 919 00df 28000000 		.4byte	.LASF20
 920 00e3 08       		.uleb128 0x8
 921 00e4 04       		.byte	0x4
 922 00e5 06       		.uleb128 0x6
 923 00e6 04       		.byte	0x4
 924 00e7 BB000000 		.4byte	0xbb
 925 00eb 03       		.uleb128 0x3
 926 00ec E4020000 		.4byte	.LASF21
 927 00f0 02       		.byte	0x2
 928 00f1 38       		.byte	0x38
 929 00f2 57000000 		.4byte	0x57
 930 00f6 03       		.uleb128 0x3
 931 00f7 7A020000 		.4byte	.LASF22
 932 00fb 02       		.byte	0x2
 933 00fc 3F       		.byte	0x3f
 934 00fd A2000000 		.4byte	0xa2
 935 0101 03       		.uleb128 0x3
 936 0102 45000000 		.4byte	.LASF23
 937 0106 06       		.byte	0x6
 938 0107 3E       		.byte	0x3e
 939 0108 0C010000 		.4byte	0x10c
 940 010c 06       		.uleb128 0x6
 941 010d 04       		.byte	0x4
 942 010e 12010000 		.4byte	0x112
 943 0112 09       		.uleb128 0x9
 944 0113 22020000 		.4byte	.LASF62
 945 0117 03       		.uleb128 0x3
 946 0118 AE030000 		.4byte	.LASF24
 947 011c 07       		.byte	0x7
 948 011d 2E       		.byte	0x2e
 949 011e E3000000 		.4byte	0xe3
 950 0122 03       		.uleb128 0x3
 951 0123 8F020000 		.4byte	.LASF25
 952 0127 08       		.byte	0x8
 953 0128 25       		.byte	0x25
 954 0129 17010000 		.4byte	0x117
 955 012d 03       		.uleb128 0x3
 956 012e 52030000 		.4byte	.LASF26
 957 0132 09       		.byte	0x9
 958 0133 1F       		.byte	0x1f
 959 0134 E3000000 		.4byte	0xe3
 960 0138 0A       		.uleb128 0xa
 961 0139 24       		.byte	0x24
 962 013a 0A       		.byte	0xa
 963 013b 03       		.byte	0x3
 964 013c AD010000 		.4byte	0x1ad
 965 0140 0B       		.uleb128 0xb
 966 0141 A1020000 		.4byte	.LASF27
 967 0145 0A       		.byte	0xa
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccSeeFBQ.s 			page 27


 968 0146 04       		.byte	0x4
 969 0147 57000000 		.4byte	0x57
 970 014b 00       		.byte	0
 971 014c 0B       		.uleb128 0xb
 972 014d 1F000000 		.4byte	.LASF28
 973 0151 0A       		.byte	0xa
 974 0152 05       		.byte	0x5
 975 0153 57000000 		.4byte	0x57
 976 0157 04       		.byte	0x4
 977 0158 0B       		.uleb128 0xb
 978 0159 FF020000 		.4byte	.LASF29
 979 015d 0A       		.byte	0xa
 980 015e 06       		.byte	0x6
 981 015f 7E000000 		.4byte	0x7e
 982 0163 08       		.byte	0x8
 983 0164 0B       		.uleb128 0xb
 984 0165 BC030000 		.4byte	.LASF30
 985 0169 0A       		.byte	0xa
 986 016a 07       		.byte	0x7
 987 016b 7E000000 		.4byte	0x7e
 988 016f 0C       		.byte	0xc
 989 0170 0B       		.uleb128 0xb
 990 0171 85020000 		.4byte	.LASF31
 991 0175 0A       		.byte	0xa
 992 0176 08       		.byte	0x8
 993 0177 7E000000 		.4byte	0x7e
 994 017b 10       		.byte	0x10
 995 017c 0B       		.uleb128 0xb
 996 017d 22030000 		.4byte	.LASF32
 997 0181 0A       		.byte	0xa
 998 0182 09       		.byte	0x9
 999 0183 7E000000 		.4byte	0x7e
 1000 0187 14       		.byte	0x14
 1001 0188 0C       		.uleb128 0xc
 1002 0189 696E6300 		.ascii	"inc\000"
 1003 018d 0A       		.byte	0xa
 1004 018e 0A       		.byte	0xa
 1005 018f 7E000000 		.4byte	0x7e
 1006 0193 18       		.byte	0x18
 1007 0194 0B       		.uleb128 0xb
 1008 0195 FA020000 		.4byte	.LASF33
 1009 0199 0A       		.byte	0xa
 1010 019a 0B       		.byte	0xb
 1011 019b A2000000 		.4byte	0xa2
 1012 019f 1C       		.byte	0x1c
 1013 01a0 0B       		.uleb128 0xb
 1014 01a1 18020000 		.4byte	.LASF34
 1015 01a5 0A       		.byte	0xa
 1016 01a6 0C       		.byte	0xc
 1017 01a7 A2000000 		.4byte	0xa2
 1018 01ab 20       		.byte	0x20
 1019 01ac 00       		.byte	0
 1020 01ad 03       		.uleb128 0x3
 1021 01ae 0D020000 		.4byte	.LASF35
 1022 01b2 0A       		.byte	0xa
 1023 01b3 0D       		.byte	0xd
 1024 01b4 38010000 		.4byte	0x138
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccSeeFBQ.s 			page 28


 1025 01b8 0A       		.uleb128 0xa
 1026 01b9 18       		.byte	0x18
 1027 01ba 0A       		.byte	0xa
 1028 01bb 0F       		.byte	0xf
 1029 01bc E2010000 		.4byte	0x1e2
 1030 01c0 0C       		.uleb128 0xc
 1031 01c1 4B6900   		.ascii	"Ki\000"
 1032 01c4 0A       		.byte	0xa
 1033 01c5 10       		.byte	0x10
 1034 01c6 B4000000 		.4byte	0xb4
 1035 01ca 00       		.byte	0
 1036 01cb 0C       		.uleb128 0xc
 1037 01cc 4B7000   		.ascii	"Kp\000"
 1038 01cf 0A       		.byte	0xa
 1039 01d0 11       		.byte	0x11
 1040 01d1 B4000000 		.4byte	0xb4
 1041 01d5 08       		.byte	0x8
 1042 01d6 0C       		.uleb128 0xc
 1043 01d7 4B6400   		.ascii	"Kd\000"
 1044 01da 0A       		.byte	0xa
 1045 01db 12       		.byte	0x12
 1046 01dc B4000000 		.4byte	0xb4
 1047 01e0 10       		.byte	0x10
 1048 01e1 00       		.byte	0
 1049 01e2 03       		.uleb128 0x3
 1050 01e3 F7000000 		.4byte	.LASF36
 1051 01e7 0A       		.byte	0xa
 1052 01e8 13       		.byte	0x13
 1053 01e9 B8010000 		.4byte	0x1b8
 1054 01ed 0D       		.uleb128 0xd
 1055 01ee C2030000 		.4byte	.LASF63
 1056 01f2 02       		.byte	0x2
 1057 01f3 BF       		.byte	0xbf
 1058 01f4 03       		.byte	0x3
 1059 01f5 05020000 		.4byte	0x205
 1060 01f9 0E       		.uleb128 0xe
 1061 01fa 07040000 		.4byte	.LASF64
 1062 01fe 02       		.byte	0x2
 1063 01ff C1       		.byte	0xc1
 1064 0200 A2000000 		.4byte	0xa2
 1065 0204 00       		.byte	0
 1066 0205 0F       		.uleb128 0xf
 1067 0206 2D030000 		.4byte	.LASF65
 1068 020a 01       		.byte	0x1
 1069 020b 5B       		.byte	0x5b
 1070 020c 7E000000 		.4byte	0x7e
 1071 0210 00000000 		.4byte	.LFB69
 1072 0214 AC000000 		.4byte	.LFE69-.LFB69
 1073 0218 01       		.uleb128 0x1
 1074 0219 9C       		.byte	0x9c
 1075 021a 2E020000 		.4byte	0x22e
 1076 021e 10       		.uleb128 0x10
 1077 021f 72756E00 		.ascii	"run\000"
 1078 0223 01       		.byte	0x1
 1079 0224 5C       		.byte	0x5c
 1080 0225 2E020000 		.4byte	0x22e
 1081 0229 03       		.uleb128 0x3
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccSeeFBQ.s 			page 29


 1082 022a 91       		.byte	0x91
 1083 022b F07D     		.sleb128 -272
 1084 022d 00       		.byte	0
 1085 022e 11       		.uleb128 0x11
 1086 022f 3E020000 		.4byte	0x23e
 1087 0233 3E020000 		.4byte	0x23e
 1088 0237 12       		.uleb128 0x12
 1089 0238 DC000000 		.4byte	0xdc
 1090 023c 3F       		.byte	0x3f
 1091 023d 00       		.byte	0
 1092 023e 06       		.uleb128 0x6
 1093 023f 04       		.byte	0x4
 1094 0240 44020000 		.4byte	0x244
 1095 0244 13       		.uleb128 0x13
 1096 0245 25000000 		.4byte	0x25
 1097 0249 14       		.uleb128 0x14
 1098 024a 0D000000 		.4byte	.LASF40
 1099 024e 01       		.byte	0x1
 1100 024f 78       		.byte	0x78
 1101 0250 00000000 		.4byte	.LFB70
 1102 0254 80020000 		.4byte	.LFE70-.LFB70
 1103 0258 01       		.uleb128 0x1
 1104 0259 9C       		.byte	0x9c
 1105 025a B1020000 		.4byte	0x2b1
 1106 025e 15       		.uleb128 0x15
 1107 025f 7000     		.ascii	"p\000"
 1108 0261 01       		.byte	0x1
 1109 0262 78       		.byte	0x78
 1110 0263 E3000000 		.4byte	0xe3
 1111 0267 03       		.uleb128 0x3
 1112 0268 91       		.byte	0x91
 1113 0269 D47D     		.sleb128 -300
 1114 026b 16       		.uleb128 0x16
 1115 026c 75010000 		.4byte	.LASF37
 1116 0270 01       		.byte	0x1
 1117 0271 7C       		.byte	0x7c
 1118 0272 2E020000 		.4byte	0x22e
 1119 0276 03       		.uleb128 0x3
 1120 0277 91       		.byte	0x91
 1121 0278 E47D     		.sleb128 -284
 1122 027a 10       		.uleb128 0x10
 1123 027b 6900     		.ascii	"i\000"
 1124 027d 01       		.byte	0x1
 1125 027e 7D       		.byte	0x7d
 1126 027f 7E000000 		.4byte	0x7e
 1127 0283 02       		.uleb128 0x2
 1128 0284 91       		.byte	0x91
 1129 0285 6C       		.sleb128 -20
 1130 0286 10       		.uleb128 0x10
 1131 0287 676F00   		.ascii	"go\000"
 1132 028a 01       		.byte	0x1
 1133 028b 7E       		.byte	0x7e
 1134 028c 7E000000 		.4byte	0x7e
 1135 0290 02       		.uleb128 0x2
 1136 0291 91       		.byte	0x91
 1137 0292 68       		.sleb128 -24
 1138 0293 16       		.uleb128 0x16
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccSeeFBQ.s 			page 30


 1139 0294 32030000 		.4byte	.LASF38
 1140 0298 01       		.byte	0x1
 1141 0299 7F       		.byte	0x7f
 1142 029a 25000000 		.4byte	0x25
 1143 029e 02       		.uleb128 0x2
 1144 029f 91       		.byte	0x91
 1145 02a0 67       		.sleb128 -25
 1146 02a1 16       		.uleb128 0x16
 1147 02a2 1A000000 		.4byte	.LASF39
 1148 02a6 01       		.byte	0x1
 1149 02a7 80       		.byte	0x80
 1150 02a8 B1020000 		.4byte	0x2b1
 1151 02ac 03       		.uleb128 0x3
 1152 02ad 91       		.byte	0x91
 1153 02ae D87D     		.sleb128 -296
 1154 02b0 00       		.byte	0
 1155 02b1 11       		.uleb128 0x11
 1156 02b2 BB000000 		.4byte	0xbb
 1157 02b6 C1020000 		.4byte	0x2c1
 1158 02ba 12       		.uleb128 0x12
 1159 02bb DC000000 		.4byte	0xdc
 1160 02bf 09       		.byte	0x9
 1161 02c0 00       		.byte	0
 1162 02c1 14       		.uleb128 0x14
 1163 02c2 F8030000 		.4byte	.LASF41
 1164 02c6 01       		.byte	0x1
 1165 02c7 BE       		.byte	0xbe
 1166 02c8 00000000 		.4byte	.LFB71
 1167 02cc B4000000 		.4byte	.LFE71-.LFB71
 1168 02d0 01       		.uleb128 0x1
 1169 02d1 9C       		.byte	0x9c
 1170 02d2 F3020000 		.4byte	0x2f3
 1171 02d6 15       		.uleb128 0x15
 1172 02d7 7000     		.ascii	"p\000"
 1173 02d9 01       		.byte	0x1
 1174 02da BE       		.byte	0xbe
 1175 02db E3000000 		.4byte	0xe3
 1176 02df 03       		.uleb128 0x3
 1177 02e0 91       		.byte	0x91
 1178 02e1 EC7D     		.sleb128 -276
 1179 02e3 16       		.uleb128 0x16
 1180 02e4 75010000 		.4byte	.LASF37
 1181 02e8 01       		.byte	0x1
 1182 02e9 C9       		.byte	0xc9
 1183 02ea F3020000 		.4byte	0x2f3
 1184 02ee 03       		.uleb128 0x3
 1185 02ef 91       		.byte	0x91
 1186 02f0 F07D     		.sleb128 -272
 1187 02f2 00       		.byte	0
 1188 02f3 11       		.uleb128 0x11
 1189 02f4 03030000 		.4byte	0x303
 1190 02f8 03030000 		.4byte	0x303
 1191 02fc 12       		.uleb128 0x12
 1192 02fd DC000000 		.4byte	0xdc
 1193 0301 3F       		.byte	0x3f
 1194 0302 00       		.byte	0
 1195 0303 06       		.uleb128 0x6
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccSeeFBQ.s 			page 31


 1196 0304 04       		.byte	0x4
 1197 0305 25000000 		.4byte	0x25
 1198 0309 17       		.uleb128 0x17
 1199 030a 61030000 		.4byte	.LASF66
 1200 030e 01       		.byte	0x1
 1201 030f D9       		.byte	0xd9
 1202 0310 00000000 		.4byte	.LFB72
 1203 0314 A0000000 		.4byte	.LFE72-.LFB72
 1204 0318 01       		.uleb128 0x1
 1205 0319 9C       		.byte	0x9c
 1206 031a 3F030000 		.4byte	0x33f
 1207 031e 18       		.uleb128 0x18
 1208 031f 3F030000 		.4byte	.LASF42
 1209 0323 01       		.byte	0x1
 1210 0324 DC       		.byte	0xdc
 1211 0325 18       		.uleb128 0x18
 1212 0326 31000000 		.4byte	.LASF43
 1213 032a 01       		.byte	0x1
 1214 032b DD       		.byte	0xdd
 1215 032c 18       		.uleb128 0x18
 1216 032d 1F010000 		.4byte	.LASF44
 1217 0331 01       		.byte	0x1
 1218 0332 DE       		.byte	0xde
 1219 0333 19       		.uleb128 0x19
 1220 0334 00000000 		.4byte	.LASF50
 1221 0338 01       		.byte	0x1
 1222 0339 DF       		.byte	0xdf
 1223 033a 3F030000 		.4byte	0x33f
 1224 033e 00       		.byte	0
 1225 033f 11       		.uleb128 0x11
 1226 0340 C2000000 		.4byte	0xc2
 1227 0344 4A030000 		.4byte	0x34a
 1228 0348 1A       		.uleb128 0x1a
 1229 0349 00       		.byte	0
 1230 034a 1B       		.uleb128 0x1b
 1231 034b 2F010000 		.4byte	.LASF45
 1232 034f 01       		.byte	0x1
 1233 0350 0E01     		.2byte	0x10e
 1234 0352 00000000 		.4byte	.LFB73
 1235 0356 1E000000 		.4byte	.LFE73-.LFB73
 1236 035a 01       		.uleb128 0x1
 1237 035b 9C       		.byte	0x9c
 1238 035c A2030000 		.4byte	0x3a2
 1239 0360 1C       		.uleb128 0x1c
 1240 0361 4D010000 		.4byte	.LASF46
 1241 0365 01       		.byte	0x1
 1242 0366 0E01     		.2byte	0x10e
 1243 0368 01010000 		.4byte	0x101
 1244 036c 02       		.uleb128 0x2
 1245 036d 91       		.byte	0x91
 1246 036e 6C       		.sleb128 -20
 1247 036f 1C       		.uleb128 0x1c
 1248 0370 14040000 		.4byte	.LASF47
 1249 0374 01       		.byte	0x1
 1250 0375 0E01     		.2byte	0x10e
 1251 0377 E5000000 		.4byte	0xe5
 1252 037b 02       		.uleb128 0x2
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccSeeFBQ.s 			page 32


 1253 037c 91       		.byte	0x91
 1254 037d 68       		.sleb128 -24
 1255 037e 1D       		.uleb128 0x1d
 1256 037f ED010000 		.4byte	0x1ed
 1257 0383 0A000000 		.4byte	.LBB6
 1258 0387 12000000 		.4byte	.LBE6-.LBB6
 1259 038b 01       		.byte	0x1
 1260 038c 1001     		.2byte	0x110
 1261 038e 1E       		.uleb128 0x1e
 1262 038f 0A000000 		.4byte	.LBB7
 1263 0393 12000000 		.4byte	.LBE7-.LBB7
 1264 0397 1F       		.uleb128 0x1f
 1265 0398 F9010000 		.4byte	0x1f9
 1266 039c 02       		.uleb128 0x2
 1267 039d 91       		.byte	0x91
 1268 039e 74       		.sleb128 -12
 1269 039f 00       		.byte	0
 1270 03a0 00       		.byte	0
 1271 03a1 00       		.byte	0
 1272 03a2 1B       		.uleb128 0x1b
 1273 03a3 46020000 		.4byte	.LASF48
 1274 03a7 01       		.byte	0x1
 1275 03a8 1301     		.2byte	0x113
 1276 03aa 00000000 		.4byte	.LFB74
 1277 03ae 1A000000 		.4byte	.LFE74-.LFB74
 1278 03b2 01       		.uleb128 0x1
 1279 03b3 9C       		.byte	0x9c
 1280 03b4 DC030000 		.4byte	0x3dc
 1281 03b8 1D       		.uleb128 0x1d
 1282 03b9 ED010000 		.4byte	0x1ed
 1283 03bd 06000000 		.4byte	.LBB8
 1284 03c1 12000000 		.4byte	.LBE8-.LBB8
 1285 03c5 01       		.byte	0x1
 1286 03c6 1501     		.2byte	0x115
 1287 03c8 1E       		.uleb128 0x1e
 1288 03c9 06000000 		.4byte	.LBB9
 1289 03cd 12000000 		.4byte	.LBE9-.LBB9
 1290 03d1 1F       		.uleb128 0x1f
 1291 03d2 F9010000 		.4byte	0x1f9
 1292 03d6 02       		.uleb128 0x2
 1293 03d7 91       		.byte	0x91
 1294 03d8 74       		.sleb128 -12
 1295 03d9 00       		.byte	0
 1296 03da 00       		.byte	0
 1297 03db 00       		.byte	0
 1298 03dc 16       		.uleb128 0x16
 1299 03dd 3F020000 		.4byte	.LASF49
 1300 03e1 01       		.byte	0x1
 1301 03e2 49       		.byte	0x49
 1302 03e3 2D010000 		.4byte	0x12d
 1303 03e7 05       		.uleb128 0x5
 1304 03e8 03       		.byte	0x3
 1305 03e9 00000000 		.4byte	pxPort
 1306 03ed 20       		.uleb128 0x20
 1307 03ee E0030000 		.4byte	.LASF51
 1308 03f2 0B       		.byte	0xb
 1309 03f3 9606     		.2byte	0x696
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccSeeFBQ.s 			page 33


 1310 03f5 F9030000 		.4byte	0x3f9
 1311 03f9 21       		.uleb128 0x21
 1312 03fa 97000000 		.4byte	0x97
 1313 03fe 22       		.uleb128 0x22
 1314 03ff EF020000 		.4byte	.LASF52
 1315 0403 01       		.byte	0x1
 1316 0404 4A       		.byte	0x4a
 1317 0405 22010000 		.4byte	0x122
 1318 0409 05       		.uleb128 0x5
 1319 040a 03       		.byte	0x3
 1320 040b 00000000 		.4byte	gatekeeper
 1321 040f 22       		.uleb128 0x22
 1322 0410 68010000 		.4byte	.LASF53
 1323 0414 01       		.byte	0x1
 1324 0415 4B       		.byte	0x4b
 1325 0416 17010000 		.4byte	0x117
 1326 041a 05       		.uleb128 0x5
 1327 041b 03       		.byte	0x3
 1328 041c 00000000 		.4byte	queue_handle
 1329 0420 22       		.uleb128 0x22
 1330 0421 99030000 		.4byte	.LASF54
 1331 0425 01       		.byte	0x1
 1332 0426 4F       		.byte	0x4f
 1333 0427 25000000 		.4byte	0x25
 1334 042b 05       		.uleb128 0x5
 1335 042c 03       		.byte	0x3
 1336 042d 00000000 		.4byte	rx_receive
 1337 0431 11       		.uleb128 0x11
 1338 0432 37000000 		.4byte	0x37
 1339 0436 41040000 		.4byte	0x441
 1340 043a 12       		.uleb128 0x12
 1341 043b DC000000 		.4byte	0xdc
 1342 043f 3F       		.byte	0x3f
 1343 0440 00       		.byte	0
 1344 0441 22       		.uleb128 0x22
 1345 0442 72030000 		.4byte	.LASF55
 1346 0446 01       		.byte	0x1
 1347 0447 50       		.byte	0x50
 1348 0448 31040000 		.4byte	0x431
 1349 044c 05       		.uleb128 0x5
 1350 044d 03       		.byte	0x3
 1351 044e 00000000 		.4byte	buffer
 1352 0452 22       		.uleb128 0x22
 1353 0453 ED030000 		.4byte	.LASF56
 1354 0457 01       		.byte	0x1
 1355 0458 53       		.byte	0x53
 1356 0459 AD010000 		.4byte	0x1ad
 1357 045d 05       		.uleb128 0x5
 1358 045e 03       		.byte	0x3
 1359 045f 00000000 		.4byte	left_wheel
 1360 0463 22       		.uleb128 0x22
 1361 0464 D4030000 		.4byte	.LASF57
 1362 0468 01       		.byte	0x1
 1363 0469 54       		.byte	0x54
 1364 046a AD010000 		.4byte	0x1ad
 1365 046e 05       		.uleb128 0x5
 1366 046f 03       		.byte	0x3
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccSeeFBQ.s 			page 34


 1367 0470 00000000 		.4byte	right_wheel
 1368 0474 23       		.uleb128 0x23
 1369 0475 6B00     		.ascii	"k\000"
 1370 0477 01       		.byte	0x1
 1371 0478 55       		.byte	0x55
 1372 0479 E2010000 		.4byte	0x1e2
 1373 047d 05       		.uleb128 0x5
 1374 047e 03       		.byte	0x3
 1375 047f 00000000 		.4byte	k
 1376 0483 22       		.uleb128 0x22
 1377 0484 63020000 		.4byte	.LASF58
 1378 0488 01       		.byte	0x1
 1379 0489 57       		.byte	0x57
 1380 048a 7E000000 		.4byte	0x7e
 1381 048e 05       		.uleb128 0x5
 1382 048f 03       		.byte	0x3
 1383 0490 00000000 		.4byte	isMaster
 1384 0494 19       		.uleb128 0x19
 1385 0495 00000000 		.4byte	.LASF50
 1386 0499 01       		.byte	0x1
 1387 049a DF       		.byte	0xdf
 1388 049b 3F030000 		.4byte	0x33f
 1389 049f 00       		.byte	0
 1390              		.section	.debug_abbrev,"",%progbits
 1391              	.Ldebug_abbrev0:
 1392 0000 01       		.uleb128 0x1
 1393 0001 11       		.uleb128 0x11
 1394 0002 01       		.byte	0x1
 1395 0003 25       		.uleb128 0x25
 1396 0004 0E       		.uleb128 0xe
 1397 0005 13       		.uleb128 0x13
 1398 0006 0B       		.uleb128 0xb
 1399 0007 03       		.uleb128 0x3
 1400 0008 0E       		.uleb128 0xe
 1401 0009 1B       		.uleb128 0x1b
 1402 000a 0E       		.uleb128 0xe
 1403 000b 55       		.uleb128 0x55
 1404 000c 17       		.uleb128 0x17
 1405 000d 11       		.uleb128 0x11
 1406 000e 01       		.uleb128 0x1
 1407 000f 10       		.uleb128 0x10
 1408 0010 17       		.uleb128 0x17
 1409 0011 00       		.byte	0
 1410 0012 00       		.byte	0
 1411 0013 02       		.uleb128 0x2
 1412 0014 24       		.uleb128 0x24
 1413 0015 00       		.byte	0
 1414 0016 0B       		.uleb128 0xb
 1415 0017 0B       		.uleb128 0xb
 1416 0018 3E       		.uleb128 0x3e
 1417 0019 0B       		.uleb128 0xb
 1418 001a 03       		.uleb128 0x3
 1419 001b 0E       		.uleb128 0xe
 1420 001c 00       		.byte	0
 1421 001d 00       		.byte	0
 1422 001e 03       		.uleb128 0x3
 1423 001f 16       		.uleb128 0x16
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccSeeFBQ.s 			page 35


 1424 0020 00       		.byte	0
 1425 0021 03       		.uleb128 0x3
 1426 0022 0E       		.uleb128 0xe
 1427 0023 3A       		.uleb128 0x3a
 1428 0024 0B       		.uleb128 0xb
 1429 0025 3B       		.uleb128 0x3b
 1430 0026 0B       		.uleb128 0xb
 1431 0027 49       		.uleb128 0x49
 1432 0028 13       		.uleb128 0x13
 1433 0029 00       		.byte	0
 1434 002a 00       		.byte	0
 1435 002b 04       		.uleb128 0x4
 1436 002c 24       		.uleb128 0x24
 1437 002d 00       		.byte	0
 1438 002e 0B       		.uleb128 0xb
 1439 002f 0B       		.uleb128 0xb
 1440 0030 3E       		.uleb128 0x3e
 1441 0031 0B       		.uleb128 0xb
 1442 0032 03       		.uleb128 0x3
 1443 0033 08       		.uleb128 0x8
 1444 0034 00       		.byte	0
 1445 0035 00       		.byte	0
 1446 0036 05       		.uleb128 0x5
 1447 0037 16       		.uleb128 0x16
 1448 0038 00       		.byte	0
 1449 0039 03       		.uleb128 0x3
 1450 003a 0E       		.uleb128 0xe
 1451 003b 3A       		.uleb128 0x3a
 1452 003c 0B       		.uleb128 0xb
 1453 003d 3B       		.uleb128 0x3b
 1454 003e 05       		.uleb128 0x5
 1455 003f 49       		.uleb128 0x49
 1456 0040 13       		.uleb128 0x13
 1457 0041 00       		.byte	0
 1458 0042 00       		.byte	0
 1459 0043 06       		.uleb128 0x6
 1460 0044 0F       		.uleb128 0xf
 1461 0045 00       		.byte	0
 1462 0046 0B       		.uleb128 0xb
 1463 0047 0B       		.uleb128 0xb
 1464 0048 49       		.uleb128 0x49
 1465 0049 13       		.uleb128 0x13
 1466 004a 00       		.byte	0
 1467 004b 00       		.byte	0
 1468 004c 07       		.uleb128 0x7
 1469 004d 15       		.uleb128 0x15
 1470 004e 00       		.byte	0
 1471 004f 27       		.uleb128 0x27
 1472 0050 19       		.uleb128 0x19
 1473 0051 00       		.byte	0
 1474 0052 00       		.byte	0
 1475 0053 08       		.uleb128 0x8
 1476 0054 0F       		.uleb128 0xf
 1477 0055 00       		.byte	0
 1478 0056 0B       		.uleb128 0xb
 1479 0057 0B       		.uleb128 0xb
 1480 0058 00       		.byte	0
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccSeeFBQ.s 			page 36


 1481 0059 00       		.byte	0
 1482 005a 09       		.uleb128 0x9
 1483 005b 13       		.uleb128 0x13
 1484 005c 00       		.byte	0
 1485 005d 03       		.uleb128 0x3
 1486 005e 0E       		.uleb128 0xe
 1487 005f 3C       		.uleb128 0x3c
 1488 0060 19       		.uleb128 0x19
 1489 0061 00       		.byte	0
 1490 0062 00       		.byte	0
 1491 0063 0A       		.uleb128 0xa
 1492 0064 13       		.uleb128 0x13
 1493 0065 01       		.byte	0x1
 1494 0066 0B       		.uleb128 0xb
 1495 0067 0B       		.uleb128 0xb
 1496 0068 3A       		.uleb128 0x3a
 1497 0069 0B       		.uleb128 0xb
 1498 006a 3B       		.uleb128 0x3b
 1499 006b 0B       		.uleb128 0xb
 1500 006c 01       		.uleb128 0x1
 1501 006d 13       		.uleb128 0x13
 1502 006e 00       		.byte	0
 1503 006f 00       		.byte	0
 1504 0070 0B       		.uleb128 0xb
 1505 0071 0D       		.uleb128 0xd
 1506 0072 00       		.byte	0
 1507 0073 03       		.uleb128 0x3
 1508 0074 0E       		.uleb128 0xe
 1509 0075 3A       		.uleb128 0x3a
 1510 0076 0B       		.uleb128 0xb
 1511 0077 3B       		.uleb128 0x3b
 1512 0078 0B       		.uleb128 0xb
 1513 0079 49       		.uleb128 0x49
 1514 007a 13       		.uleb128 0x13
 1515 007b 38       		.uleb128 0x38
 1516 007c 0B       		.uleb128 0xb
 1517 007d 00       		.byte	0
 1518 007e 00       		.byte	0
 1519 007f 0C       		.uleb128 0xc
 1520 0080 0D       		.uleb128 0xd
 1521 0081 00       		.byte	0
 1522 0082 03       		.uleb128 0x3
 1523 0083 08       		.uleb128 0x8
 1524 0084 3A       		.uleb128 0x3a
 1525 0085 0B       		.uleb128 0xb
 1526 0086 3B       		.uleb128 0x3b
 1527 0087 0B       		.uleb128 0xb
 1528 0088 49       		.uleb128 0x49
 1529 0089 13       		.uleb128 0x13
 1530 008a 38       		.uleb128 0x38
 1531 008b 0B       		.uleb128 0xb
 1532 008c 00       		.byte	0
 1533 008d 00       		.byte	0
 1534 008e 0D       		.uleb128 0xd
 1535 008f 2E       		.uleb128 0x2e
 1536 0090 01       		.byte	0x1
 1537 0091 03       		.uleb128 0x3
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccSeeFBQ.s 			page 37


 1538 0092 0E       		.uleb128 0xe
 1539 0093 3A       		.uleb128 0x3a
 1540 0094 0B       		.uleb128 0xb
 1541 0095 3B       		.uleb128 0x3b
 1542 0096 0B       		.uleb128 0xb
 1543 0097 27       		.uleb128 0x27
 1544 0098 19       		.uleb128 0x19
 1545 0099 20       		.uleb128 0x20
 1546 009a 0B       		.uleb128 0xb
 1547 009b 01       		.uleb128 0x1
 1548 009c 13       		.uleb128 0x13
 1549 009d 00       		.byte	0
 1550 009e 00       		.byte	0
 1551 009f 0E       		.uleb128 0xe
 1552 00a0 34       		.uleb128 0x34
 1553 00a1 00       		.byte	0
 1554 00a2 03       		.uleb128 0x3
 1555 00a3 0E       		.uleb128 0xe
 1556 00a4 3A       		.uleb128 0x3a
 1557 00a5 0B       		.uleb128 0xb
 1558 00a6 3B       		.uleb128 0x3b
 1559 00a7 0B       		.uleb128 0xb
 1560 00a8 49       		.uleb128 0x49
 1561 00a9 13       		.uleb128 0x13
 1562 00aa 00       		.byte	0
 1563 00ab 00       		.byte	0
 1564 00ac 0F       		.uleb128 0xf
 1565 00ad 2E       		.uleb128 0x2e
 1566 00ae 01       		.byte	0x1
 1567 00af 3F       		.uleb128 0x3f
 1568 00b0 19       		.uleb128 0x19
 1569 00b1 03       		.uleb128 0x3
 1570 00b2 0E       		.uleb128 0xe
 1571 00b3 3A       		.uleb128 0x3a
 1572 00b4 0B       		.uleb128 0xb
 1573 00b5 3B       		.uleb128 0x3b
 1574 00b6 0B       		.uleb128 0xb
 1575 00b7 27       		.uleb128 0x27
 1576 00b8 19       		.uleb128 0x19
 1577 00b9 49       		.uleb128 0x49
 1578 00ba 13       		.uleb128 0x13
 1579 00bb 11       		.uleb128 0x11
 1580 00bc 01       		.uleb128 0x1
 1581 00bd 12       		.uleb128 0x12
 1582 00be 06       		.uleb128 0x6
 1583 00bf 40       		.uleb128 0x40
 1584 00c0 18       		.uleb128 0x18
 1585 00c1 9642     		.uleb128 0x2116
 1586 00c3 19       		.uleb128 0x19
 1587 00c4 01       		.uleb128 0x1
 1588 00c5 13       		.uleb128 0x13
 1589 00c6 00       		.byte	0
 1590 00c7 00       		.byte	0
 1591 00c8 10       		.uleb128 0x10
 1592 00c9 34       		.uleb128 0x34
 1593 00ca 00       		.byte	0
 1594 00cb 03       		.uleb128 0x3
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccSeeFBQ.s 			page 38


 1595 00cc 08       		.uleb128 0x8
 1596 00cd 3A       		.uleb128 0x3a
 1597 00ce 0B       		.uleb128 0xb
 1598 00cf 3B       		.uleb128 0x3b
 1599 00d0 0B       		.uleb128 0xb
 1600 00d1 49       		.uleb128 0x49
 1601 00d2 13       		.uleb128 0x13
 1602 00d3 02       		.uleb128 0x2
 1603 00d4 18       		.uleb128 0x18
 1604 00d5 00       		.byte	0
 1605 00d6 00       		.byte	0
 1606 00d7 11       		.uleb128 0x11
 1607 00d8 01       		.uleb128 0x1
 1608 00d9 01       		.byte	0x1
 1609 00da 49       		.uleb128 0x49
 1610 00db 13       		.uleb128 0x13
 1611 00dc 01       		.uleb128 0x1
 1612 00dd 13       		.uleb128 0x13
 1613 00de 00       		.byte	0
 1614 00df 00       		.byte	0
 1615 00e0 12       		.uleb128 0x12
 1616 00e1 21       		.uleb128 0x21
 1617 00e2 00       		.byte	0
 1618 00e3 49       		.uleb128 0x49
 1619 00e4 13       		.uleb128 0x13
 1620 00e5 2F       		.uleb128 0x2f
 1621 00e6 0B       		.uleb128 0xb
 1622 00e7 00       		.byte	0
 1623 00e8 00       		.byte	0
 1624 00e9 13       		.uleb128 0x13
 1625 00ea 26       		.uleb128 0x26
 1626 00eb 00       		.byte	0
 1627 00ec 49       		.uleb128 0x49
 1628 00ed 13       		.uleb128 0x13
 1629 00ee 00       		.byte	0
 1630 00ef 00       		.byte	0
 1631 00f0 14       		.uleb128 0x14
 1632 00f1 2E       		.uleb128 0x2e
 1633 00f2 01       		.byte	0x1
 1634 00f3 3F       		.uleb128 0x3f
 1635 00f4 19       		.uleb128 0x19
 1636 00f5 03       		.uleb128 0x3
 1637 00f6 0E       		.uleb128 0xe
 1638 00f7 3A       		.uleb128 0x3a
 1639 00f8 0B       		.uleb128 0xb
 1640 00f9 3B       		.uleb128 0x3b
 1641 00fa 0B       		.uleb128 0xb
 1642 00fb 27       		.uleb128 0x27
 1643 00fc 19       		.uleb128 0x19
 1644 00fd 11       		.uleb128 0x11
 1645 00fe 01       		.uleb128 0x1
 1646 00ff 12       		.uleb128 0x12
 1647 0100 06       		.uleb128 0x6
 1648 0101 40       		.uleb128 0x40
 1649 0102 18       		.uleb128 0x18
 1650 0103 9642     		.uleb128 0x2116
 1651 0105 19       		.uleb128 0x19
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccSeeFBQ.s 			page 39


 1652 0106 01       		.uleb128 0x1
 1653 0107 13       		.uleb128 0x13
 1654 0108 00       		.byte	0
 1655 0109 00       		.byte	0
 1656 010a 15       		.uleb128 0x15
 1657 010b 05       		.uleb128 0x5
 1658 010c 00       		.byte	0
 1659 010d 03       		.uleb128 0x3
 1660 010e 08       		.uleb128 0x8
 1661 010f 3A       		.uleb128 0x3a
 1662 0110 0B       		.uleb128 0xb
 1663 0111 3B       		.uleb128 0x3b
 1664 0112 0B       		.uleb128 0xb
 1665 0113 49       		.uleb128 0x49
 1666 0114 13       		.uleb128 0x13
 1667 0115 02       		.uleb128 0x2
 1668 0116 18       		.uleb128 0x18
 1669 0117 00       		.byte	0
 1670 0118 00       		.byte	0
 1671 0119 16       		.uleb128 0x16
 1672 011a 34       		.uleb128 0x34
 1673 011b 00       		.byte	0
 1674 011c 03       		.uleb128 0x3
 1675 011d 0E       		.uleb128 0xe
 1676 011e 3A       		.uleb128 0x3a
 1677 011f 0B       		.uleb128 0xb
 1678 0120 3B       		.uleb128 0x3b
 1679 0121 0B       		.uleb128 0xb
 1680 0122 49       		.uleb128 0x49
 1681 0123 13       		.uleb128 0x13
 1682 0124 02       		.uleb128 0x2
 1683 0125 18       		.uleb128 0x18
 1684 0126 00       		.byte	0
 1685 0127 00       		.byte	0
 1686 0128 17       		.uleb128 0x17
 1687 0129 2E       		.uleb128 0x2e
 1688 012a 01       		.byte	0x1
 1689 012b 03       		.uleb128 0x3
 1690 012c 0E       		.uleb128 0xe
 1691 012d 3A       		.uleb128 0x3a
 1692 012e 0B       		.uleb128 0xb
 1693 012f 3B       		.uleb128 0x3b
 1694 0130 0B       		.uleb128 0xb
 1695 0131 27       		.uleb128 0x27
 1696 0132 19       		.uleb128 0x19
 1697 0133 11       		.uleb128 0x11
 1698 0134 01       		.uleb128 0x1
 1699 0135 12       		.uleb128 0x12
 1700 0136 06       		.uleb128 0x6
 1701 0137 40       		.uleb128 0x40
 1702 0138 18       		.uleb128 0x18
 1703 0139 9642     		.uleb128 0x2116
 1704 013b 19       		.uleb128 0x19
 1705 013c 01       		.uleb128 0x1
 1706 013d 13       		.uleb128 0x13
 1707 013e 00       		.byte	0
 1708 013f 00       		.byte	0
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccSeeFBQ.s 			page 40


 1709 0140 18       		.uleb128 0x18
 1710 0141 2E       		.uleb128 0x2e
 1711 0142 00       		.byte	0
 1712 0143 3F       		.uleb128 0x3f
 1713 0144 19       		.uleb128 0x19
 1714 0145 03       		.uleb128 0x3
 1715 0146 0E       		.uleb128 0xe
 1716 0147 3A       		.uleb128 0x3a
 1717 0148 0B       		.uleb128 0xb
 1718 0149 3B       		.uleb128 0x3b
 1719 014a 0B       		.uleb128 0xb
 1720 014b 27       		.uleb128 0x27
 1721 014c 19       		.uleb128 0x19
 1722 014d 3C       		.uleb128 0x3c
 1723 014e 19       		.uleb128 0x19
 1724 014f 00       		.byte	0
 1725 0150 00       		.byte	0
 1726 0151 19       		.uleb128 0x19
 1727 0152 34       		.uleb128 0x34
 1728 0153 00       		.byte	0
 1729 0154 03       		.uleb128 0x3
 1730 0155 0E       		.uleb128 0xe
 1731 0156 3A       		.uleb128 0x3a
 1732 0157 0B       		.uleb128 0xb
 1733 0158 3B       		.uleb128 0x3b
 1734 0159 0B       		.uleb128 0xb
 1735 015a 49       		.uleb128 0x49
 1736 015b 13       		.uleb128 0x13
 1737 015c 3F       		.uleb128 0x3f
 1738 015d 19       		.uleb128 0x19
 1739 015e 3C       		.uleb128 0x3c
 1740 015f 19       		.uleb128 0x19
 1741 0160 00       		.byte	0
 1742 0161 00       		.byte	0
 1743 0162 1A       		.uleb128 0x1a
 1744 0163 21       		.uleb128 0x21
 1745 0164 00       		.byte	0
 1746 0165 00       		.byte	0
 1747 0166 00       		.byte	0
 1748 0167 1B       		.uleb128 0x1b
 1749 0168 2E       		.uleb128 0x2e
 1750 0169 01       		.byte	0x1
 1751 016a 3F       		.uleb128 0x3f
 1752 016b 19       		.uleb128 0x19
 1753 016c 03       		.uleb128 0x3
 1754 016d 0E       		.uleb128 0xe
 1755 016e 3A       		.uleb128 0x3a
 1756 016f 0B       		.uleb128 0xb
 1757 0170 3B       		.uleb128 0x3b
 1758 0171 05       		.uleb128 0x5
 1759 0172 27       		.uleb128 0x27
 1760 0173 19       		.uleb128 0x19
 1761 0174 11       		.uleb128 0x11
 1762 0175 01       		.uleb128 0x1
 1763 0176 12       		.uleb128 0x12
 1764 0177 06       		.uleb128 0x6
 1765 0178 40       		.uleb128 0x40
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccSeeFBQ.s 			page 41


 1766 0179 18       		.uleb128 0x18
 1767 017a 9742     		.uleb128 0x2117
 1768 017c 19       		.uleb128 0x19
 1769 017d 01       		.uleb128 0x1
 1770 017e 13       		.uleb128 0x13
 1771 017f 00       		.byte	0
 1772 0180 00       		.byte	0
 1773 0181 1C       		.uleb128 0x1c
 1774 0182 05       		.uleb128 0x5
 1775 0183 00       		.byte	0
 1776 0184 03       		.uleb128 0x3
 1777 0185 0E       		.uleb128 0xe
 1778 0186 3A       		.uleb128 0x3a
 1779 0187 0B       		.uleb128 0xb
 1780 0188 3B       		.uleb128 0x3b
 1781 0189 05       		.uleb128 0x5
 1782 018a 49       		.uleb128 0x49
 1783 018b 13       		.uleb128 0x13
 1784 018c 02       		.uleb128 0x2
 1785 018d 18       		.uleb128 0x18
 1786 018e 00       		.byte	0
 1787 018f 00       		.byte	0
 1788 0190 1D       		.uleb128 0x1d
 1789 0191 1D       		.uleb128 0x1d
 1790 0192 01       		.byte	0x1
 1791 0193 31       		.uleb128 0x31
 1792 0194 13       		.uleb128 0x13
 1793 0195 11       		.uleb128 0x11
 1794 0196 01       		.uleb128 0x1
 1795 0197 12       		.uleb128 0x12
 1796 0198 06       		.uleb128 0x6
 1797 0199 58       		.uleb128 0x58
 1798 019a 0B       		.uleb128 0xb
 1799 019b 59       		.uleb128 0x59
 1800 019c 05       		.uleb128 0x5
 1801 019d 00       		.byte	0
 1802 019e 00       		.byte	0
 1803 019f 1E       		.uleb128 0x1e
 1804 01a0 0B       		.uleb128 0xb
 1805 01a1 01       		.byte	0x1
 1806 01a2 11       		.uleb128 0x11
 1807 01a3 01       		.uleb128 0x1
 1808 01a4 12       		.uleb128 0x12
 1809 01a5 06       		.uleb128 0x6
 1810 01a6 00       		.byte	0
 1811 01a7 00       		.byte	0
 1812 01a8 1F       		.uleb128 0x1f
 1813 01a9 34       		.uleb128 0x34
 1814 01aa 00       		.byte	0
 1815 01ab 31       		.uleb128 0x31
 1816 01ac 13       		.uleb128 0x13
 1817 01ad 02       		.uleb128 0x2
 1818 01ae 18       		.uleb128 0x18
 1819 01af 00       		.byte	0
 1820 01b0 00       		.byte	0
 1821 01b1 20       		.uleb128 0x20
 1822 01b2 34       		.uleb128 0x34
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccSeeFBQ.s 			page 42


 1823 01b3 00       		.byte	0
 1824 01b4 03       		.uleb128 0x3
 1825 01b5 0E       		.uleb128 0xe
 1826 01b6 3A       		.uleb128 0x3a
 1827 01b7 0B       		.uleb128 0xb
 1828 01b8 3B       		.uleb128 0x3b
 1829 01b9 05       		.uleb128 0x5
 1830 01ba 49       		.uleb128 0x49
 1831 01bb 13       		.uleb128 0x13
 1832 01bc 3F       		.uleb128 0x3f
 1833 01bd 19       		.uleb128 0x19
 1834 01be 3C       		.uleb128 0x3c
 1835 01bf 19       		.uleb128 0x19
 1836 01c0 00       		.byte	0
 1837 01c1 00       		.byte	0
 1838 01c2 21       		.uleb128 0x21
 1839 01c3 35       		.uleb128 0x35
 1840 01c4 00       		.byte	0
 1841 01c5 49       		.uleb128 0x49
 1842 01c6 13       		.uleb128 0x13
 1843 01c7 00       		.byte	0
 1844 01c8 00       		.byte	0
 1845 01c9 22       		.uleb128 0x22
 1846 01ca 34       		.uleb128 0x34
 1847 01cb 00       		.byte	0
 1848 01cc 03       		.uleb128 0x3
 1849 01cd 0E       		.uleb128 0xe
 1850 01ce 3A       		.uleb128 0x3a
 1851 01cf 0B       		.uleb128 0xb
 1852 01d0 3B       		.uleb128 0x3b
 1853 01d1 0B       		.uleb128 0xb
 1854 01d2 49       		.uleb128 0x49
 1855 01d3 13       		.uleb128 0x13
 1856 01d4 3F       		.uleb128 0x3f
 1857 01d5 19       		.uleb128 0x19
 1858 01d6 02       		.uleb128 0x2
 1859 01d7 18       		.uleb128 0x18
 1860 01d8 00       		.byte	0
 1861 01d9 00       		.byte	0
 1862 01da 23       		.uleb128 0x23
 1863 01db 34       		.uleb128 0x34
 1864 01dc 00       		.byte	0
 1865 01dd 03       		.uleb128 0x3
 1866 01de 08       		.uleb128 0x8
 1867 01df 3A       		.uleb128 0x3a
 1868 01e0 0B       		.uleb128 0xb
 1869 01e1 3B       		.uleb128 0x3b
 1870 01e2 0B       		.uleb128 0xb
 1871 01e3 49       		.uleb128 0x49
 1872 01e4 13       		.uleb128 0x13
 1873 01e5 3F       		.uleb128 0x3f
 1874 01e6 19       		.uleb128 0x19
 1875 01e7 02       		.uleb128 0x2
 1876 01e8 18       		.uleb128 0x18
 1877 01e9 00       		.byte	0
 1878 01ea 00       		.byte	0
 1879 01eb 00       		.byte	0
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccSeeFBQ.s 			page 43


 1880              		.section	.debug_aranges,"",%progbits
 1881 0000 44000000 		.4byte	0x44
 1882 0004 0200     		.2byte	0x2
 1883 0006 00000000 		.4byte	.Ldebug_info0
 1884 000a 04       		.byte	0x4
 1885 000b 00       		.byte	0
 1886 000c 0000     		.2byte	0
 1887 000e 0000     		.2byte	0
 1888 0010 00000000 		.4byte	.LFB69
 1889 0014 AC000000 		.4byte	.LFE69-.LFB69
 1890 0018 00000000 		.4byte	.LFB70
 1891 001c 80020000 		.4byte	.LFE70-.LFB70
 1892 0020 00000000 		.4byte	.LFB71
 1893 0024 B4000000 		.4byte	.LFE71-.LFB71
 1894 0028 00000000 		.4byte	.LFB72
 1895 002c A0000000 		.4byte	.LFE72-.LFB72
 1896 0030 00000000 		.4byte	.LFB73
 1897 0034 1E000000 		.4byte	.LFE73-.LFB73
 1898 0038 00000000 		.4byte	.LFB74
 1899 003c 1A000000 		.4byte	.LFE74-.LFB74
 1900 0040 00000000 		.4byte	0
 1901 0044 00000000 		.4byte	0
 1902              		.section	.debug_ranges,"",%progbits
 1903              	.Ldebug_ranges0:
 1904 0000 00000000 		.4byte	.LFB69
 1905 0004 AC000000 		.4byte	.LFE69
 1906 0008 00000000 		.4byte	.LFB70
 1907 000c 80020000 		.4byte	.LFE70
 1908 0010 00000000 		.4byte	.LFB71
 1909 0014 B4000000 		.4byte	.LFE71
 1910 0018 00000000 		.4byte	.LFB72
 1911 001c A0000000 		.4byte	.LFE72
 1912 0020 00000000 		.4byte	.LFB73
 1913 0024 1E000000 		.4byte	.LFE73
 1914 0028 00000000 		.4byte	.LFB74
 1915 002c 1A000000 		.4byte	.LFE74
 1916 0030 00000000 		.4byte	0
 1917 0034 00000000 		.4byte	0
 1918              		.section	.debug_line,"",%progbits
 1919              	.Ldebug_line0:
 1920 0000 05030000 		.section	.debug_str,"MS",%progbits,1
 1920      0200DF01 
 1920      00000201 
 1920      FB0E0D00 
 1920      01010101 
 1921              	.LASF50:
 1922 0000 43795261 		.ascii	"CyRamVectors\000"
 1922      6D566563 
 1922      746F7273 
 1922      00
 1923              	.LASF40:
 1924 000d 72656365 		.ascii	"receive_data\000"
 1924      6976655F 
 1924      64617461 
 1924      00
 1925              	.LASF39:
 1926 001a 74656D70 		.ascii	"temp\000"
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccSeeFBQ.s 			page 44


 1926      00
 1927              	.LASF28:
 1928 001f 6375725F 		.ascii	"cur_dest\000"
 1928      64657374 
 1928      00
 1929              	.LASF20:
 1930 0028 73697A65 		.ascii	"sizetype\000"
 1930      74797065 
 1930      00
 1931              	.LASF43:
 1932 0031 78506F72 		.ascii	"xPortSysTickHandler\000"
 1932      74537973 
 1932      5469636B 
 1932      48616E64 
 1932      6C657200 
 1933              	.LASF23:
 1934 0045 5461736B 		.ascii	"TaskHandle_t\000"
 1934      48616E64 
 1934      6C655F74 
 1934      00
 1935              	.LASF59:
 1936 0052 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1936      43313120 
 1936      352E342E 
 1936      31203230 
 1936      31363036 
 1937 0085 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1937      20726576 
 1937      6973696F 
 1937      6E203233 
 1937      37373135 
 1938 00b8 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1938      66756E63 
 1938      74696F6E 
 1938      2D736563 
 1938      74696F6E 
 1939              	.LASF19:
 1940 00e0 6C6F6E67 		.ascii	"long double\000"
 1940      20646F75 
 1940      626C6500 
 1941              	.LASF7:
 1942 00ec 5F5F7569 		.ascii	"__uint32_t\000"
 1942      6E743332 
 1942      5F7400
 1943              	.LASF36:
 1944 00f7 5049445F 		.ascii	"PID_data\000"
 1944      64617461 
 1944      00
 1945              	.LASF18:
 1946 0100 63796973 		.ascii	"cyisraddress\000"
 1946      72616464 
 1946      72657373 
 1946      00
 1947              	.LASF2:
 1948 010d 73686F72 		.ascii	"short int\000"
 1948      7420696E 
 1948      7400
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccSeeFBQ.s 			page 45


 1949              	.LASF12:
 1950 0117 75696E74 		.ascii	"uint8_t\000"
 1950      385F7400 
 1951              	.LASF44:
 1952 011f 76506F72 		.ascii	"vPortSVCHandler\000"
 1952      74535643 
 1952      48616E64 
 1952      6C657200 
 1953              	.LASF45:
 1954 012f 76417070 		.ascii	"vApplicationStackOverflowHook\000"
 1954      6C696361 
 1954      74696F6E 
 1954      53746163 
 1954      6B4F7665 
 1955              	.LASF46:
 1956 014d 70785461 		.ascii	"pxTask\000"
 1956      736B00
 1957              	.LASF15:
 1958 0154 666C6F61 		.ascii	"float\000"
 1958      7400
 1959              	.LASF9:
 1960 015a 6C6F6E67 		.ascii	"long long int\000"
 1960      206C6F6E 
 1960      6720696E 
 1960      7400
 1961              	.LASF53:
 1962 0168 71756575 		.ascii	"queue_handle\000"
 1962      655F6861 
 1962      6E646C65 
 1962      00
 1963              	.LASF37:
 1964 0175 6C6F6361 		.ascii	"local_write\000"
 1964      6C5F7772 
 1964      69746500 
 1965              	.LASF61:
 1966 0181 433A5C55 		.ascii	"C:\\Users\\shevi\\Documents\\GitHub\\FYP_POSCCreato"
 1966      73657273 
 1966      5C736865 
 1966      76695C44 
 1966      6F63756D 
 1967 01af 725F4D61 		.ascii	"r_Master\\FYP_PSOCCreator_Master\\CORTEX_CY8C5588_P"
 1967      73746572 
 1967      5C465950 
 1967      5F50534F 
 1967      43437265 
 1968 01e0 536F435F 		.ascii	"SoC_Creator_GCC\\FreeRTOS_Demo.cydsn\000"
 1968      43726561 
 1968      746F725F 
 1968      4743435C 
 1968      46726565 
 1969              	.LASF6:
 1970 0204 6C6F6E67 		.ascii	"long int\000"
 1970      20696E74 
 1970      00
 1971              	.LASF35:
 1972 020d 77686565 		.ascii	"wheel_data\000"
 1972      6C5F6461 
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccSeeFBQ.s 			page 46


 1972      746100
 1973              	.LASF34:
 1974 0218 74696D65 		.ascii	"time_prev\000"
 1974      5F707265 
 1974      7600
 1975              	.LASF62:
 1976 0222 5461736B 		.ascii	"TaskControlBlock_t\000"
 1976      436F6E74 
 1976      726F6C42 
 1976      6C6F636B 
 1976      5F7400
 1977              	.LASF4:
 1978 0235 5F5F7569 		.ascii	"__uint8_t\000"
 1978      6E74385F 
 1978      7400
 1979              	.LASF49:
 1980 023f 7078506F 		.ascii	"pxPort\000"
 1980      727400
 1981              	.LASF48:
 1982 0246 76417070 		.ascii	"vApplicationMallocFailedHook\000"
 1982      6C696361 
 1982      74696F6E 
 1982      4D616C6C 
 1982      6F634661 
 1983              	.LASF58:
 1984 0263 69734D61 		.ascii	"isMaster\000"
 1984      73746572 
 1984      00
 1985              	.LASF1:
 1986 026c 756E7369 		.ascii	"unsigned char\000"
 1986      676E6564 
 1986      20636861 
 1986      7200
 1987              	.LASF22:
 1988 027a 5469636B 		.ascii	"TickType_t\000"
 1988      54797065 
 1988      5F7400
 1989              	.LASF31:
 1990 0285 6572726F 		.ascii	"error_sum\000"
 1990      725F7375 
 1990      6D00
 1991              	.LASF25:
 1992 028f 53656D61 		.ascii	"SemaphoreHandle_t\000"
 1992      70686F72 
 1992      6548616E 
 1992      646C655F 
 1992      7400
 1993              	.LASF27:
 1994 02a1 70726576 		.ascii	"prev_dest\000"
 1994      5F646573 
 1994      7400
 1995              	.LASF0:
 1996 02ab 7369676E 		.ascii	"signed char\000"
 1996      65642063 
 1996      68617200 
 1997              	.LASF10:
 1998 02b7 6C6F6E67 		.ascii	"long long unsigned int\000"
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccSeeFBQ.s 			page 47


 1998      206C6F6E 
 1998      6720756E 
 1998      7369676E 
 1998      65642069 
 1999              	.LASF14:
 2000 02ce 75696E74 		.ascii	"uint32_t\000"
 2000      33325F74 
 2000      00
 2001              	.LASF11:
 2002 02d7 756E7369 		.ascii	"unsigned int\000"
 2002      676E6564 
 2002      20696E74 
 2002      00
 2003              	.LASF21:
 2004 02e4 42617365 		.ascii	"BaseType_t\000"
 2004      54797065 
 2004      5F7400
 2005              	.LASF52:
 2006 02ef 67617465 		.ascii	"gatekeeper\000"
 2006      6B656570 
 2006      657200
 2007              	.LASF33:
 2008 02fa 74696D65 		.ascii	"time\000"
 2008      00
 2009              	.LASF29:
 2010 02ff 6572726F 		.ascii	"error_prev\000"
 2010      725F7072 
 2010      657600
 2011              	.LASF3:
 2012 030a 73686F72 		.ascii	"short unsigned int\000"
 2012      7420756E 
 2012      7369676E 
 2012      65642069 
 2012      6E7400
 2013              	.LASF17:
 2014 031d 63686172 		.ascii	"char\000"
 2014      00
 2015              	.LASF32:
 2016 0322 6D6F746F 		.ascii	"motor_volt\000"
 2016      725F766F 
 2016      6C7400
 2017              	.LASF65:
 2018 032d 6D61696E 		.ascii	"main\000"
 2018      00
 2019              	.LASF38:
 2020 0332 74797065 		.ascii	"type\000"
 2020      00
 2021              	.LASF13:
 2022 0337 696E7433 		.ascii	"int32_t\000"
 2022      325F7400 
 2023              	.LASF42:
 2024 033f 78506F72 		.ascii	"xPortPendSVHandler\000"
 2024      7450656E 
 2024      64535648 
 2024      616E646C 
 2024      657200
 2025              	.LASF26:
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccSeeFBQ.s 			page 48


 2026 0352 78436F6D 		.ascii	"xComPortHandle\000"
 2026      506F7274 
 2026      48616E64 
 2026      6C6500
 2027              	.LASF66:
 2028 0361 70727648 		.ascii	"prvHardwareSetup\000"
 2028      61726477 
 2028      61726553 
 2028      65747570 
 2028      00
 2029              	.LASF55:
 2030 0372 62756666 		.ascii	"buffer\000"
 2030      657200
 2031              	.LASF60:
 2032 0379 6D61696E 		.ascii	"main.c\000"
 2032      2E6300
 2033              	.LASF8:
 2034 0380 6C6F6E67 		.ascii	"long unsigned int\000"
 2034      20756E73 
 2034      69676E65 
 2034      6420696E 
 2034      7400
 2035              	.LASF16:
 2036 0392 646F7562 		.ascii	"double\000"
 2036      6C6500
 2037              	.LASF54:
 2038 0399 72785F72 		.ascii	"rx_receive\000"
 2038      65636569 
 2038      766500
 2039              	.LASF5:
 2040 03a4 5F5F696E 		.ascii	"__int32_t\000"
 2040      7433325F 
 2040      7400
 2041              	.LASF24:
 2042 03ae 51756575 		.ascii	"QueueHandle_t\000"
 2042      6548616E 
 2042      646C655F 
 2042      7400
 2043              	.LASF30:
 2044 03bc 6572726F 		.ascii	"error\000"
 2044      7200
 2045              	.LASF63:
 2046 03c2 76506F72 		.ascii	"vPortRaiseBASEPRI\000"
 2046      74526169 
 2046      73654241 
 2046      53455052 
 2046      4900
 2047              	.LASF57:
 2048 03d4 72696768 		.ascii	"right_wheel\000"
 2048      745F7768 
 2048      65656C00 
 2049              	.LASF51:
 2050 03e0 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2050      52784275 
 2050      66666572 
 2050      00
 2051              	.LASF56:
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccSeeFBQ.s 			page 49


 2052 03ed 6C656674 		.ascii	"left_wheel\000"
 2052      5F776865 
 2052      656C00
 2053              	.LASF41:
 2054 03f8 5049445F 		.ascii	"PID_initialise\000"
 2054      696E6974 
 2054      69616C69 
 2054      736500
 2055              	.LASF64:
 2056 0407 756C4E65 		.ascii	"ulNewBASEPRI\000"
 2056      77424153 
 2056      45505249 
 2056      00
 2057              	.LASF47:
 2058 0414 70635461 		.ascii	"pcTaskName\000"
 2058      736B4E61 
 2058      6D6500
 2059              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
>>>>>>> c9b510a773d88c725b10924e41e3b58e459a6304
>>>>>>> 477ec7bbc14d269664e547f45035acf333f4eb07
