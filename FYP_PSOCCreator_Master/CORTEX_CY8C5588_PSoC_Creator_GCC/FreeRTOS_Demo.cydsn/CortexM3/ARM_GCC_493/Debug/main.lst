ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccP8kvyP.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.bss
  19              		.align	2
  20              	pxPort:
  21 0000 00000000 		.space	4
  22              		.global	gatekeeper
  23              		.align	2
  24              		.type	gatekeeper, %object
  25              		.size	gatekeeper, 4
  26              	gatekeeper:
  27 0004 00000000 		.space	4
  28              		.global	queue_handle
  29              		.align	2
  30              		.type	queue_handle, %object
  31              		.size	queue_handle, 4
  32              	queue_handle:
  33 0008 00000000 		.space	4
  34              		.comm	rx_receive,1,1
  35              		.comm	buffer,64,4
  36              		.comm	left_wheel,36,4
  37              		.comm	right_wheel,36,4
  38              		.comm	k,24,8
  39              		.global	isMaster
  40              		.data
  41              		.align	2
  42              		.type	isMaster, %object
  43              		.size	isMaster, 4
  44              	isMaster:
  45 0000 01000000 		.word	1
  46              		.section	.rodata
  47              		.align	2
  48              	.LC0:
  49 0000 0A3D3D3D 		.ascii	"\012=== Master ===\012\012\000"
  49      204D6173 
  49      74657220 
  49      3D3D3D0A 
  49      0A00
  50 0012 0000     		.align	2
  51              	.LC1:
  52 0014 0A3D3D3D 		.ascii	"\012=== NEW RUN ===\012\012\000"
  52      204E4557 
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccP8kvyP.s 			page 2


  52      2052554E 
  52      203D3D3D 
  52      0A0A00
  53 0027 00       		.align	2
  54              	.LC2:
  55 0028 696E6974 		.ascii	"initialise the PID\000"
  55      69616C69 
  55      73652074 
  55      68652050 
  55      494400
  56 003b 00       		.align	2
  57              	.LC3:
  58 003c 77616974 		.ascii	"waiting for a serial bus to come in\000"
  58      696E6720 
  58      666F7220 
  58      61207365 
  58      7269616C 
  59              		.section	.text.main,"ax",%progbits
  60              		.align	2
  61              		.global	main
  62              		.thumb
  63              		.thumb_func
  64              		.type	main, %function
  65              	main:
  66              	.LFB68:
  67              		.file 1 "main.c"
   1:main.c        **** /*
   2:main.c        ****  * FreeRTOS Kernel V10.0.1
   3:main.c        ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:main.c        ****  *
   5:main.c        ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:main.c        ****  * this software and associated documentation files (the "Software"), to deal in
   7:main.c        ****  * the Software without restriction, including without limitation the rights to
   8:main.c        ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:main.c        ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:main.c        ****  * subject to the following conditions:
  11:main.c        ****  *
  12:main.c        ****  * The above copyright notice and this permission notice shall be included in all
  13:main.c        ****  * copies or substantial portions of the Software.
  14:main.c        ****  *
  15:main.c        ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:main.c        ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:main.c        ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:main.c        ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:main.c        ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:main.c        ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:main.c        ****  *
  22:main.c        ****  * http://www.FreeRTOS.org
  23:main.c        ****  * http://aws.amazon.com/freertos
  24:main.c        ****  *
  25:main.c        ****  * 1 tab == 4 spaces!
  26:main.c        ****  */
  27:main.c        **** 
  28:main.c        **** /* This is the master file !!!!!!  */
  29:main.c        **** 
  30:main.c        **** 
  31:main.c        **** 
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccP8kvyP.s 			page 3


  32:main.c        **** 
  33:main.c        **** /* Standard includes */
  34:main.c        **** #include <device.h>
  35:main.c        **** #include <stdio.h>
  36:main.c        **** #include <stdint.h>
  37:main.c        **** #include <stdio.h>
  38:main.c        **** #include <stdint.h>
  39:main.c        **** #include <stdlib.h>
  40:main.c        **** #include <string.h>
  41:main.c        ****  
  42:main.c        **** 
  43:main.c        **** /* FreeRTOS includes */
  44:main.c        **** #include "FreeRTOS.h"
  45:main.c        **** #include "task.h"
  46:main.c        **** #include "semphr.h"
  47:main.c        **** #include "serial.h"
  48:main.c        **** 
  49:main.c        **** /* My headers */
  50:main.c        **** #include "movement.h"
  51:main.c        **** 
  52:main.c        **** /* The time between cycles of the 'check' functionality (defined within the
  53:main.c        **** tick hook. */
  54:main.c        **** #define mainCHECK_DELAY						( ( TickType_t ) 5000 / portTICK_PERIOD_MS )
  55:main.c        **** #define mainCOM_LED							( 3 )
  56:main.c        **** 
  57:main.c        **** /* The number of nano seconds between each processor clock. */
  58:main.c        **** #define mainNS_PER_CLOCK ( ( unsigned long ) ( ( 1.0 / ( double ) configCPU_CLOCK_HZ ) * 1000000000
  59:main.c        **** 
  60:main.c        **** /* Task priorities. */
  61:main.c        **** #define mainSENDER_PRIORITY       			( tskIDLE_PRIORITY )
  62:main.c        **** #define mainRECEIVER_PRIORITY        		( tskIDLE_PRIORITY )
  63:main.c        **** 
  64:main.c        **** #define comRX_BLOCK_TIME			( ( TickType_t ) 0xffff )
  65:main.c        **** 
  66:main.c        **** 
  67:main.c        **** void PID_initialise( void *p );
  68:main.c        **** void receive_data( void *p );
  69:main.c        **** void DMA_config();
  70:main.c        **** static void prvHardwareSetup( void );
  71:main.c        **** 
  72:main.c        **** 
  73:main.c        **** static xComPortHandle pxPort = NULL;
  74:main.c        **** xSemaphoreHandle gatekeeper = 0;
  75:main.c        **** xQueueHandle queue_handle = NULL;
  76:main.c        **** 
  77:main.c        **** 
  78:main.c        **** /* global variables */
  79:main.c        **** signed char rx_receive;
  80:main.c        **** unsigned char buffer[64];
  81:main.c        **** 
  82:main.c        **** 
  83:main.c        **** wheel_data left_wheel;
  84:main.c        **** wheel_data right_wheel;
  85:main.c        **** PID_data k;
  86:main.c        **** 
  87:main.c        **** int isMaster = 1;           // use 1 if it is the master, 0 if it is the slave.
  88:main.c        **** 
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccP8kvyP.s 			page 4


  89:main.c        **** 
  90:main.c        **** // START OF FUNCTIONS
  91:main.c        **** int main( void ) {
  68              		.loc 1 91 0
  69              		.cfi_startproc
  70              		@ args = 0, pretend = 0, frame = 256
  71              		@ frame_needed = 1, uses_anonymous_args = 0
  72 0000 B0B5     		push	{r4, r5, r7, lr}
  73              		.cfi_def_cfa_offset 16
  74              		.cfi_offset 4, -16
  75              		.cfi_offset 5, -12
  76              		.cfi_offset 7, -8
  77              		.cfi_offset 14, -4
  78 0002 C2B0     		sub	sp, sp, #264
  79              		.cfi_def_cfa_offset 280
  80 0004 02AF     		add	r7, sp, #8
  81              		.cfi_def_cfa 7, 272
  92:main.c        **** 	const signed char * run[64];
  93:main.c        ****     if (isMaster){
  94:main.c        ****     /* This is the for loop for the master system */
  95:main.c        ****         
  96:main.c        ****         
  97:main.c        ****         
  98:main.c        ****     }
  99:main.c        ****     if (~isMaster){
  82              		.loc 1 99 0
  83 0006 264B     		ldr	r3, .L3
  84 0008 1B68     		ldr	r3, [r3]
  85 000a B3F1FF3F 		cmp	r3, #-1
  86 000e 45D0     		beq	.L2
 100:main.c        ****     /* This is the for loop for the slave system */
 101:main.c        ****         
 102:main.c        ****     prvHardwareSetup(); 
  87              		.loc 1 102 0
  88 0010 FFF7FEFF 		bl	prvHardwareSetup
 103:main.c        ****     DMA_config();
  89              		.loc 1 103 0
  90 0014 FFF7FEFF 		bl	DMA_config
 104:main.c        ****     sprintf((char *) run, "\n=== Master ===\n\n");
  91              		.loc 1 104 0
  92 0018 3B46     		mov	r3, r7
  93 001a 224A     		ldr	r2, .L3+4
  94 001c 1C46     		mov	r4, r3
  95 001e 1546     		mov	r5, r2
  96 0020 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
  97 0022 0FC4     		stmia	r4!, {r0, r1, r2, r3}
  98 0024 2B68     		ldr	r3, [r5]
  99 0026 2380     		strh	r3, [r4]	@ movhi
 105:main.c        ****     vSerialPutString(pxPort, (const signed char *) run, 64);
 100              		.loc 1 105 0
 101 0028 1F4B     		ldr	r3, .L3+8
 102 002a 1A68     		ldr	r2, [r3]
 103 002c 3B46     		mov	r3, r7
 104 002e 1046     		mov	r0, r2
 105 0030 1946     		mov	r1, r3
 106 0032 4022     		movs	r2, #64
 107 0034 FFF7FEFF 		bl	vSerialPutString
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccP8kvyP.s 			page 5


 106:main.c        ****     
 107:main.c        ****     sprintf((char *) run, "\n=== NEW RUN ===\n\n");
 108              		.loc 1 107 0
 109 0038 3B46     		mov	r3, r7
 110 003a 1C4A     		ldr	r2, .L3+12
 111 003c 1C46     		mov	r4, r3
 112 003e 1546     		mov	r5, r2
 113 0040 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 114 0042 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 115 0044 2B68     		ldr	r3, [r5]
 116 0046 1A46     		mov	r2, r3	@ movhi
 117 0048 2280     		strh	r2, [r4]	@ movhi
 118 004a 0234     		adds	r4, r4, #2
 119 004c 1B0C     		lsrs	r3, r3, #16
 120 004e 2370     		strb	r3, [r4]
 108:main.c        ****     vSerialPutString(pxPort, (const signed char *) run, 64);
 121              		.loc 1 108 0
 122 0050 154B     		ldr	r3, .L3+8
 123 0052 1A68     		ldr	r2, [r3]
 124 0054 3B46     		mov	r3, r7
 125 0056 1046     		mov	r0, r2
 126 0058 1946     		mov	r1, r3
 127 005a 4022     		movs	r2, #64
 128 005c FFF7FEFF 		bl	vSerialPutString
 109:main.c        ****     
 110:main.c        ****     gatekeeper = xSemaphoreCreateMutex();
 129              		.loc 1 110 0
 130 0060 0120     		movs	r0, #1
 131 0062 FFF7FEFF 		bl	xQueueCreateMutex
 132 0066 0246     		mov	r2, r0
 133 0068 114B     		ldr	r3, .L3+16
 134 006a 1A60     		str	r2, [r3]
 111:main.c        ****     
 112:main.c        ****     xTaskCreate( PID_initialise, (const char*) "initialise the PID", 1024, NULL, 2, NULL );
 135              		.loc 1 112 0
 136 006c 0223     		movs	r3, #2
 137 006e 0093     		str	r3, [sp]
 138 0070 0023     		movs	r3, #0
 139 0072 0193     		str	r3, [sp, #4]
 140 0074 0F48     		ldr	r0, .L3+20
 141 0076 1049     		ldr	r1, .L3+24
 142 0078 4FF48062 		mov	r2, #1024
 143 007c 0023     		movs	r3, #0
 144 007e FFF7FEFF 		bl	xTaskCreate
 113:main.c        ****     xTaskCreate( receive_data, (const char*) "waiting for a serial bus to come in", 1024, NULL, 1, 
 145              		.loc 1 113 0
 146 0082 0123     		movs	r3, #1
 147 0084 0093     		str	r3, [sp]
 148 0086 0023     		movs	r3, #0
 149 0088 0193     		str	r3, [sp, #4]
 150 008a 0C48     		ldr	r0, .L3+28
 151 008c 0C49     		ldr	r1, .L3+32
 152 008e 4FF48062 		mov	r2, #1024
 153 0092 0023     		movs	r3, #0
 154 0094 FFF7FEFF 		bl	xTaskCreate
 114:main.c        ****     
 115:main.c        **** 	vTaskStartScheduler();
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccP8kvyP.s 			page 6


 155              		.loc 1 115 0
 156 0098 FFF7FEFF 		bl	vTaskStartScheduler
 157              	.L2:
 116:main.c        ****     
 117:main.c        ****     }
 118:main.c        **** 
 119:main.c        **** 	for( ;; );  // You won't actually reach this for loop.
 158              		.loc 1 119 0 discriminator 1
 159 009c FEE7     		b	.L2
 160              	.L4:
 161 009e 00BF     		.align	2
 162              	.L3:
 163 00a0 00000000 		.word	isMaster
 164 00a4 00000000 		.word	.LC0
 165 00a8 00000000 		.word	pxPort
 166 00ac 14000000 		.word	.LC1
 167 00b0 00000000 		.word	gatekeeper
 168 00b4 00000000 		.word	PID_initialise
 169 00b8 28000000 		.word	.LC2
 170 00bc 00000000 		.word	receive_data
 171 00c0 3C000000 		.word	.LC3
 172              		.cfi_endproc
 173              	.LFE68:
 174              		.size	main, .-main
 175              		.section	.rodata
 176              		.align	2
 177              	.LC4:
 178 0060 496E2044 		.ascii	"In DMA CONFIG  \000"
 178      4D412043 
 178      4F4E4649 
 178      47202000 
 179              		.section	.text.DMA_config,"ax",%progbits
 180              		.align	2
 181              		.global	DMA_config
 182              		.thumb
 183              		.thumb_func
 184              		.type	DMA_config, %function
 185              	DMA_config:
 186              	.LFB69:
 120:main.c        **** }
 121:main.c        **** void DMA_config(){
 187              		.loc 1 121 0
 188              		.cfi_startproc
 189              		@ args = 0, pretend = 0, frame = 264
 190              		@ frame_needed = 1, uses_anonymous_args = 0
 191 0000 90B5     		push	{r4, r7, lr}
 192              		.cfi_def_cfa_offset 12
 193              		.cfi_offset 4, -12
 194              		.cfi_offset 7, -8
 195              		.cfi_offset 14, -4
 196 0002 C3B0     		sub	sp, sp, #268
 197              		.cfi_def_cfa_offset 280
 198 0004 00AF     		add	r7, sp, #0
 199              		.cfi_def_cfa_register 7
 122:main.c        ****     ADC_DelSig_1_Start();
 200              		.loc 1 122 0
 201 0006 FFF7FEFF 		bl	ADC_DelSig_1_Start
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccP8kvyP.s 			page 7


 123:main.c        ****     ADC_DelSig_1_StartConvert();
 202              		.loc 1 123 0
 203 000a FFF7FEFF 		bl	ADC_DelSig_1_StartConvert
 124:main.c        ****     Filter_1_Start();
 204              		.loc 1 124 0
 205 000e FFF7FEFF 		bl	Filter_1_Start
 125:main.c        ****     Opamp_1_Start();
 206              		.loc 1 125 0
 207 0012 FFF7FEFF 		bl	Opamp_1_Start
 126:main.c        ****     PGA_1_Start();
 208              		.loc 1 126 0
 209 0016 FFF7FEFF 		bl	PGA_1_Start
 127:main.c        ****     PGA_2_Start(); 
 210              		.loc 1 127 0
 211 001a FFF7FEFF 		bl	PGA_2_Start
 128:main.c        ****     /* Defines for DMA_1 */
 129:main.c        ****     #define DMA_1_BYTES_PER_BURST 1
 130:main.c        ****     #define DMA_1_REQUEST_PER_BURST 1
 131:main.c        ****     #define DMA_1_SRC_BASE (CYDEV_PERIPH_BASE)
 132:main.c        ****     #define DMA_1_DST_BASE (CYDEV_PERIPH_BASE)
 133:main.c        **** 
 134:main.c        ****     /* Variable declarations for DMA_1 */
 135:main.c        ****     /* Move these variable declarations to the top of the function */
 136:main.c        ****     uint8 DMA_1_Chan;
 137:main.c        ****     uint8 DMA_1_TD[1];
 138:main.c        **** 
 139:main.c        ****     /* DMA Configuration for DMA_1 */
 140:main.c        ****     DMA_1_Chan = DMA_1_DmaInitialize(DMA_1_BYTES_PER_BURST, DMA_1_REQUEST_PER_BURST, 
 212              		.loc 1 140 0
 213 001e 0120     		movs	r0, #1
 214 0020 0121     		movs	r1, #1
 215 0022 4FF48042 		mov	r2, #16384
 216 0026 4FF48043 		mov	r3, #16384
 217 002a FFF7FEFF 		bl	DMA_1_DmaInitialize
 218 002e 0346     		mov	r3, r0
 219 0030 87F80731 		strb	r3, [r7, #263]
 141:main.c        ****         HI16(DMA_1_SRC_BASE), HI16(DMA_1_DST_BASE));
 142:main.c        ****     DMA_1_TD[0] = CyDmaTdAllocate();
 220              		.loc 1 142 0
 221 0034 FFF7FEFF 		bl	CyDmaTdAllocate
 222 0038 0346     		mov	r3, r0
 223 003a 87F80431 		strb	r3, [r7, #260]
 143:main.c        ****     CyDmaTdSetConfiguration(DMA_1_TD[0], 8, CY_DMA_DISABLE_TD, 0);
 224              		.loc 1 143 0
 225 003e 97F80431 		ldrb	r3, [r7, #260]	@ zero_extendqisi2
 226 0042 1846     		mov	r0, r3
 227 0044 0821     		movs	r1, #8
 228 0046 FE22     		movs	r2, #254
 229 0048 0023     		movs	r3, #0
 230 004a FFF7FEFF 		bl	CyDmaTdSetConfiguration
 144:main.c        ****     CyDmaTdSetAddress(DMA_1_TD[0], LO16((uint32)ADC_DelSig_1_DEC_SAMP_PTR), LO16((uint32)Filter_1_S
 231              		.loc 1 144 0
 232 004e 97F80431 		ldrb	r3, [r7, #260]	@ zero_extendqisi2
 233 0052 1846     		mov	r0, r3
 234 0054 44F61061 		movw	r1, #19984
 235 0058 4CF2A072 		movw	r2, #51104
 236 005c FFF7FEFF 		bl	CyDmaTdSetAddress
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccP8kvyP.s 			page 8


 145:main.c        ****     CyDmaChSetInitialTd(DMA_1_Chan, DMA_1_TD[0]);
 237              		.loc 1 145 0
 238 0060 97F80431 		ldrb	r3, [r7, #260]	@ zero_extendqisi2
 239 0064 97F80721 		ldrb	r2, [r7, #263]	@ zero_extendqisi2
 240 0068 1046     		mov	r0, r2
 241 006a 1946     		mov	r1, r3
 242 006c FFF7FEFF 		bl	CyDmaChSetInitialTd
 146:main.c        ****     CyDmaChEnable(DMA_1_Chan, 1);
 243              		.loc 1 146 0
 244 0070 97F80731 		ldrb	r3, [r7, #263]	@ zero_extendqisi2
 245 0074 1846     		mov	r0, r3
 246 0076 0121     		movs	r1, #1
 247 0078 FFF7FEFF 		bl	CyDmaChEnable
 147:main.c        ****     const signed char * local_write[64];
 148:main.c        ****     sprintf((char *) local_write, "In DMA CONFIG  ");
 248              		.loc 1 148 0
 249 007c 3B1D     		adds	r3, r7, #4
 250 007e 094A     		ldr	r2, .L6
 251 0080 1C46     		mov	r4, r3
 252 0082 1346     		mov	r3, r2
 253 0084 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 254 0086 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 149:main.c        ****     vSerialPutString(pxPort, (const signed char *) local_write, 64);
 255              		.loc 1 149 0
 256 008a 074B     		ldr	r3, .L6+4
 257 008c 1A68     		ldr	r2, [r3]
 258 008e 3B1D     		adds	r3, r7, #4
 259 0090 1046     		mov	r0, r2
 260 0092 1946     		mov	r1, r3
 261 0094 4022     		movs	r2, #64
 262 0096 FFF7FEFF 		bl	vSerialPutString
 150:main.c        **** }
 263              		.loc 1 150 0
 264 009a 07F58677 		add	r7, r7, #268
 265              		.cfi_def_cfa_offset 12
 266 009e BD46     		mov	sp, r7
 267              		.cfi_def_cfa_register 13
 268              		@ sp needed
 269 00a0 90BD     		pop	{r4, r7, pc}
 270              	.L7:
 271 00a2 00BF     		.align	2
 272              	.L6:
 273 00a4 60000000 		.word	.LC4
 274 00a8 00000000 		.word	pxPort
 275              		.cfi_endproc
 276              	.LFE69:
 277              		.size	DMA_config, .-DMA_config
 278              		.section	.rodata
 279              		.align	2
 280              	.LC5:
 281 0070 62756666 		.ascii	"buffer read as %s\012\000"
 281      65722072 
 281      65616420 
 281      61732025 
 281      730A00
 282 0083 00       		.align	2
 283              	.LC6:
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccP8kvyP.s 			page 9


 284 0084 6C656674 		.ascii	"left inc: %i\012right inc: %i\012\000"
 284      20696E63 
 284      3A202569 
 284      0A726967 
 284      68742069 
 285              		.align	2
 286              	.LC7:
 287 00a0 4B702056 		.ascii	"Kp Value: %f\000"
 287      616C7565 
 287      3A202566 
 287      00
 288              		.section	.text.receive_data,"ax",%progbits
 289              		.align	2
 290              		.global	receive_data
 291              		.thumb
 292              		.thumb_func
 293              		.type	receive_data, %function
 294              	receive_data:
 295              	.LFB70:
 151:main.c        **** 
 152:main.c        **** void receive_data( void *p ) {
 296              		.loc 1 152 0
 297              		.cfi_startproc
 298              		@ args = 0, pretend = 0, frame = 288
 299              		@ frame_needed = 1, uses_anonymous_args = 0
 300 0000 80B5     		push	{r7, lr}
 301              		.cfi_def_cfa_offset 8
 302              		.cfi_offset 7, -8
 303              		.cfi_offset 14, -4
 304 0002 CAB0     		sub	sp, sp, #296
 305              		.cfi_def_cfa_offset 304
 306 0004 02AF     		add	r7, sp, #8
 307              		.cfi_def_cfa 7, 296
 308 0006 3B1D     		adds	r3, r7, #4
 309 0008 1860     		str	r0, [r3]
 153:main.c        ****     
 154:main.c        ****     p = NULL;
 310              		.loc 1 154 0
 311 000a 3B1D     		adds	r3, r7, #4
 312 000c 0022     		movs	r2, #0
 313 000e 1A60     		str	r2, [r3]
 155:main.c        ****     
 156:main.c        ****     const signed char * local_write[64];
 157:main.c        ****     int i = 0;
 314              		.loc 1 157 0
 315 0010 0023     		movs	r3, #0
 316 0012 C7F81C31 		str	r3, [r7, #284]
 158:main.c        ****     int go = 0;
 317              		.loc 1 158 0
 318 0016 0023     		movs	r3, #0
 319 0018 C7F81831 		str	r3, [r7, #280]
 159:main.c        ****     signed char type = 0;
 320              		.loc 1 159 0
 321 001c 0023     		movs	r3, #0
 322 001e 87F81731 		strb	r3, [r7, #279]
 323              	.L19:
 160:main.c        ****     char temp[10];
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccP8kvyP.s 			page 10


 161:main.c        ****     while(1) {
 162:main.c        ****         if (pdTRUE == xSerialGetChar(pxPort, &rx_receive, comRX_BLOCK_TIME)) {
 324              		.loc 1 162 0
 325 0022 6D4B     		ldr	r3, .L20
 326 0024 1B68     		ldr	r3, [r3]
 327 0026 1846     		mov	r0, r3
 328 0028 6C49     		ldr	r1, .L20+4
 329 002a 4FF6FF72 		movw	r2, #65535
 330 002e FFF7FEFF 		bl	xSerialGetChar
 331 0032 0346     		mov	r3, r0
 332 0034 012B     		cmp	r3, #1
 333 0036 40F0CE80 		bne	.L9
 163:main.c        ****             type = rx_receive;
 334              		.loc 1 163 0
 335 003a 684B     		ldr	r3, .L20+4
 336 003c 1B78     		ldrb	r3, [r3]
 337 003e 87F81731 		strb	r3, [r7, #279]
 164:main.c        ****             if(xSemaphoreTake(gatekeeper, 50000)) {
 338              		.loc 1 164 0
 339 0042 674B     		ldr	r3, .L20+8
 340 0044 1B68     		ldr	r3, [r3]
 341 0046 1846     		mov	r0, r3
 342 0048 4CF25031 		movw	r1, #50000
 343 004c FFF7FEFF 		bl	xQueueSemaphoreTake
 344 0050 0346     		mov	r3, r0
 345 0052 002B     		cmp	r3, #0
 346 0054 00F0BF80 		beq	.L9
 165:main.c        ****                 if(type=='1'){
 347              		.loc 1 165 0
 348 0058 97F91731 		ldrsb	r3, [r7, #279]
 349 005c 312B     		cmp	r3, #49
 350 005e 45D1     		bne	.L10
 166:main.c        ****                     for(i=0;i<8;i++){
 351              		.loc 1 166 0
 352 0060 0023     		movs	r3, #0
 353 0062 C7F81C31 		str	r3, [r7, #284]
 354 0066 15E0     		b	.L11
 355              	.L12:
 167:main.c        ****                         xSerialGetChar(pxPort, &rx_receive, comRX_BLOCK_TIME);
 356              		.loc 1 167 0 discriminator 3
 357 0068 5B4B     		ldr	r3, .L20
 358 006a 1B68     		ldr	r3, [r3]
 359 006c 1846     		mov	r0, r3
 360 006e 5B49     		ldr	r1, .L20+4
 361 0070 4FF6FF72 		movw	r2, #65535
 362 0074 FFF7FEFF 		bl	xSerialGetChar
 168:main.c        ****                         buffer[i] = rx_receive;
 363              		.loc 1 168 0 discriminator 3
 364 0078 584B     		ldr	r3, .L20+4
 365 007a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 366 007c D9B2     		uxtb	r1, r3
 367 007e 594A     		ldr	r2, .L20+12
 368 0080 D7F81C31 		ldr	r3, [r7, #284]
 369 0084 1344     		add	r3, r3, r2
 370 0086 0A46     		mov	r2, r1
 371 0088 1A70     		strb	r2, [r3]
 166:main.c        ****                     for(i=0;i<8;i++){
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccP8kvyP.s 			page 11


 372              		.loc 1 166 0 discriminator 3
 373 008a D7F81C31 		ldr	r3, [r7, #284]
 374 008e 0133     		adds	r3, r3, #1
 375 0090 C7F81C31 		str	r3, [r7, #284]
 376              	.L11:
 166:main.c        ****                     for(i=0;i<8;i++){
 377              		.loc 1 166 0 is_stmt 0 discriminator 1
 378 0094 D7F81C31 		ldr	r3, [r7, #284]
 379 0098 072B     		cmp	r3, #7
 380 009a E5DD     		ble	.L12
 169:main.c        ****                     }
 170:main.c        ****                     sprintf((char *) local_write, "buffer read as %s\n", buffer);
 381              		.loc 1 170 0 is_stmt 1
 382 009c 07F11403 		add	r3, r7, #20
 383 00a0 1846     		mov	r0, r3
 384 00a2 5149     		ldr	r1, .L20+16
 385 00a4 4F4A     		ldr	r2, .L20+12
 386 00a6 FFF7FEFF 		bl	sprintf
 171:main.c        ****                     vSerialPutString(pxPort, (const signed char *) local_write, 64);
 387              		.loc 1 171 0
 388 00aa 4B4B     		ldr	r3, .L20
 389 00ac 1A68     		ldr	r2, [r3]
 390 00ae 07F11403 		add	r3, r7, #20
 391 00b2 1046     		mov	r0, r2
 392 00b4 1946     		mov	r1, r3
 393 00b6 4022     		movs	r2, #64
 394 00b8 FFF7FEFF 		bl	vSerialPutString
 172:main.c        ****                     update_inc( &left_wheel, &right_wheel, buffer);
 395              		.loc 1 172 0
 396 00bc 4B48     		ldr	r0, .L20+20
 397 00be 4C49     		ldr	r1, .L20+24
 398 00c0 484A     		ldr	r2, .L20+12
 399 00c2 FFF7FEFF 		bl	update_inc
 173:main.c        ****                     sprintf((char *) local_write, "left inc: %i\nright inc: %i\n", left_wheel.inc, 
 400              		.loc 1 173 0
 401 00c6 494B     		ldr	r3, .L20+20
 402 00c8 9A69     		ldr	r2, [r3, #24]
 403 00ca 494B     		ldr	r3, .L20+24
 404 00cc 9B69     		ldr	r3, [r3, #24]
 405 00ce 07F11401 		add	r1, r7, #20
 406 00d2 0846     		mov	r0, r1
 407 00d4 4749     		ldr	r1, .L20+28
 408 00d6 FFF7FEFF 		bl	sprintf
 174:main.c        ****                     vSerialPutString(pxPort, (const signed char *) local_write, 64);
 409              		.loc 1 174 0
 410 00da 3F4B     		ldr	r3, .L20
 411 00dc 1A68     		ldr	r2, [r3]
 412 00de 07F11403 		add	r3, r7, #20
 413 00e2 1046     		mov	r0, r2
 414 00e4 1946     		mov	r1, r3
 415 00e6 4022     		movs	r2, #64
 416 00e8 FFF7FEFF 		bl	vSerialPutString
 417              	.L10:
 175:main.c        ****                 }
 176:main.c        ****                 if(type=='2'){
 418              		.loc 1 176 0
 419 00ec 97F91731 		ldrsb	r3, [r7, #279]
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccP8kvyP.s 			page 12


 420 00f0 322B     		cmp	r3, #50
 421 00f2 01D1     		bne	.L13
 177:main.c        ****                     CySoftwareReset();
 422              		.loc 1 177 0
 423 00f4 FFF7FEFF 		bl	CySoftwareReset
 424              	.L13:
 178:main.c        ****                 }  
 179:main.c        ****                 if (type=='3'){
 425              		.loc 1 179 0
 426 00f8 97F91731 		ldrsb	r3, [r7, #279]
 427 00fc 332B     		cmp	r3, #51
 428 00fe 46D1     		bne	.L14
 180:main.c        ****                     for(i=0;i<8;i++){
 429              		.loc 1 180 0
 430 0100 0023     		movs	r3, #0
 431 0102 C7F81C31 		str	r3, [r7, #284]
 432 0106 15E0     		b	.L15
 433              	.L16:
 181:main.c        ****                         xSerialGetChar(pxPort, &rx_receive, comRX_BLOCK_TIME);
 434              		.loc 1 181 0 discriminator 3
 435 0108 334B     		ldr	r3, .L20
 436 010a 1B68     		ldr	r3, [r3]
 437 010c 1846     		mov	r0, r3
 438 010e 3349     		ldr	r1, .L20+4
 439 0110 4FF6FF72 		movw	r2, #65535
 440 0114 FFF7FEFF 		bl	xSerialGetChar
 182:main.c        ****                         buffer[i] = rx_receive;
 441              		.loc 1 182 0 discriminator 3
 442 0118 304B     		ldr	r3, .L20+4
 443 011a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 444 011c D9B2     		uxtb	r1, r3
 445 011e 314A     		ldr	r2, .L20+12
 446 0120 D7F81C31 		ldr	r3, [r7, #284]
 447 0124 1344     		add	r3, r3, r2
 448 0126 0A46     		mov	r2, r1
 449 0128 1A70     		strb	r2, [r3]
 180:main.c        ****                     for(i=0;i<8;i++){
 450              		.loc 1 180 0 discriminator 3
 451 012a D7F81C31 		ldr	r3, [r7, #284]
 452 012e 0133     		adds	r3, r3, #1
 453 0130 C7F81C31 		str	r3, [r7, #284]
 454              	.L15:
 180:main.c        ****                     for(i=0;i<8;i++){
 455              		.loc 1 180 0 is_stmt 0 discriminator 1
 456 0134 D7F81C31 		ldr	r3, [r7, #284]
 457 0138 072B     		cmp	r3, #7
 458 013a E5DD     		ble	.L16
 183:main.c        ****                     }
 184:main.c        ****                     sprintf((char *) local_write, "buffer read as %s\n", buffer);
 459              		.loc 1 184 0 is_stmt 1
 460 013c 07F11403 		add	r3, r7, #20
 461 0140 1846     		mov	r0, r3
 462 0142 2949     		ldr	r1, .L20+16
 463 0144 274A     		ldr	r2, .L20+12
 464 0146 FFF7FEFF 		bl	sprintf
 185:main.c        ****                     vSerialPutString(pxPort, (const signed char *) local_write, 64);
 465              		.loc 1 185 0
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccP8kvyP.s 			page 13


 466 014a 234B     		ldr	r3, .L20
 467 014c 1A68     		ldr	r2, [r3]
 468 014e 07F11403 		add	r3, r7, #20
 469 0152 1046     		mov	r0, r2
 470 0154 1946     		mov	r1, r3
 471 0156 4022     		movs	r2, #64
 472 0158 FFF7FEFF 		bl	vSerialPutString
 186:main.c        ****                     update_k( &k, buffer);
 473              		.loc 1 186 0
 474 015c 2648     		ldr	r0, .L20+32
 475 015e 2149     		ldr	r1, .L20+12
 476 0160 FFF7FEFF 		bl	update_k
 187:main.c        ****                     snprintf((char *) local_write,64, "Kp Value: %f", k.Kp);
 477              		.loc 1 187 0
 478 0164 244B     		ldr	r3, .L20+32
 479 0166 D3E90223 		ldrd	r2, [r3, #8]
 480 016a 07F11401 		add	r1, r7, #20
 481 016e CDE90023 		strd	r2, [sp]
 482 0172 0846     		mov	r0, r1
 483 0174 4021     		movs	r1, #64
 484 0176 214A     		ldr	r2, .L20+36
 485 0178 FFF7FEFF 		bl	snprintf
 188:main.c        ****                     
 189:main.c        ****                     vSerialPutString(pxPort, (const signed char *) local_write, 64);
 486              		.loc 1 189 0
 487 017c 164B     		ldr	r3, .L20
 488 017e 1A68     		ldr	r2, [r3]
 489 0180 07F11403 		add	r3, r7, #20
 490 0184 1046     		mov	r0, r2
 491 0186 1946     		mov	r1, r3
 492 0188 4022     		movs	r2, #64
 493 018a FFF7FEFF 		bl	vSerialPutString
 494              	.L14:
 190:main.c        ****                     
 191:main.c        ****                 }
 192:main.c        ****                 for (i=0; i<65; i++) {
 495              		.loc 1 192 0
 496 018e 0023     		movs	r3, #0
 497 0190 C7F81C31 		str	r3, [r7, #284]
 498 0194 0AE0     		b	.L17
 499              	.L18:
 193:main.c        ****                     buffer[i] = ' ';
 500              		.loc 1 193 0 discriminator 3
 501 0196 134A     		ldr	r2, .L20+12
 502 0198 D7F81C31 		ldr	r3, [r7, #284]
 503 019c 1344     		add	r3, r3, r2
 504 019e 2022     		movs	r2, #32
 505 01a0 1A70     		strb	r2, [r3]
 192:main.c        ****                     buffer[i] = ' ';
 506              		.loc 1 192 0 discriminator 3
 507 01a2 D7F81C31 		ldr	r3, [r7, #284]
 508 01a6 0133     		adds	r3, r3, #1
 509 01a8 C7F81C31 		str	r3, [r7, #284]
 510              	.L17:
 192:main.c        ****                     buffer[i] = ' ';
 511              		.loc 1 192 0 is_stmt 0 discriminator 1
 512 01ac D7F81C31 		ldr	r3, [r7, #284]
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccP8kvyP.s 			page 14


 513 01b0 402B     		cmp	r3, #64
 514 01b2 F0DD     		ble	.L18
 194:main.c        ****                 }
 195:main.c        ****                 go = 0;
 515              		.loc 1 195 0 is_stmt 1
 516 01b4 0023     		movs	r3, #0
 517 01b6 C7F81831 		str	r3, [r7, #280]
 196:main.c        ****                 i = 0;
 518              		.loc 1 196 0
 519 01ba 0023     		movs	r3, #0
 520 01bc C7F81C31 		str	r3, [r7, #284]
 197:main.c        ****                 type=0;                   
 521              		.loc 1 197 0
 522 01c0 0023     		movs	r3, #0
 523 01c2 87F81731 		strb	r3, [r7, #279]
 198:main.c        ****                 xSemaphoreGive(gatekeeper);
 524              		.loc 1 198 0
 525 01c6 064B     		ldr	r3, .L20+8
 526 01c8 1B68     		ldr	r3, [r3]
 527 01ca 1846     		mov	r0, r3
 528 01cc 0021     		movs	r1, #0
 529 01ce 0022     		movs	r2, #0
 530 01d0 0023     		movs	r3, #0
 531 01d2 FFF7FEFF 		bl	xQueueGenericSend
 532              	.L9:
 199:main.c        ****             }
 200:main.c        ****         }
 201:main.c        ****     }
 533              		.loc 1 201 0
 534 01d6 24E7     		b	.L19
 535              	.L21:
 536              		.align	2
 537              	.L20:
 538 01d8 00000000 		.word	pxPort
 539 01dc 00000000 		.word	rx_receive
 540 01e0 00000000 		.word	gatekeeper
 541 01e4 00000000 		.word	buffer
 542 01e8 70000000 		.word	.LC5
 543 01ec 00000000 		.word	left_wheel
 544 01f0 00000000 		.word	right_wheel
 545 01f4 84000000 		.word	.LC6
 546 01f8 00000000 		.word	k
 547 01fc A0000000 		.word	.LC7
 548              		.cfi_endproc
 549              	.LFE70:
 550              		.size	receive_data, .-receive_data
 551              		.section	.rodata
 552 00ad 000000   		.align	2
 553              	.LC8:
 554 00b0 6C656674 		.ascii	"left wheel inc: %li\012\000"
 554      20776865 
 554      656C2069 
 554      6E633A20 
 554      256C690A 
 555 00c5 000000   		.align	2
 556              	.LC9:
 557 00c8 46696C74 		.ascii	"Filter Read: %u\012\000"
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccP8kvyP.s 			page 15


 557      65722052 
 557      6561643A 
 557      2025750A 
 557      00
 558 00d9 000000   		.section	.text.PID_initialise,"ax",%progbits
 559              		.align	2
 560              		.global	PID_initialise
 561              		.thumb
 562              		.thumb_func
 563              		.type	PID_initialise, %function
 564              	PID_initialise:
 565              	.LFB71:
 202:main.c        **** }
 203:main.c        **** 
 204:main.c        **** void PID_initialise( void *p ) {
 566              		.loc 1 204 0
 567              		.cfi_startproc
 568              		@ args = 0, pretend = 0, frame = 264
 569              		@ frame_needed = 1, uses_anonymous_args = 0
 570 0000 80B5     		push	{r7, lr}
 571              		.cfi_def_cfa_offset 8
 572              		.cfi_offset 7, -8
 573              		.cfi_offset 14, -4
 574 0002 C2B0     		sub	sp, sp, #264
 575              		.cfi_def_cfa_offset 272
 576 0004 00AF     		add	r7, sp, #0
 577              		.cfi_def_cfa_register 7
 578 0006 3B1D     		adds	r3, r7, #4
 579 0008 1860     		str	r0, [r3]
 205:main.c        ****     
 206:main.c        ****     p = NULL;
 580              		.loc 1 206 0
 581 000a 3B1D     		adds	r3, r7, #4
 582 000c 0022     		movs	r2, #0
 583 000e 1A60     		str	r2, [r3]
 207:main.c        ****         
 208:main.c        ****     initialise_wheel_data(&left_wheel);
 584              		.loc 1 208 0
 585 0010 2C48     		ldr	r0, .L25
 586 0012 FFF7FEFF 		bl	initialise_wheel_data
 209:main.c        ****     initialise_wheel_data(&right_wheel);
 587              		.loc 1 209 0
 588 0016 2C48     		ldr	r0, .L25+4
 589 0018 FFF7FEFF 		bl	initialise_wheel_data
 210:main.c        ****     
 211:main.c        ****     k.Kp = 40;
 590              		.loc 1 211 0
 591 001c 2B49     		ldr	r1, .L25+8
 592 001e 4FF00002 		mov	r2, #0
 593 0022 2B4B     		ldr	r3, .L25+12
 594 0024 C1E90223 		strd	r2, [r1, #8]
 212:main.c        ****     k.Ki = 0;
 595              		.loc 1 212 0
 596 0028 2849     		ldr	r1, .L25+8
 597 002a 4FF00002 		mov	r2, #0
 598 002e 4FF00003 		mov	r3, #0
 599 0032 C1E90023 		strd	r2, [r1]
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccP8kvyP.s 			page 16


 213:main.c        ****     k.Kd = 20;
 600              		.loc 1 213 0
 601 0036 2549     		ldr	r1, .L25+8
 602 0038 4FF00002 		mov	r2, #0
 603 003c 254B     		ldr	r3, .L25+16
 604 003e C1E90423 		strd	r2, [r1, #16]
 605              	.L24:
 214:main.c        ****     
 215:main.c        ****     signed char *local_write[64];  
 216:main.c        ****     
 217:main.c        ****     while(1) {
 218:main.c        ****     	if(xSemaphoreTake(gatekeeper, 50000)) {              // wait until semaphore is free:
 606              		.loc 1 218 0
 607 0042 254B     		ldr	r3, .L25+20
 608 0044 1B68     		ldr	r3, [r3]
 609 0046 1846     		mov	r0, r3
 610 0048 4CF25031 		movw	r1, #50000
 611 004c FFF7FEFF 		bl	xQueueSemaphoreTake
 612 0050 0346     		mov	r3, r0
 613 0052 002B     		cmp	r3, #0
 614 0054 31D0     		beq	.L23
 219:main.c        ****             mov_update_error(&left_wheel, &right_wheel);    // update error values
 615              		.loc 1 219 0
 616 0056 1B48     		ldr	r0, .L25
 617 0058 1B49     		ldr	r1, .L25+4
 618 005a FFF7FEFF 		bl	mov_update_error
 220:main.c        ****                 sprintf((char *) local_write, "left wheel inc: %li\n", left_wheel.cur_dest);
 619              		.loc 1 220 0
 620 005e 194B     		ldr	r3, .L25
 621 0060 5B68     		ldr	r3, [r3, #4]
 622 0062 07F10802 		add	r2, r7, #8
 623 0066 1046     		mov	r0, r2
 624 0068 1C49     		ldr	r1, .L25+24
 625 006a 1A46     		mov	r2, r3
 626 006c FFF7FEFF 		bl	sprintf
 221:main.c        ****                 //vSerialPutString(pxPort, (signed char *) local_write, 64);
 222:main.c        ****             mov_get_PID(&left_wheel, &right_wheel, &k);     // calculate wheel voltage from errors 
 627              		.loc 1 222 0
 628 0070 1448     		ldr	r0, .L25
 629 0072 1549     		ldr	r1, .L25+4
 630 0074 154A     		ldr	r2, .L25+8
 631 0076 FFF7FEFF 		bl	mov_get_PID
 223:main.c        ****             
 224:main.c        ****             mov_Adj_Volt(&left_wheel, &right_wheel);        // adjust the voltage of the wheels
 632              		.loc 1 224 0
 633 007a 1248     		ldr	r0, .L25
 634 007c 1249     		ldr	r1, .L25+4
 635 007e FFF7FEFF 		bl	mov_Adj_Volt
 225:main.c        ****             sprintf((char *) local_write, "Filter Read: %u\n", Filter_1_Read8(Filter_1_CHANNEL_A));
 636              		.loc 1 225 0
 637 0082 0020     		movs	r0, #0
 638 0084 FFF7FEFF 		bl	Filter_1_Read8
 639 0088 0346     		mov	r3, r0
 640 008a 1A46     		mov	r2, r3
 641 008c 07F10803 		add	r3, r7, #8
 642 0090 1846     		mov	r0, r3
 643 0092 1349     		ldr	r1, .L25+28
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccP8kvyP.s 			page 17


 644 0094 FFF7FEFF 		bl	sprintf
 226:main.c        ****             vSerialPutString(pxPort, (signed char *) local_write, 64);
 645              		.loc 1 226 0
 646 0098 124B     		ldr	r3, .L25+32
 647 009a 1A68     		ldr	r2, [r3]
 648 009c 07F10803 		add	r3, r7, #8
 649 00a0 1046     		mov	r0, r2
 650 00a2 1946     		mov	r1, r3
 651 00a4 4022     		movs	r2, #64
 652 00a6 FFF7FEFF 		bl	vSerialPutString
 227:main.c        **** 			xSemaphoreGive(gatekeeper);                     // give the semaphore back
 653              		.loc 1 227 0
 654 00aa 0B4B     		ldr	r3, .L25+20
 655 00ac 1B68     		ldr	r3, [r3]
 656 00ae 1846     		mov	r0, r3
 657 00b0 0021     		movs	r1, #0
 658 00b2 0022     		movs	r2, #0
 659 00b4 0023     		movs	r3, #0
 660 00b6 FFF7FEFF 		bl	xQueueGenericSend
 661              	.L23:
 228:main.c        ****     	}
 229:main.c        ****         vTaskDelay(10);                                     // wait 10ms before going again
 662              		.loc 1 229 0
 663 00ba 0A20     		movs	r0, #10
 664 00bc FFF7FEFF 		bl	vTaskDelay
 230:main.c        ****     }
 665              		.loc 1 230 0
 666 00c0 BFE7     		b	.L24
 667              	.L26:
 668 00c2 00BF     		.align	2
 669              	.L25:
 670 00c4 00000000 		.word	left_wheel
 671 00c8 00000000 		.word	right_wheel
 672 00cc 00000000 		.word	k
 673 00d0 00004440 		.word	1078198272
 674 00d4 00003440 		.word	1077149696
 675 00d8 00000000 		.word	gatekeeper
 676 00dc B0000000 		.word	.LC8
 677 00e0 C8000000 		.word	.LC9
 678 00e4 00000000 		.word	pxPort
 679              		.cfi_endproc
 680              	.LFE71:
 681              		.size	PID_initialise, .-PID_initialise
 682              		.section	.text.prvHardwareSetup,"ax",%progbits
 683              		.align	2
 684              		.thumb
 685              		.thumb_func
 686              		.type	prvHardwareSetup, %function
 687              	prvHardwareSetup:
 688              	.LFB72:
 231:main.c        **** }
 232:main.c        **** 
 233:main.c        **** void prvHardwareSetup( void ) {
 689              		.loc 1 233 0
 690              		.cfi_startproc
 691              		@ args = 0, pretend = 0, frame = 0
 692              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccP8kvyP.s 			page 18


 693 0000 80B5     		push	{r7, lr}
 694              		.cfi_def_cfa_offset 8
 695              		.cfi_offset 7, -8
 696              		.cfi_offset 14, -4
 697 0002 00AF     		add	r7, sp, #0
 698              		.cfi_def_cfa_register 7
 234:main.c        ****     
 235:main.c        ****     /* Port layer functions that need to be copied into the vector table. */
 236:main.c        ****     extern void xPortPendSVHandler( void );
 237:main.c        ****     extern void xPortSysTickHandler( void );
 238:main.c        ****     extern void vPortSVCHandler( void );
 239:main.c        ****     extern cyisraddress CyRamVectors[];
 240:main.c        **** 
 241:main.c        **** 	/* Install the OS Interrupt Handlers. */
 242:main.c        **** 	CyRamVectors[ 11 ] = ( cyisraddress ) vPortSVCHandler;
 699              		.loc 1 242 0
 700 0004 174B     		ldr	r3, .L29
 701 0006 184A     		ldr	r2, .L29+4
 702 0008 DA62     		str	r2, [r3, #44]
 243:main.c        **** 	CyRamVectors[ 14 ] = ( cyisraddress ) xPortPendSVHandler;
 703              		.loc 1 243 0
 704 000a 164B     		ldr	r3, .L29
 705 000c 174A     		ldr	r2, .L29+8
 706 000e 9A63     		str	r2, [r3, #56]
 244:main.c        **** 	CyRamVectors[ 15 ] = ( cyisraddress ) xPortSysTickHandler;
 707              		.loc 1 244 0
 708 0010 144B     		ldr	r3, .L29
 709 0012 174A     		ldr	r2, .L29+12
 710 0014 DA63     		str	r2, [r3, #60]
 245:main.c        **** 
 246:main.c        **** 	/* Start-up the shared peripherals. */
 247:main.c        ****     PWM_M1_Start();
 711              		.loc 1 247 0
 712 0016 FFF7FEFF 		bl	PWM_M1_Start
 248:main.c        ****     PWM_M2_Start();
 713              		.loc 1 248 0
 714 001a FFF7FEFF 		bl	PWM_M2_Start
 249:main.c        ****     M1Clock_Start();
 715              		.loc 1 249 0
 716 001e FFF7FEFF 		bl	M1Clock_Start
 250:main.c        ****     MClock_Start();
 717              		.loc 1 250 0
 718 0022 FFF7FEFF 		bl	MClock_Start
 251:main.c        ****     
 252:main.c        ****     M1QuadDec_Start();
 719              		.loc 1 252 0
 720 0026 FFF7FEFF 		bl	M1QuadDec_Start
 253:main.c        ****     M1QuadDec_Enable();
 721              		.loc 1 253 0
 722 002a FFF7FEFF 		bl	M1QuadDec_Enable
 254:main.c        ****     M1QuadDec_SetCounter(0);
 723              		.loc 1 254 0
 724 002e 0020     		movs	r0, #0
 725 0030 FFF7FEFF 		bl	M1QuadDec_SetCounter
 255:main.c        ****     
 256:main.c        ****     M2QuadDec_Start();
 726              		.loc 1 256 0
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccP8kvyP.s 			page 19


 727 0034 FFF7FEFF 		bl	M2QuadDec_Start
 257:main.c        ****     M2QuadDec_Enable();
 728              		.loc 1 257 0
 729 0038 FFF7FEFF 		bl	M2QuadDec_Enable
 258:main.c        ****     M2QuadDec_SetCounter(0);
 730              		.loc 1 258 0
 731 003c 0020     		movs	r0, #0
 732 003e FFF7FEFF 		bl	M2QuadDec_SetCounter
 259:main.c        **** 
 260:main.c        **** 	UART_1_Start();                         // Start the UART
 733              		.loc 1 260 0
 734 0042 FFF7FEFF 		bl	UART_1_Start
 261:main.c        ****     xSerialPortInitMinimal( 57600, 64 );    // Set the serial baud rate and buffer size in bytes
 735              		.loc 1 261 0
 736 0046 4FF46140 		mov	r0, #57600
 737 004a 4021     		movs	r1, #64
 738 004c FFF7FEFF 		bl	xSerialPortInitMinimal
 262:main.c        ****     
 263:main.c        ****     Timer_1_Start();
 739              		.loc 1 263 0
 740 0050 FFF7FEFF 		bl	Timer_1_Start
 264:main.c        **** 
 265:main.c        ****     /* Start up the master peripherals. */
 266:main.c        ****     if (isMaster){
 741              		.loc 1 266 0
 742 0054 074B     		ldr	r3, .L29+16
 743 0056 1B68     		ldr	r3, [r3]
 744 0058 002B     		cmp	r3, #0
 745 005a 02D0     		beq	.L28
 267:main.c        ****          Laser_Write(1);// turn on the laser
 746              		.loc 1 267 0
 747 005c 0120     		movs	r0, #1
 748 005e FFF7FEFF 		bl	Laser_Write
 749              	.L28:
 268:main.c        ****     }
 269:main.c        ****     
 270:main.c        ****     /* Start up the slave peripherals. */
 271:main.c        ****     if (~isMaster){
 272:main.c        ****     }
 273:main.c        **** }
 750              		.loc 1 273 0
 751 0062 80BD     		pop	{r7, pc}
 752              	.L30:
 753              		.align	2
 754              	.L29:
 755 0064 00000000 		.word	CyRamVectors
 756 0068 00000000 		.word	vPortSVCHandler
 757 006c 00000000 		.word	xPortPendSVHandler
 758 0070 00000000 		.word	xPortSysTickHandler
 759 0074 00000000 		.word	isMaster
 760              		.cfi_endproc
 761              	.LFE72:
 762              		.size	prvHardwareSetup, .-prvHardwareSetup
 763              		.section	.text.vApplicationStackOverflowHook,"ax",%progbits
 764              		.align	2
 765              		.global	vApplicationStackOverflowHook
 766              		.thumb
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccP8kvyP.s 			page 20


 767              		.thumb_func
 768              		.type	vApplicationStackOverflowHook, %function
 769              	vApplicationStackOverflowHook:
 770              	.LFB73:
 274:main.c        **** 
 275:main.c        **** 
 276:main.c        **** // DON'T TOUCH THESE (PART OF FREERTOS)
 277:main.c        **** void vApplicationStackOverflowHook( TaskHandle_t pxTask, char *pcTaskName ) {
 771              		.loc 1 277 0
 772              		.cfi_startproc
 773              		@ args = 0, pretend = 0, frame = 16
 774              		@ frame_needed = 1, uses_anonymous_args = 0
 775              		@ link register save eliminated.
 776 0000 80B4     		push	{r7}
 777              		.cfi_def_cfa_offset 4
 778              		.cfi_offset 7, -4
 779 0002 85B0     		sub	sp, sp, #20
 780              		.cfi_def_cfa_offset 24
 781 0004 00AF     		add	r7, sp, #0
 782              		.cfi_def_cfa_register 7
 783 0006 7860     		str	r0, [r7, #4]
 784 0008 3960     		str	r1, [r7]
 785              	.LBB6:
 786              	.LBB7:
 787              		.file 2 "..\\..\\FreeRTOS_Source\\portable\\GCC\\ARM_CM3/portmacro.h"
   1:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /*
   2:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * FreeRTOS Kernel V10.0.1
   3:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  *
   5:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * subject to the following conditions:
  11:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  12:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * copies or substantial portions of the Software.
  14:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  15:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  22:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * http://www.FreeRTOS.org
  23:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * http://aws.amazon.com/freertos
  24:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  25:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * 1 tab == 4 spaces!
  26:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  */
  27:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
  28:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
  29:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #ifndef PORTMACRO_H
  30:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define PORTMACRO_H
  31:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
  32:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #ifdef __cplusplus
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccP8kvyP.s 			page 21


  33:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** extern "C" {
  34:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
  35:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
  36:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------
  37:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * Port specific definitions.
  38:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  39:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * given hardware and compiler.
  41:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  42:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * These settings should not be altered.
  43:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  *-----------------------------------------------------------
  44:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  */
  45:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
  46:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /* Type definitions. */
  47:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portCHAR		char
  48:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portFLOAT		float
  49:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portDOUBLE		double
  50:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portLONG		long
  51:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portSHORT		short
  52:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portBASE_TYPE	long
  54:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
  55:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** typedef long BaseType_t;
  57:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** typedef unsigned long UBaseType_t;
  58:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
  59:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	typedef uint16_t TickType_t;
  61:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #else
  63:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	typedef uint32_t TickType_t;
  64:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
  66:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	not need to be guarded with a critical section. */
  68:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
  70:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  71:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
  72:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /* Architecture specifics. */
  73:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  77:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
  78:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /* Scheduler utilities. */
  79:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portYIELD() 															\
  80:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** {																				\
  81:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 																				\
  84:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile( "isb" );													\
  88:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** }
  89:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccP8kvyP.s 			page 22


  90:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  95:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
  96:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /* Critical section management. */
  97:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** extern void vPortEnterCritical( void );
  98:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** extern void vPortExitCritical( void );
  99:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 106:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 107:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 108:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** (which build with all the ports) will build. */
 111:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 114:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 115:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /* Tickless idle/low power functionality. */
 116:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 117:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 118:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 119:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
 120:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 121:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 122:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /* Architecture specific optimisations. */
 123:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 124:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 125:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
 126:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 127:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 128:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 129:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Generic helper function. */
 130:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 131:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	{
 132:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	uint8_t ucReturn;
 133:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 134:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 135:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 		return ucReturn;
 136:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	}
 137:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 138:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Check the configuration. */
 139:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 140:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 141:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	#endif
 142:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 143:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 144:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 145:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 146:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccP8kvyP.s 			page 23


 147:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	/*-----------------------------------------------------------*/
 148:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 149:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 150:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 151:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 152:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 153:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 154:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 155:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #ifdef configASSERT
 156:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 157:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 158:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
 159:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 160:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /* portNOP() is not required by this port. */
 161:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portNOP()
 162:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 163:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portINLINE	__inline
 164:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 165:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #ifndef portFORCE_INLINE
 166:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 167:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
 168:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 169:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 170:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** {
 171:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** uint32_t ulCurrentInterrupt;
 172:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** BaseType_t xReturn;
 173:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 174:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 175:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 176:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 177:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 178:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	{
 179:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 		xReturn = pdFALSE;
 180:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	}
 181:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	else
 182:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	{
 183:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 		xReturn = pdTRUE;
 184:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	}
 185:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 186:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	return xReturn;
 187:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** }
 188:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 189:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 190:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 191:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 192:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** {
 193:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** uint32_t ulNewBASEPRI;
 194:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 195:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile
 788              		.loc 2 195 0
 789              	@ 195 "..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h" 1
 790 000a 4FF0A003 			mov r3, #160												
 791 000e 83F31188 		msr basepri, r3											
 792 0012 BFF36F8F 		isb														
 793 0016 BFF34F8F 		dsb														
 794              	
 795              	@ 0 "" 2
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccP8kvyP.s 			page 24


 796              		.thumb
 797 001a FB60     		str	r3, [r7, #12]
 798              	.L32:
 799              	.LBE7:
 800              	.LBE6:
 278:main.c        **** 	/* The stack space has been execeeded for a task, considering allocating more. */
 279:main.c        **** 	taskDISABLE_INTERRUPTS();
 280:main.c        **** 	for( ;; );
 801              		.loc 1 280 0 discriminator 1
 802 001c FEE7     		b	.L32
 803              		.cfi_endproc
 804              	.LFE73:
 805              		.size	vApplicationStackOverflowHook, .-vApplicationStackOverflowHook
 806 001e 00BF     		.section	.text.vApplicationMallocFailedHook,"ax",%progbits
 807              		.align	2
 808              		.global	vApplicationMallocFailedHook
 809              		.thumb
 810              		.thumb_func
 811              		.type	vApplicationMallocFailedHook, %function
 812              	vApplicationMallocFailedHook:
 813              	.LFB74:
 281:main.c        **** }
 282:main.c        **** void vApplicationMallocFailedHook( void ) {
 814              		.loc 1 282 0
 815              		.cfi_startproc
 816              		@ args = 0, pretend = 0, frame = 8
 817              		@ frame_needed = 1, uses_anonymous_args = 0
 818              		@ link register save eliminated.
 819 0000 80B4     		push	{r7}
 820              		.cfi_def_cfa_offset 4
 821              		.cfi_offset 7, -4
 822 0002 83B0     		sub	sp, sp, #12
 823              		.cfi_def_cfa_offset 16
 824 0004 00AF     		add	r7, sp, #0
 825              		.cfi_def_cfa_register 7
 826              	.LBB8:
 827              	.LBB9:
 828              		.loc 2 195 0
 829              	@ 195 "..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h" 1
 830 0006 4FF0A003 			mov r3, #160												
 831 000a 83F31188 		msr basepri, r3											
 832 000e BFF36F8F 		isb														
 833 0012 BFF34F8F 		dsb														
 834              	
 835              	@ 0 "" 2
 836              		.thumb
 837 0016 7B60     		str	r3, [r7, #4]
 838              	.L34:
 839              	.LBE9:
 840              	.LBE8:
 283:main.c        **** 	/* The heap space has been execeeded. */
 284:main.c        **** 	taskDISABLE_INTERRUPTS();
 285:main.c        **** 	for( ;; );
 841              		.loc 1 285 0 discriminator 1
 842 0018 FEE7     		b	.L34
 843              		.cfi_endproc
 844              	.LFE74:
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccP8kvyP.s 			page 25


 845              		.size	vApplicationMallocFailedHook, .-vApplicationMallocFailedHook
 846 001a 00BF     		.text
 847              	.Letext0:
 848              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 849              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 850              		.file 5 "Generated_Source\\PSoC5/cytypes.h"
 851              		.file 6 "..\\..\\FreeRTOS_Source\\include/task.h"
 852              		.file 7 "..\\..\\FreeRTOS_Source\\include/queue.h"
 853              		.file 8 "..\\..\\FreeRTOS_Source\\include/semphr.h"
 854              		.file 9 "..\\..\\FreeRTOS_Source\\include/serial.h"
 855              		.file 10 "movement.h"
 856              		.file 11 "Generated_Source\\PSoC5/core_cm3.h"
 857              		.section	.debug_info,"",%progbits
 858              	.Ldebug_info0:
 859 0000 1B050000 		.4byte	0x51b
 860 0004 0400     		.2byte	0x4
 861 0006 00000000 		.4byte	.Ldebug_abbrev0
 862 000a 04       		.byte	0x4
 863 000b 01       		.uleb128 0x1
 864 000c 74010000 		.4byte	.LASF64
 865 0010 01       		.byte	0x1
 866 0011 8A030000 		.4byte	.LASF65
 867 0015 F1000000 		.4byte	.LASF66
 868 0019 00000000 		.4byte	.Ldebug_ranges0+0
 869 001d 00000000 		.4byte	0
 870 0021 00000000 		.4byte	.Ldebug_line0
 871 0025 02       		.uleb128 0x2
 872 0026 01       		.byte	0x1
 873 0027 06       		.byte	0x6
 874 0028 BA020000 		.4byte	.LASF0
 875 002c 03       		.uleb128 0x3
 876 002d 37020000 		.4byte	.LASF4
 877 0031 03       		.byte	0x3
 878 0032 1D       		.byte	0x1d
 879 0033 37000000 		.4byte	0x37
 880 0037 02       		.uleb128 0x2
 881 0038 01       		.byte	0x1
 882 0039 08       		.byte	0x8
 883 003a 6E020000 		.4byte	.LASF1
 884 003e 02       		.uleb128 0x2
 885 003f 02       		.byte	0x2
 886 0040 05       		.byte	0x5
 887 0041 72000000 		.4byte	.LASF2
 888 0045 02       		.uleb128 0x2
 889 0046 02       		.byte	0x2
 890 0047 07       		.byte	0x7
 891 0048 19030000 		.4byte	.LASF3
 892 004c 03       		.uleb128 0x3
 893 004d C7030000 		.4byte	.LASF5
 894 0051 03       		.byte	0x3
 895 0052 3F       		.byte	0x3f
 896 0053 57000000 		.4byte	0x57
 897 0057 02       		.uleb128 0x2
 898 0058 04       		.byte	0x4
 899 0059 05       		.byte	0x5
 900 005a 03040000 		.4byte	.LASF6
 901 005e 03       		.uleb128 0x3
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccP8kvyP.s 			page 26


 902 005f 5E000000 		.4byte	.LASF7
 903 0063 03       		.byte	0x3
 904 0064 41       		.byte	0x41
 905 0065 69000000 		.4byte	0x69
 906 0069 02       		.uleb128 0x2
 907 006a 04       		.byte	0x4
 908 006b 07       		.byte	0x7
 909 006c 96030000 		.4byte	.LASF8
 910 0070 02       		.uleb128 0x2
 911 0071 08       		.byte	0x8
 912 0072 05       		.byte	0x5
 913 0073 CC000000 		.4byte	.LASF9
 914 0077 02       		.uleb128 0x2
 915 0078 08       		.byte	0x8
 916 0079 07       		.byte	0x7
 917 007a C6020000 		.4byte	.LASF10
 918 007e 04       		.uleb128 0x4
 919 007f 04       		.byte	0x4
 920 0080 05       		.byte	0x5
 921 0081 696E7400 		.ascii	"int\000"
 922 0085 02       		.uleb128 0x2
 923 0086 04       		.byte	0x4
 924 0087 07       		.byte	0x7
 925 0088 E6020000 		.4byte	.LASF11
 926 008c 03       		.uleb128 0x3
 927 008d 83000000 		.4byte	.LASF12
 928 0091 04       		.byte	0x4
 929 0092 15       		.byte	0x15
 930 0093 2C000000 		.4byte	0x2c
 931 0097 03       		.uleb128 0x3
 932 0098 41030000 		.4byte	.LASF13
 933 009c 04       		.byte	0x4
 934 009d 2C       		.byte	0x2c
 935 009e 4C000000 		.4byte	0x4c
 936 00a2 03       		.uleb128 0x3
 937 00a3 DD020000 		.4byte	.LASF14
 938 00a7 04       		.byte	0x4
 939 00a8 2D       		.byte	0x2d
 940 00a9 5E000000 		.4byte	0x5e
 941 00ad 05       		.uleb128 0x5
 942 00ae 8B000000 		.4byte	.LASF15
 943 00b2 05       		.byte	0x5
 944 00b3 9201     		.2byte	0x192
 945 00b5 37000000 		.4byte	0x37
 946 00b9 05       		.uleb128 0x5
 947 00ba 7C000000 		.4byte	.LASF16
 948 00be 05       		.byte	0x5
 949 00bf 9301     		.2byte	0x193
 950 00c1 45000000 		.4byte	0x45
 951 00c5 05       		.uleb128 0x5
 952 00c6 83030000 		.4byte	.LASF17
 953 00ca 05       		.byte	0x5
 954 00cb 9401     		.2byte	0x194
 955 00cd 69000000 		.4byte	0x69
 956 00d1 02       		.uleb128 0x2
 957 00d2 04       		.byte	0x4
 958 00d3 04       		.byte	0x4
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccP8kvyP.s 			page 27


 959 00d4 C6000000 		.4byte	.LASF18
 960 00d8 02       		.uleb128 0x2
 961 00d9 08       		.byte	0x8
 962 00da 04       		.byte	0x4
 963 00db A8030000 		.4byte	.LASF19
 964 00df 02       		.uleb128 0x2
 965 00e0 01       		.byte	0x1
 966 00e1 08       		.byte	0x8
 967 00e2 2C030000 		.4byte	.LASF20
 968 00e6 05       		.uleb128 0x5
 969 00e7 91030000 		.4byte	.LASF21
 970 00eb 05       		.byte	0x5
 971 00ec 3C02     		.2byte	0x23c
 972 00ee F2000000 		.4byte	0xf2
 973 00f2 06       		.uleb128 0x6
 974 00f3 AD000000 		.4byte	0xad
 975 00f7 05       		.uleb128 0x5
 976 00f8 A3020000 		.4byte	.LASF22
 977 00fc 05       		.byte	0x5
 978 00fd 4E02     		.2byte	0x24e
 979 00ff 03010000 		.4byte	0x103
 980 0103 07       		.uleb128 0x7
 981 0104 04       		.byte	0x4
 982 0105 09010000 		.4byte	0x109
 983 0109 08       		.uleb128 0x8
 984 010a 02       		.uleb128 0x2
 985 010b 04       		.byte	0x4
 986 010c 07       		.byte	0x7
 987 010d 2F000000 		.4byte	.LASF23
 988 0111 09       		.uleb128 0x9
 989 0112 04       		.byte	0x4
 990 0113 07       		.uleb128 0x7
 991 0114 04       		.byte	0x4
 992 0115 DF000000 		.4byte	0xdf
 993 0119 03       		.uleb128 0x3
 994 011a F3020000 		.4byte	.LASF24
 995 011e 02       		.byte	0x2
 996 011f 38       		.byte	0x38
 997 0120 57000000 		.4byte	0x57
 998 0124 03       		.uleb128 0x3
 999 0125 7C020000 		.4byte	.LASF25
 1000 0129 02       		.byte	0x2
 1001 012a 3F       		.byte	0x3f
 1002 012b A2000000 		.4byte	0xa2
 1003 012f 03       		.uleb128 0x3
 1004 0130 4C000000 		.4byte	.LASF26
 1005 0134 06       		.byte	0x6
 1006 0135 3E       		.byte	0x3e
 1007 0136 3A010000 		.4byte	0x13a
 1008 013a 07       		.uleb128 0x7
 1009 013b 04       		.byte	0x4
 1010 013c 40010000 		.4byte	0x140
 1011 0140 0A       		.uleb128 0xa
 1012 0141 24020000 		.4byte	.LASF67
 1013 0145 03       		.uleb128 0x3
 1014 0146 D1030000 		.4byte	.LASF27
 1015 014a 07       		.byte	0x7
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccP8kvyP.s 			page 28


 1016 014b 2E       		.byte	0x2e
 1017 014c 11010000 		.4byte	0x111
 1018 0150 03       		.uleb128 0x3
 1019 0151 91020000 		.4byte	.LASF28
 1020 0155 08       		.byte	0x8
 1021 0156 25       		.byte	0x25
 1022 0157 45010000 		.4byte	0x145
 1023 015b 03       		.uleb128 0x3
 1024 015c 5C030000 		.4byte	.LASF29
 1025 0160 09       		.byte	0x9
 1026 0161 1F       		.byte	0x1f
 1027 0162 11010000 		.4byte	0x111
 1028 0166 0B       		.uleb128 0xb
 1029 0167 24       		.byte	0x24
 1030 0168 0A       		.byte	0xa
 1031 0169 03       		.byte	0x3
 1032 016a DB010000 		.4byte	0x1db
 1033 016e 0C       		.uleb128 0xc
 1034 016f B0020000 		.4byte	.LASF30
 1035 0173 0A       		.byte	0xa
 1036 0174 04       		.byte	0x4
 1037 0175 57000000 		.4byte	0x57
 1038 0179 00       		.byte	0
 1039 017a 0C       		.uleb128 0xc
 1040 017b 1D000000 		.4byte	.LASF31
 1041 017f 0A       		.byte	0xa
 1042 0180 05       		.byte	0x5
 1043 0181 57000000 		.4byte	0x57
 1044 0185 04       		.byte	0x4
 1045 0186 0C       		.uleb128 0xc
 1046 0187 0E030000 		.4byte	.LASF32
 1047 018b 0A       		.byte	0xa
 1048 018c 06       		.byte	0x6
 1049 018d 7E000000 		.4byte	0x7e
 1050 0191 08       		.byte	0x8
 1051 0192 0C       		.uleb128 0xc
 1052 0193 DF030000 		.4byte	.LASF33
 1053 0197 0A       		.byte	0xa
 1054 0198 07       		.byte	0x7
 1055 0199 7E000000 		.4byte	0x7e
 1056 019d 0C       		.byte	0xc
 1057 019e 0C       		.uleb128 0xc
 1058 019f 87020000 		.4byte	.LASF34
 1059 01a3 0A       		.byte	0xa
 1060 01a4 08       		.byte	0x8
 1061 01a5 7E000000 		.4byte	0x7e
 1062 01a9 10       		.byte	0x10
 1063 01aa 0C       		.uleb128 0xc
 1064 01ab 31030000 		.4byte	.LASF35
 1065 01af 0A       		.byte	0xa
 1066 01b0 09       		.byte	0x9
 1067 01b1 7E000000 		.4byte	0x7e
 1068 01b5 14       		.byte	0x14
 1069 01b6 0D       		.uleb128 0xd
 1070 01b7 696E6300 		.ascii	"inc\000"
 1071 01bb 0A       		.byte	0xa
 1072 01bc 0A       		.byte	0xa
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccP8kvyP.s 			page 29


 1073 01bd 7E000000 		.4byte	0x7e
 1074 01c1 18       		.byte	0x18
 1075 01c2 0C       		.uleb128 0xc
 1076 01c3 09030000 		.4byte	.LASF36
 1077 01c7 0A       		.byte	0xa
 1078 01c8 0B       		.byte	0xb
 1079 01c9 A2000000 		.4byte	0xa2
 1080 01cd 1C       		.byte	0x1c
 1081 01ce 0C       		.uleb128 0xc
 1082 01cf 02020000 		.4byte	.LASF37
 1083 01d3 0A       		.byte	0xa
 1084 01d4 0C       		.byte	0xc
 1085 01d5 A2000000 		.4byte	0xa2
 1086 01d9 20       		.byte	0x20
 1087 01da 00       		.byte	0
 1088 01db 03       		.uleb128 0x3
 1089 01dc 0C020000 		.4byte	.LASF38
 1090 01e0 0A       		.byte	0xa
 1091 01e1 0D       		.byte	0xd
 1092 01e2 66010000 		.4byte	0x166
 1093 01e6 0B       		.uleb128 0xb
 1094 01e7 18       		.byte	0x18
 1095 01e8 0A       		.byte	0xa
 1096 01e9 0F       		.byte	0xf
 1097 01ea 10020000 		.4byte	0x210
 1098 01ee 0D       		.uleb128 0xd
 1099 01ef 4B6900   		.ascii	"Ki\000"
 1100 01f2 0A       		.byte	0xa
 1101 01f3 10       		.byte	0x10
 1102 01f4 D8000000 		.4byte	0xd8
 1103 01f8 00       		.byte	0
 1104 01f9 0D       		.uleb128 0xd
 1105 01fa 4B7000   		.ascii	"Kp\000"
 1106 01fd 0A       		.byte	0xa
 1107 01fe 11       		.byte	0x11
 1108 01ff D8000000 		.4byte	0xd8
 1109 0203 08       		.byte	0x8
 1110 0204 0D       		.uleb128 0xd
 1111 0205 4B6400   		.ascii	"Kd\000"
 1112 0208 0A       		.byte	0xa
 1113 0209 12       		.byte	0x12
 1114 020a D8000000 		.4byte	0xd8
 1115 020e 10       		.byte	0x10
 1116 020f 00       		.byte	0
 1117 0210 03       		.uleb128 0x3
 1118 0211 69000000 		.4byte	.LASF39
 1119 0215 0A       		.byte	0xa
 1120 0216 13       		.byte	0x13
 1121 0217 E6010000 		.4byte	0x1e6
 1122 021b 0E       		.uleb128 0xe
 1123 021c E5030000 		.4byte	.LASF68
 1124 0220 02       		.byte	0x2
 1125 0221 BF       		.byte	0xbf
 1126 0222 03       		.byte	0x3
 1127 0223 33020000 		.4byte	0x233
 1128 0227 0F       		.uleb128 0xf
 1129 0228 33040000 		.4byte	.LASF69
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccP8kvyP.s 			page 30


 1130 022c 02       		.byte	0x2
 1131 022d C1       		.byte	0xc1
 1132 022e A2000000 		.4byte	0xa2
 1133 0232 00       		.byte	0
 1134 0233 10       		.uleb128 0x10
 1135 0234 59000000 		.4byte	.LASF70
 1136 0238 01       		.byte	0x1
 1137 0239 5B       		.byte	0x5b
 1138 023a 7E000000 		.4byte	0x7e
 1139 023e 00000000 		.4byte	.LFB68
 1140 0242 C4000000 		.4byte	.LFE68-.LFB68
 1141 0246 01       		.uleb128 0x1
 1142 0247 9C       		.byte	0x9c
 1143 0248 5C020000 		.4byte	0x25c
 1144 024c 11       		.uleb128 0x11
 1145 024d 72756E00 		.ascii	"run\000"
 1146 0251 01       		.byte	0x1
 1147 0252 5C       		.byte	0x5c
 1148 0253 5C020000 		.4byte	0x25c
 1149 0257 03       		.uleb128 0x3
 1150 0258 91       		.byte	0x91
 1151 0259 F07D     		.sleb128 -272
 1152 025b 00       		.byte	0
 1153 025c 12       		.uleb128 0x12
 1154 025d 6C020000 		.4byte	0x26c
 1155 0261 6C020000 		.4byte	0x26c
 1156 0265 13       		.uleb128 0x13
 1157 0266 0A010000 		.4byte	0x10a
 1158 026a 3F       		.byte	0x3f
 1159 026b 00       		.byte	0
 1160 026c 07       		.uleb128 0x7
 1161 026d 04       		.byte	0x4
 1162 026e 72020000 		.4byte	0x272
 1163 0272 14       		.uleb128 0x14
 1164 0273 25000000 		.4byte	0x25
 1165 0277 15       		.uleb128 0x15
 1166 0278 00000000 		.4byte	.LASF71
 1167 027c 01       		.byte	0x1
 1168 027d 79       		.byte	0x79
 1169 027e 00000000 		.4byte	.LFB69
 1170 0282 AC000000 		.4byte	.LFE69-.LFB69
 1171 0286 01       		.uleb128 0x1
 1172 0287 9C       		.byte	0x9c
 1173 0288 B8020000 		.4byte	0x2b8
 1174 028c 16       		.uleb128 0x16
 1175 028d DA000000 		.4byte	.LASF40
 1176 0291 01       		.byte	0x1
 1177 0292 88       		.byte	0x88
 1178 0293 AD000000 		.4byte	0xad
 1179 0297 02       		.uleb128 0x2
 1180 0298 91       		.byte	0x91
 1181 0299 6F       		.sleb128 -17
 1182 029a 16       		.uleb128 0x16
 1183 029b 26000000 		.4byte	.LASF41
 1184 029f 01       		.byte	0x1
 1185 02a0 89       		.byte	0x89
 1186 02a1 B8020000 		.4byte	0x2b8
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccP8kvyP.s 			page 31


 1187 02a5 02       		.uleb128 0x2
 1188 02a6 91       		.byte	0x91
 1189 02a7 6C       		.sleb128 -20
 1190 02a8 16       		.uleb128 0x16
 1191 02a9 E5000000 		.4byte	.LASF42
 1192 02ad 01       		.byte	0x1
 1193 02ae 93       		.byte	0x93
 1194 02af 5C020000 		.4byte	0x25c
 1195 02b3 03       		.uleb128 0x3
 1196 02b4 91       		.byte	0x91
 1197 02b5 EC7D     		.sleb128 -276
 1198 02b7 00       		.byte	0
 1199 02b8 12       		.uleb128 0x12
 1200 02b9 AD000000 		.4byte	0xad
 1201 02bd C8020000 		.4byte	0x2c8
 1202 02c1 13       		.uleb128 0x13
 1203 02c2 0A010000 		.4byte	0x10a
 1204 02c6 00       		.byte	0
 1205 02c7 00       		.byte	0
 1206 02c8 17       		.uleb128 0x17
 1207 02c9 0B000000 		.4byte	.LASF45
 1208 02cd 01       		.byte	0x1
 1209 02ce 98       		.byte	0x98
 1210 02cf 00000000 		.4byte	.LFB70
 1211 02d3 00020000 		.4byte	.LFE70-.LFB70
 1212 02d7 01       		.uleb128 0x1
 1213 02d8 9C       		.byte	0x9c
 1214 02d9 30030000 		.4byte	0x330
 1215 02dd 18       		.uleb128 0x18
 1216 02de 7000     		.ascii	"p\000"
 1217 02e0 01       		.byte	0x1
 1218 02e1 98       		.byte	0x98
 1219 02e2 11010000 		.4byte	0x111
 1220 02e6 03       		.uleb128 0x3
 1221 02e7 91       		.byte	0x91
 1222 02e8 DC7D     		.sleb128 -292
 1223 02ea 16       		.uleb128 0x16
 1224 02eb E5000000 		.4byte	.LASF42
 1225 02ef 01       		.byte	0x1
 1226 02f0 9C       		.byte	0x9c
 1227 02f1 5C020000 		.4byte	0x25c
 1228 02f5 03       		.uleb128 0x3
 1229 02f6 91       		.byte	0x91
 1230 02f7 EC7D     		.sleb128 -276
 1231 02f9 11       		.uleb128 0x11
 1232 02fa 6900     		.ascii	"i\000"
 1233 02fc 01       		.byte	0x1
 1234 02fd 9D       		.byte	0x9d
 1235 02fe 7E000000 		.4byte	0x7e
 1236 0302 02       		.uleb128 0x2
 1237 0303 91       		.byte	0x91
 1238 0304 74       		.sleb128 -12
 1239 0305 11       		.uleb128 0x11
 1240 0306 676F00   		.ascii	"go\000"
 1241 0309 01       		.byte	0x1
 1242 030a 9E       		.byte	0x9e
 1243 030b 7E000000 		.4byte	0x7e
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccP8kvyP.s 			page 32


 1244 030f 02       		.uleb128 0x2
 1245 0310 91       		.byte	0x91
 1246 0311 70       		.sleb128 -16
 1247 0312 16       		.uleb128 0x16
 1248 0313 3C030000 		.4byte	.LASF43
 1249 0317 01       		.byte	0x1
 1250 0318 9F       		.byte	0x9f
 1251 0319 25000000 		.4byte	0x25
 1252 031d 02       		.uleb128 0x2
 1253 031e 91       		.byte	0x91
 1254 031f 6F       		.sleb128 -17
 1255 0320 16       		.uleb128 0x16
 1256 0321 18000000 		.4byte	.LASF44
 1257 0325 01       		.byte	0x1
 1258 0326 A0       		.byte	0xa0
 1259 0327 30030000 		.4byte	0x330
 1260 032b 03       		.uleb128 0x3
 1261 032c 91       		.byte	0x91
 1262 032d E07D     		.sleb128 -288
 1263 032f 00       		.byte	0
 1264 0330 12       		.uleb128 0x12
 1265 0331 DF000000 		.4byte	0xdf
 1266 0335 40030000 		.4byte	0x340
 1267 0339 13       		.uleb128 0x13
 1268 033a 0A010000 		.4byte	0x10a
 1269 033e 09       		.byte	0x9
 1270 033f 00       		.byte	0
 1271 0340 17       		.uleb128 0x17
 1272 0341 24040000 		.4byte	.LASF46
 1273 0345 01       		.byte	0x1
 1274 0346 CC       		.byte	0xcc
 1275 0347 00000000 		.4byte	.LFB71
 1276 034b E8000000 		.4byte	.LFE71-.LFB71
 1277 034f 01       		.uleb128 0x1
 1278 0350 9C       		.byte	0x9c
 1279 0351 72030000 		.4byte	0x372
 1280 0355 18       		.uleb128 0x18
 1281 0356 7000     		.ascii	"p\000"
 1282 0358 01       		.byte	0x1
 1283 0359 CC       		.byte	0xcc
 1284 035a 11010000 		.4byte	0x111
 1285 035e 03       		.uleb128 0x3
 1286 035f 91       		.byte	0x91
 1287 0360 F47D     		.sleb128 -268
 1288 0362 16       		.uleb128 0x16
 1289 0363 E5000000 		.4byte	.LASF42
 1290 0367 01       		.byte	0x1
 1291 0368 D7       		.byte	0xd7
 1292 0369 72030000 		.4byte	0x372
 1293 036d 03       		.uleb128 0x3
 1294 036e 91       		.byte	0x91
 1295 036f F87D     		.sleb128 -264
 1296 0371 00       		.byte	0
 1297 0372 12       		.uleb128 0x12
 1298 0373 82030000 		.4byte	0x382
 1299 0377 82030000 		.4byte	0x382
 1300 037b 13       		.uleb128 0x13
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccP8kvyP.s 			page 33


 1301 037c 0A010000 		.4byte	0x10a
 1302 0380 3F       		.byte	0x3f
 1303 0381 00       		.byte	0
 1304 0382 07       		.uleb128 0x7
 1305 0383 04       		.byte	0x4
 1306 0384 25000000 		.4byte	0x25
 1307 0388 19       		.uleb128 0x19
 1308 0389 6B030000 		.4byte	.LASF72
 1309 038d 01       		.byte	0x1
 1310 038e E9       		.byte	0xe9
 1311 038f 00000000 		.4byte	.LFB72
 1312 0393 78000000 		.4byte	.LFE72-.LFB72
 1313 0397 01       		.uleb128 0x1
 1314 0398 9C       		.byte	0x9c
 1315 0399 BE030000 		.4byte	0x3be
 1316 039d 1A       		.uleb128 0x1a
 1317 039e 49030000 		.4byte	.LASF47
 1318 03a2 01       		.byte	0x1
 1319 03a3 EC       		.byte	0xec
 1320 03a4 1A       		.uleb128 0x1a
 1321 03a5 38000000 		.4byte	.LASF48
 1322 03a9 01       		.byte	0x1
 1323 03aa ED       		.byte	0xed
 1324 03ab 1A       		.uleb128 0x1a
 1325 03ac 91000000 		.4byte	.LASF49
 1326 03b0 01       		.byte	0x1
 1327 03b1 EE       		.byte	0xee
 1328 03b2 1B       		.uleb128 0x1b
 1329 03b3 17020000 		.4byte	.LASF55
 1330 03b7 01       		.byte	0x1
 1331 03b8 EF       		.byte	0xef
 1332 03b9 BE030000 		.4byte	0x3be
 1333 03bd 00       		.byte	0
 1334 03be 12       		.uleb128 0x12
 1335 03bf F7000000 		.4byte	0xf7
 1336 03c3 C9030000 		.4byte	0x3c9
 1337 03c7 1C       		.uleb128 0x1c
 1338 03c8 00       		.byte	0
 1339 03c9 1D       		.uleb128 0x1d
 1340 03ca A1000000 		.4byte	.LASF50
 1341 03ce 01       		.byte	0x1
 1342 03cf 1501     		.2byte	0x115
 1343 03d1 00000000 		.4byte	.LFB73
 1344 03d5 1E000000 		.4byte	.LFE73-.LFB73
 1345 03d9 01       		.uleb128 0x1
 1346 03da 9C       		.byte	0x9c
 1347 03db 21040000 		.4byte	0x421
 1348 03df 1E       		.uleb128 0x1e
 1349 03e0 BF000000 		.4byte	.LASF51
 1350 03e4 01       		.byte	0x1
 1351 03e5 1501     		.2byte	0x115
 1352 03e7 2F010000 		.4byte	0x12f
 1353 03eb 02       		.uleb128 0x2
 1354 03ec 91       		.byte	0x91
 1355 03ed 6C       		.sleb128 -20
 1356 03ee 1E       		.uleb128 0x1e
 1357 03ef 40040000 		.4byte	.LASF52
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccP8kvyP.s 			page 34


 1358 03f3 01       		.byte	0x1
 1359 03f4 1501     		.2byte	0x115
 1360 03f6 13010000 		.4byte	0x113
 1361 03fa 02       		.uleb128 0x2
 1362 03fb 91       		.byte	0x91
 1363 03fc 68       		.sleb128 -24
 1364 03fd 1F       		.uleb128 0x1f
 1365 03fe 1B020000 		.4byte	0x21b
 1366 0402 0A000000 		.4byte	.LBB6
 1367 0406 12000000 		.4byte	.LBE6-.LBB6
 1368 040a 01       		.byte	0x1
 1369 040b 1701     		.2byte	0x117
 1370 040d 20       		.uleb128 0x20
 1371 040e 0A000000 		.4byte	.LBB7
 1372 0412 12000000 		.4byte	.LBE7-.LBB7
 1373 0416 21       		.uleb128 0x21
 1374 0417 27020000 		.4byte	0x227
 1375 041b 02       		.uleb128 0x2
 1376 041c 91       		.byte	0x91
 1377 041d 74       		.sleb128 -12
 1378 041e 00       		.byte	0
 1379 041f 00       		.byte	0
 1380 0420 00       		.byte	0
 1381 0421 1D       		.uleb128 0x1d
 1382 0422 48020000 		.4byte	.LASF53
 1383 0426 01       		.byte	0x1
 1384 0427 1A01     		.2byte	0x11a
 1385 0429 00000000 		.4byte	.LFB74
 1386 042d 1A000000 		.4byte	.LFE74-.LFB74
 1387 0431 01       		.uleb128 0x1
 1388 0432 9C       		.byte	0x9c
 1389 0433 5B040000 		.4byte	0x45b
 1390 0437 1F       		.uleb128 0x1f
 1391 0438 1B020000 		.4byte	0x21b
 1392 043c 06000000 		.4byte	.LBB8
 1393 0440 12000000 		.4byte	.LBE8-.LBB8
 1394 0444 01       		.byte	0x1
 1395 0445 1C01     		.2byte	0x11c
 1396 0447 20       		.uleb128 0x20
 1397 0448 06000000 		.4byte	.LBB9
 1398 044c 12000000 		.4byte	.LBE9-.LBB9
 1399 0450 21       		.uleb128 0x21
 1400 0451 27020000 		.4byte	0x227
 1401 0455 02       		.uleb128 0x2
 1402 0456 91       		.byte	0x91
 1403 0457 74       		.sleb128 -12
 1404 0458 00       		.byte	0
 1405 0459 00       		.byte	0
 1406 045a 00       		.byte	0
 1407 045b 16       		.uleb128 0x16
 1408 045c 41020000 		.4byte	.LASF54
 1409 0460 01       		.byte	0x1
 1410 0461 49       		.byte	0x49
 1411 0462 5B010000 		.4byte	0x15b
 1412 0466 05       		.uleb128 0x5
 1413 0467 03       		.byte	0x3
 1414 0468 00000000 		.4byte	pxPort
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccP8kvyP.s 			page 35


 1415 046c 22       		.uleb128 0x22
 1416 046d 0C040000 		.4byte	.LASF56
 1417 0471 0B       		.byte	0xb
 1418 0472 9606     		.2byte	0x696
 1419 0474 78040000 		.4byte	0x478
 1420 0478 06       		.uleb128 0x6
 1421 0479 97000000 		.4byte	0x97
 1422 047d 23       		.uleb128 0x23
 1423 047e FE020000 		.4byte	.LASF57
 1424 0482 01       		.byte	0x1
 1425 0483 4A       		.byte	0x4a
 1426 0484 50010000 		.4byte	0x150
 1427 0488 05       		.uleb128 0x5
 1428 0489 03       		.byte	0x3
 1429 048a 00000000 		.4byte	gatekeeper
 1430 048e 23       		.uleb128 0x23
 1431 048f BA030000 		.4byte	.LASF58
 1432 0493 01       		.byte	0x1
 1433 0494 4B       		.byte	0x4b
 1434 0495 45010000 		.4byte	0x145
 1435 0499 05       		.uleb128 0x5
 1436 049a 03       		.byte	0x3
 1437 049b 00000000 		.4byte	queue_handle
 1438 049f 23       		.uleb128 0x23
 1439 04a0 AF030000 		.4byte	.LASF59
 1440 04a4 01       		.byte	0x1
 1441 04a5 4F       		.byte	0x4f
 1442 04a6 25000000 		.4byte	0x25
 1443 04aa 05       		.uleb128 0x5
 1444 04ab 03       		.byte	0x3
 1445 04ac 00000000 		.4byte	rx_receive
 1446 04b0 12       		.uleb128 0x12
 1447 04b1 37000000 		.4byte	0x37
 1448 04b5 C0040000 		.4byte	0x4c0
 1449 04b9 13       		.uleb128 0x13
 1450 04ba 0A010000 		.4byte	0x10a
 1451 04be 3F       		.byte	0x3f
 1452 04bf 00       		.byte	0
 1453 04c0 23       		.uleb128 0x23
 1454 04c1 7C030000 		.4byte	.LASF60
 1455 04c5 01       		.byte	0x1
 1456 04c6 50       		.byte	0x50
 1457 04c7 B0040000 		.4byte	0x4b0
 1458 04cb 05       		.uleb128 0x5
 1459 04cc 03       		.byte	0x3
 1460 04cd 00000000 		.4byte	buffer
 1461 04d1 23       		.uleb128 0x23
 1462 04d2 19040000 		.4byte	.LASF61
 1463 04d6 01       		.byte	0x1
 1464 04d7 53       		.byte	0x53
 1465 04d8 DB010000 		.4byte	0x1db
 1466 04dc 05       		.uleb128 0x5
 1467 04dd 03       		.byte	0x3
 1468 04de 00000000 		.4byte	left_wheel
 1469 04e2 23       		.uleb128 0x23
 1470 04e3 F7030000 		.4byte	.LASF62
 1471 04e7 01       		.byte	0x1
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccP8kvyP.s 			page 36


 1472 04e8 54       		.byte	0x54
 1473 04e9 DB010000 		.4byte	0x1db
 1474 04ed 05       		.uleb128 0x5
 1475 04ee 03       		.byte	0x3
 1476 04ef 00000000 		.4byte	right_wheel
 1477 04f3 24       		.uleb128 0x24
 1478 04f4 6B00     		.ascii	"k\000"
 1479 04f6 01       		.byte	0x1
 1480 04f7 55       		.byte	0x55
 1481 04f8 10020000 		.4byte	0x210
 1482 04fc 05       		.uleb128 0x5
 1483 04fd 03       		.byte	0x3
 1484 04fe 00000000 		.4byte	k
 1485 0502 23       		.uleb128 0x23
 1486 0503 65020000 		.4byte	.LASF63
 1487 0507 01       		.byte	0x1
 1488 0508 57       		.byte	0x57
 1489 0509 7E000000 		.4byte	0x7e
 1490 050d 05       		.uleb128 0x5
 1491 050e 03       		.byte	0x3
 1492 050f 00000000 		.4byte	isMaster
 1493 0513 1B       		.uleb128 0x1b
 1494 0514 17020000 		.4byte	.LASF55
 1495 0518 01       		.byte	0x1
 1496 0519 EF       		.byte	0xef
 1497 051a BE030000 		.4byte	0x3be
 1498 051e 00       		.byte	0
 1499              		.section	.debug_abbrev,"",%progbits
 1500              	.Ldebug_abbrev0:
 1501 0000 01       		.uleb128 0x1
 1502 0001 11       		.uleb128 0x11
 1503 0002 01       		.byte	0x1
 1504 0003 25       		.uleb128 0x25
 1505 0004 0E       		.uleb128 0xe
 1506 0005 13       		.uleb128 0x13
 1507 0006 0B       		.uleb128 0xb
 1508 0007 03       		.uleb128 0x3
 1509 0008 0E       		.uleb128 0xe
 1510 0009 1B       		.uleb128 0x1b
 1511 000a 0E       		.uleb128 0xe
 1512 000b 55       		.uleb128 0x55
 1513 000c 17       		.uleb128 0x17
 1514 000d 11       		.uleb128 0x11
 1515 000e 01       		.uleb128 0x1
 1516 000f 10       		.uleb128 0x10
 1517 0010 17       		.uleb128 0x17
 1518 0011 00       		.byte	0
 1519 0012 00       		.byte	0
 1520 0013 02       		.uleb128 0x2
 1521 0014 24       		.uleb128 0x24
 1522 0015 00       		.byte	0
 1523 0016 0B       		.uleb128 0xb
 1524 0017 0B       		.uleb128 0xb
 1525 0018 3E       		.uleb128 0x3e
 1526 0019 0B       		.uleb128 0xb
 1527 001a 03       		.uleb128 0x3
 1528 001b 0E       		.uleb128 0xe
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccP8kvyP.s 			page 37


 1529 001c 00       		.byte	0
 1530 001d 00       		.byte	0
 1531 001e 03       		.uleb128 0x3
 1532 001f 16       		.uleb128 0x16
 1533 0020 00       		.byte	0
 1534 0021 03       		.uleb128 0x3
 1535 0022 0E       		.uleb128 0xe
 1536 0023 3A       		.uleb128 0x3a
 1537 0024 0B       		.uleb128 0xb
 1538 0025 3B       		.uleb128 0x3b
 1539 0026 0B       		.uleb128 0xb
 1540 0027 49       		.uleb128 0x49
 1541 0028 13       		.uleb128 0x13
 1542 0029 00       		.byte	0
 1543 002a 00       		.byte	0
 1544 002b 04       		.uleb128 0x4
 1545 002c 24       		.uleb128 0x24
 1546 002d 00       		.byte	0
 1547 002e 0B       		.uleb128 0xb
 1548 002f 0B       		.uleb128 0xb
 1549 0030 3E       		.uleb128 0x3e
 1550 0031 0B       		.uleb128 0xb
 1551 0032 03       		.uleb128 0x3
 1552 0033 08       		.uleb128 0x8
 1553 0034 00       		.byte	0
 1554 0035 00       		.byte	0
 1555 0036 05       		.uleb128 0x5
 1556 0037 16       		.uleb128 0x16
 1557 0038 00       		.byte	0
 1558 0039 03       		.uleb128 0x3
 1559 003a 0E       		.uleb128 0xe
 1560 003b 3A       		.uleb128 0x3a
 1561 003c 0B       		.uleb128 0xb
 1562 003d 3B       		.uleb128 0x3b
 1563 003e 05       		.uleb128 0x5
 1564 003f 49       		.uleb128 0x49
 1565 0040 13       		.uleb128 0x13
 1566 0041 00       		.byte	0
 1567 0042 00       		.byte	0
 1568 0043 06       		.uleb128 0x6
 1569 0044 35       		.uleb128 0x35
 1570 0045 00       		.byte	0
 1571 0046 49       		.uleb128 0x49
 1572 0047 13       		.uleb128 0x13
 1573 0048 00       		.byte	0
 1574 0049 00       		.byte	0
 1575 004a 07       		.uleb128 0x7
 1576 004b 0F       		.uleb128 0xf
 1577 004c 00       		.byte	0
 1578 004d 0B       		.uleb128 0xb
 1579 004e 0B       		.uleb128 0xb
 1580 004f 49       		.uleb128 0x49
 1581 0050 13       		.uleb128 0x13
 1582 0051 00       		.byte	0
 1583 0052 00       		.byte	0
 1584 0053 08       		.uleb128 0x8
 1585 0054 15       		.uleb128 0x15
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccP8kvyP.s 			page 38


 1586 0055 00       		.byte	0
 1587 0056 27       		.uleb128 0x27
 1588 0057 19       		.uleb128 0x19
 1589 0058 00       		.byte	0
 1590 0059 00       		.byte	0
 1591 005a 09       		.uleb128 0x9
 1592 005b 0F       		.uleb128 0xf
 1593 005c 00       		.byte	0
 1594 005d 0B       		.uleb128 0xb
 1595 005e 0B       		.uleb128 0xb
 1596 005f 00       		.byte	0
 1597 0060 00       		.byte	0
 1598 0061 0A       		.uleb128 0xa
 1599 0062 13       		.uleb128 0x13
 1600 0063 00       		.byte	0
 1601 0064 03       		.uleb128 0x3
 1602 0065 0E       		.uleb128 0xe
 1603 0066 3C       		.uleb128 0x3c
 1604 0067 19       		.uleb128 0x19
 1605 0068 00       		.byte	0
 1606 0069 00       		.byte	0
 1607 006a 0B       		.uleb128 0xb
 1608 006b 13       		.uleb128 0x13
 1609 006c 01       		.byte	0x1
 1610 006d 0B       		.uleb128 0xb
 1611 006e 0B       		.uleb128 0xb
 1612 006f 3A       		.uleb128 0x3a
 1613 0070 0B       		.uleb128 0xb
 1614 0071 3B       		.uleb128 0x3b
 1615 0072 0B       		.uleb128 0xb
 1616 0073 01       		.uleb128 0x1
 1617 0074 13       		.uleb128 0x13
 1618 0075 00       		.byte	0
 1619 0076 00       		.byte	0
 1620 0077 0C       		.uleb128 0xc
 1621 0078 0D       		.uleb128 0xd
 1622 0079 00       		.byte	0
 1623 007a 03       		.uleb128 0x3
 1624 007b 0E       		.uleb128 0xe
 1625 007c 3A       		.uleb128 0x3a
 1626 007d 0B       		.uleb128 0xb
 1627 007e 3B       		.uleb128 0x3b
 1628 007f 0B       		.uleb128 0xb
 1629 0080 49       		.uleb128 0x49
 1630 0081 13       		.uleb128 0x13
 1631 0082 38       		.uleb128 0x38
 1632 0083 0B       		.uleb128 0xb
 1633 0084 00       		.byte	0
 1634 0085 00       		.byte	0
 1635 0086 0D       		.uleb128 0xd
 1636 0087 0D       		.uleb128 0xd
 1637 0088 00       		.byte	0
 1638 0089 03       		.uleb128 0x3
 1639 008a 08       		.uleb128 0x8
 1640 008b 3A       		.uleb128 0x3a
 1641 008c 0B       		.uleb128 0xb
 1642 008d 3B       		.uleb128 0x3b
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccP8kvyP.s 			page 39


 1643 008e 0B       		.uleb128 0xb
 1644 008f 49       		.uleb128 0x49
 1645 0090 13       		.uleb128 0x13
 1646 0091 38       		.uleb128 0x38
 1647 0092 0B       		.uleb128 0xb
 1648 0093 00       		.byte	0
 1649 0094 00       		.byte	0
 1650 0095 0E       		.uleb128 0xe
 1651 0096 2E       		.uleb128 0x2e
 1652 0097 01       		.byte	0x1
 1653 0098 03       		.uleb128 0x3
 1654 0099 0E       		.uleb128 0xe
 1655 009a 3A       		.uleb128 0x3a
 1656 009b 0B       		.uleb128 0xb
 1657 009c 3B       		.uleb128 0x3b
 1658 009d 0B       		.uleb128 0xb
 1659 009e 27       		.uleb128 0x27
 1660 009f 19       		.uleb128 0x19
 1661 00a0 20       		.uleb128 0x20
 1662 00a1 0B       		.uleb128 0xb
 1663 00a2 01       		.uleb128 0x1
 1664 00a3 13       		.uleb128 0x13
 1665 00a4 00       		.byte	0
 1666 00a5 00       		.byte	0
 1667 00a6 0F       		.uleb128 0xf
 1668 00a7 34       		.uleb128 0x34
 1669 00a8 00       		.byte	0
 1670 00a9 03       		.uleb128 0x3
 1671 00aa 0E       		.uleb128 0xe
 1672 00ab 3A       		.uleb128 0x3a
 1673 00ac 0B       		.uleb128 0xb
 1674 00ad 3B       		.uleb128 0x3b
 1675 00ae 0B       		.uleb128 0xb
 1676 00af 49       		.uleb128 0x49
 1677 00b0 13       		.uleb128 0x13
 1678 00b1 00       		.byte	0
 1679 00b2 00       		.byte	0
 1680 00b3 10       		.uleb128 0x10
 1681 00b4 2E       		.uleb128 0x2e
 1682 00b5 01       		.byte	0x1
 1683 00b6 3F       		.uleb128 0x3f
 1684 00b7 19       		.uleb128 0x19
 1685 00b8 03       		.uleb128 0x3
 1686 00b9 0E       		.uleb128 0xe
 1687 00ba 3A       		.uleb128 0x3a
 1688 00bb 0B       		.uleb128 0xb
 1689 00bc 3B       		.uleb128 0x3b
 1690 00bd 0B       		.uleb128 0xb
 1691 00be 27       		.uleb128 0x27
 1692 00bf 19       		.uleb128 0x19
 1693 00c0 49       		.uleb128 0x49
 1694 00c1 13       		.uleb128 0x13
 1695 00c2 11       		.uleb128 0x11
 1696 00c3 01       		.uleb128 0x1
 1697 00c4 12       		.uleb128 0x12
 1698 00c5 06       		.uleb128 0x6
 1699 00c6 40       		.uleb128 0x40
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccP8kvyP.s 			page 40


 1700 00c7 18       		.uleb128 0x18
 1701 00c8 9642     		.uleb128 0x2116
 1702 00ca 19       		.uleb128 0x19
 1703 00cb 01       		.uleb128 0x1
 1704 00cc 13       		.uleb128 0x13
 1705 00cd 00       		.byte	0
 1706 00ce 00       		.byte	0
 1707 00cf 11       		.uleb128 0x11
 1708 00d0 34       		.uleb128 0x34
 1709 00d1 00       		.byte	0
 1710 00d2 03       		.uleb128 0x3
 1711 00d3 08       		.uleb128 0x8
 1712 00d4 3A       		.uleb128 0x3a
 1713 00d5 0B       		.uleb128 0xb
 1714 00d6 3B       		.uleb128 0x3b
 1715 00d7 0B       		.uleb128 0xb
 1716 00d8 49       		.uleb128 0x49
 1717 00d9 13       		.uleb128 0x13
 1718 00da 02       		.uleb128 0x2
 1719 00db 18       		.uleb128 0x18
 1720 00dc 00       		.byte	0
 1721 00dd 00       		.byte	0
 1722 00de 12       		.uleb128 0x12
 1723 00df 01       		.uleb128 0x1
 1724 00e0 01       		.byte	0x1
 1725 00e1 49       		.uleb128 0x49
 1726 00e2 13       		.uleb128 0x13
 1727 00e3 01       		.uleb128 0x1
 1728 00e4 13       		.uleb128 0x13
 1729 00e5 00       		.byte	0
 1730 00e6 00       		.byte	0
 1731 00e7 13       		.uleb128 0x13
 1732 00e8 21       		.uleb128 0x21
 1733 00e9 00       		.byte	0
 1734 00ea 49       		.uleb128 0x49
 1735 00eb 13       		.uleb128 0x13
 1736 00ec 2F       		.uleb128 0x2f
 1737 00ed 0B       		.uleb128 0xb
 1738 00ee 00       		.byte	0
 1739 00ef 00       		.byte	0
 1740 00f0 14       		.uleb128 0x14
 1741 00f1 26       		.uleb128 0x26
 1742 00f2 00       		.byte	0
 1743 00f3 49       		.uleb128 0x49
 1744 00f4 13       		.uleb128 0x13
 1745 00f5 00       		.byte	0
 1746 00f6 00       		.byte	0
 1747 00f7 15       		.uleb128 0x15
 1748 00f8 2E       		.uleb128 0x2e
 1749 00f9 01       		.byte	0x1
 1750 00fa 3F       		.uleb128 0x3f
 1751 00fb 19       		.uleb128 0x19
 1752 00fc 03       		.uleb128 0x3
 1753 00fd 0E       		.uleb128 0xe
 1754 00fe 3A       		.uleb128 0x3a
 1755 00ff 0B       		.uleb128 0xb
 1756 0100 3B       		.uleb128 0x3b
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccP8kvyP.s 			page 41


 1757 0101 0B       		.uleb128 0xb
 1758 0102 11       		.uleb128 0x11
 1759 0103 01       		.uleb128 0x1
 1760 0104 12       		.uleb128 0x12
 1761 0105 06       		.uleb128 0x6
 1762 0106 40       		.uleb128 0x40
 1763 0107 18       		.uleb128 0x18
 1764 0108 9642     		.uleb128 0x2116
 1765 010a 19       		.uleb128 0x19
 1766 010b 01       		.uleb128 0x1
 1767 010c 13       		.uleb128 0x13
 1768 010d 00       		.byte	0
 1769 010e 00       		.byte	0
 1770 010f 16       		.uleb128 0x16
 1771 0110 34       		.uleb128 0x34
 1772 0111 00       		.byte	0
 1773 0112 03       		.uleb128 0x3
 1774 0113 0E       		.uleb128 0xe
 1775 0114 3A       		.uleb128 0x3a
 1776 0115 0B       		.uleb128 0xb
 1777 0116 3B       		.uleb128 0x3b
 1778 0117 0B       		.uleb128 0xb
 1779 0118 49       		.uleb128 0x49
 1780 0119 13       		.uleb128 0x13
 1781 011a 02       		.uleb128 0x2
 1782 011b 18       		.uleb128 0x18
 1783 011c 00       		.byte	0
 1784 011d 00       		.byte	0
 1785 011e 17       		.uleb128 0x17
 1786 011f 2E       		.uleb128 0x2e
 1787 0120 01       		.byte	0x1
 1788 0121 3F       		.uleb128 0x3f
 1789 0122 19       		.uleb128 0x19
 1790 0123 03       		.uleb128 0x3
 1791 0124 0E       		.uleb128 0xe
 1792 0125 3A       		.uleb128 0x3a
 1793 0126 0B       		.uleb128 0xb
 1794 0127 3B       		.uleb128 0x3b
 1795 0128 0B       		.uleb128 0xb
 1796 0129 27       		.uleb128 0x27
 1797 012a 19       		.uleb128 0x19
 1798 012b 11       		.uleb128 0x11
 1799 012c 01       		.uleb128 0x1
 1800 012d 12       		.uleb128 0x12
 1801 012e 06       		.uleb128 0x6
 1802 012f 40       		.uleb128 0x40
 1803 0130 18       		.uleb128 0x18
 1804 0131 9642     		.uleb128 0x2116
 1805 0133 19       		.uleb128 0x19
 1806 0134 01       		.uleb128 0x1
 1807 0135 13       		.uleb128 0x13
 1808 0136 00       		.byte	0
 1809 0137 00       		.byte	0
 1810 0138 18       		.uleb128 0x18
 1811 0139 05       		.uleb128 0x5
 1812 013a 00       		.byte	0
 1813 013b 03       		.uleb128 0x3
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccP8kvyP.s 			page 42


 1814 013c 08       		.uleb128 0x8
 1815 013d 3A       		.uleb128 0x3a
 1816 013e 0B       		.uleb128 0xb
 1817 013f 3B       		.uleb128 0x3b
 1818 0140 0B       		.uleb128 0xb
 1819 0141 49       		.uleb128 0x49
 1820 0142 13       		.uleb128 0x13
 1821 0143 02       		.uleb128 0x2
 1822 0144 18       		.uleb128 0x18
 1823 0145 00       		.byte	0
 1824 0146 00       		.byte	0
 1825 0147 19       		.uleb128 0x19
 1826 0148 2E       		.uleb128 0x2e
 1827 0149 01       		.byte	0x1
 1828 014a 03       		.uleb128 0x3
 1829 014b 0E       		.uleb128 0xe
 1830 014c 3A       		.uleb128 0x3a
 1831 014d 0B       		.uleb128 0xb
 1832 014e 3B       		.uleb128 0x3b
 1833 014f 0B       		.uleb128 0xb
 1834 0150 27       		.uleb128 0x27
 1835 0151 19       		.uleb128 0x19
 1836 0152 11       		.uleb128 0x11
 1837 0153 01       		.uleb128 0x1
 1838 0154 12       		.uleb128 0x12
 1839 0155 06       		.uleb128 0x6
 1840 0156 40       		.uleb128 0x40
 1841 0157 18       		.uleb128 0x18
 1842 0158 9642     		.uleb128 0x2116
 1843 015a 19       		.uleb128 0x19
 1844 015b 01       		.uleb128 0x1
 1845 015c 13       		.uleb128 0x13
 1846 015d 00       		.byte	0
 1847 015e 00       		.byte	0
 1848 015f 1A       		.uleb128 0x1a
 1849 0160 2E       		.uleb128 0x2e
 1850 0161 00       		.byte	0
 1851 0162 3F       		.uleb128 0x3f
 1852 0163 19       		.uleb128 0x19
 1853 0164 03       		.uleb128 0x3
 1854 0165 0E       		.uleb128 0xe
 1855 0166 3A       		.uleb128 0x3a
 1856 0167 0B       		.uleb128 0xb
 1857 0168 3B       		.uleb128 0x3b
 1858 0169 0B       		.uleb128 0xb
 1859 016a 27       		.uleb128 0x27
 1860 016b 19       		.uleb128 0x19
 1861 016c 3C       		.uleb128 0x3c
 1862 016d 19       		.uleb128 0x19
 1863 016e 00       		.byte	0
 1864 016f 00       		.byte	0
 1865 0170 1B       		.uleb128 0x1b
 1866 0171 34       		.uleb128 0x34
 1867 0172 00       		.byte	0
 1868 0173 03       		.uleb128 0x3
 1869 0174 0E       		.uleb128 0xe
 1870 0175 3A       		.uleb128 0x3a
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccP8kvyP.s 			page 43


 1871 0176 0B       		.uleb128 0xb
 1872 0177 3B       		.uleb128 0x3b
 1873 0178 0B       		.uleb128 0xb
 1874 0179 49       		.uleb128 0x49
 1875 017a 13       		.uleb128 0x13
 1876 017b 3F       		.uleb128 0x3f
 1877 017c 19       		.uleb128 0x19
 1878 017d 3C       		.uleb128 0x3c
 1879 017e 19       		.uleb128 0x19
 1880 017f 00       		.byte	0
 1881 0180 00       		.byte	0
 1882 0181 1C       		.uleb128 0x1c
 1883 0182 21       		.uleb128 0x21
 1884 0183 00       		.byte	0
 1885 0184 00       		.byte	0
 1886 0185 00       		.byte	0
 1887 0186 1D       		.uleb128 0x1d
 1888 0187 2E       		.uleb128 0x2e
 1889 0188 01       		.byte	0x1
 1890 0189 3F       		.uleb128 0x3f
 1891 018a 19       		.uleb128 0x19
 1892 018b 03       		.uleb128 0x3
 1893 018c 0E       		.uleb128 0xe
 1894 018d 3A       		.uleb128 0x3a
 1895 018e 0B       		.uleb128 0xb
 1896 018f 3B       		.uleb128 0x3b
 1897 0190 05       		.uleb128 0x5
 1898 0191 27       		.uleb128 0x27
 1899 0192 19       		.uleb128 0x19
 1900 0193 11       		.uleb128 0x11
 1901 0194 01       		.uleb128 0x1
 1902 0195 12       		.uleb128 0x12
 1903 0196 06       		.uleb128 0x6
 1904 0197 40       		.uleb128 0x40
 1905 0198 18       		.uleb128 0x18
 1906 0199 9742     		.uleb128 0x2117
 1907 019b 19       		.uleb128 0x19
 1908 019c 01       		.uleb128 0x1
 1909 019d 13       		.uleb128 0x13
 1910 019e 00       		.byte	0
 1911 019f 00       		.byte	0
 1912 01a0 1E       		.uleb128 0x1e
 1913 01a1 05       		.uleb128 0x5
 1914 01a2 00       		.byte	0
 1915 01a3 03       		.uleb128 0x3
 1916 01a4 0E       		.uleb128 0xe
 1917 01a5 3A       		.uleb128 0x3a
 1918 01a6 0B       		.uleb128 0xb
 1919 01a7 3B       		.uleb128 0x3b
 1920 01a8 05       		.uleb128 0x5
 1921 01a9 49       		.uleb128 0x49
 1922 01aa 13       		.uleb128 0x13
 1923 01ab 02       		.uleb128 0x2
 1924 01ac 18       		.uleb128 0x18
 1925 01ad 00       		.byte	0
 1926 01ae 00       		.byte	0
 1927 01af 1F       		.uleb128 0x1f
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccP8kvyP.s 			page 44


 1928 01b0 1D       		.uleb128 0x1d
 1929 01b1 01       		.byte	0x1
 1930 01b2 31       		.uleb128 0x31
 1931 01b3 13       		.uleb128 0x13
 1932 01b4 11       		.uleb128 0x11
 1933 01b5 01       		.uleb128 0x1
 1934 01b6 12       		.uleb128 0x12
 1935 01b7 06       		.uleb128 0x6
 1936 01b8 58       		.uleb128 0x58
 1937 01b9 0B       		.uleb128 0xb
 1938 01ba 59       		.uleb128 0x59
 1939 01bb 05       		.uleb128 0x5
 1940 01bc 00       		.byte	0
 1941 01bd 00       		.byte	0
 1942 01be 20       		.uleb128 0x20
 1943 01bf 0B       		.uleb128 0xb
 1944 01c0 01       		.byte	0x1
 1945 01c1 11       		.uleb128 0x11
 1946 01c2 01       		.uleb128 0x1
 1947 01c3 12       		.uleb128 0x12
 1948 01c4 06       		.uleb128 0x6
 1949 01c5 00       		.byte	0
 1950 01c6 00       		.byte	0
 1951 01c7 21       		.uleb128 0x21
 1952 01c8 34       		.uleb128 0x34
 1953 01c9 00       		.byte	0
 1954 01ca 31       		.uleb128 0x31
 1955 01cb 13       		.uleb128 0x13
 1956 01cc 02       		.uleb128 0x2
 1957 01cd 18       		.uleb128 0x18
 1958 01ce 00       		.byte	0
 1959 01cf 00       		.byte	0
 1960 01d0 22       		.uleb128 0x22
 1961 01d1 34       		.uleb128 0x34
 1962 01d2 00       		.byte	0
 1963 01d3 03       		.uleb128 0x3
 1964 01d4 0E       		.uleb128 0xe
 1965 01d5 3A       		.uleb128 0x3a
 1966 01d6 0B       		.uleb128 0xb
 1967 01d7 3B       		.uleb128 0x3b
 1968 01d8 05       		.uleb128 0x5
 1969 01d9 49       		.uleb128 0x49
 1970 01da 13       		.uleb128 0x13
 1971 01db 3F       		.uleb128 0x3f
 1972 01dc 19       		.uleb128 0x19
 1973 01dd 3C       		.uleb128 0x3c
 1974 01de 19       		.uleb128 0x19
 1975 01df 00       		.byte	0
 1976 01e0 00       		.byte	0
 1977 01e1 23       		.uleb128 0x23
 1978 01e2 34       		.uleb128 0x34
 1979 01e3 00       		.byte	0
 1980 01e4 03       		.uleb128 0x3
 1981 01e5 0E       		.uleb128 0xe
 1982 01e6 3A       		.uleb128 0x3a
 1983 01e7 0B       		.uleb128 0xb
 1984 01e8 3B       		.uleb128 0x3b
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccP8kvyP.s 			page 45


 1985 01e9 0B       		.uleb128 0xb
 1986 01ea 49       		.uleb128 0x49
 1987 01eb 13       		.uleb128 0x13
 1988 01ec 3F       		.uleb128 0x3f
 1989 01ed 19       		.uleb128 0x19
 1990 01ee 02       		.uleb128 0x2
 1991 01ef 18       		.uleb128 0x18
 1992 01f0 00       		.byte	0
 1993 01f1 00       		.byte	0
 1994 01f2 24       		.uleb128 0x24
 1995 01f3 34       		.uleb128 0x34
 1996 01f4 00       		.byte	0
 1997 01f5 03       		.uleb128 0x3
 1998 01f6 08       		.uleb128 0x8
 1999 01f7 3A       		.uleb128 0x3a
 2000 01f8 0B       		.uleb128 0xb
 2001 01f9 3B       		.uleb128 0x3b
 2002 01fa 0B       		.uleb128 0xb
 2003 01fb 49       		.uleb128 0x49
 2004 01fc 13       		.uleb128 0x13
 2005 01fd 3F       		.uleb128 0x3f
 2006 01fe 19       		.uleb128 0x19
 2007 01ff 02       		.uleb128 0x2
 2008 0200 18       		.uleb128 0x18
 2009 0201 00       		.byte	0
 2010 0202 00       		.byte	0
 2011 0203 00       		.byte	0
 2012              		.section	.debug_aranges,"",%progbits
 2013 0000 4C000000 		.4byte	0x4c
 2014 0004 0200     		.2byte	0x2
 2015 0006 00000000 		.4byte	.Ldebug_info0
 2016 000a 04       		.byte	0x4
 2017 000b 00       		.byte	0
 2018 000c 0000     		.2byte	0
 2019 000e 0000     		.2byte	0
 2020 0010 00000000 		.4byte	.LFB68
 2021 0014 C4000000 		.4byte	.LFE68-.LFB68
 2022 0018 00000000 		.4byte	.LFB69
 2023 001c AC000000 		.4byte	.LFE69-.LFB69
 2024 0020 00000000 		.4byte	.LFB70
 2025 0024 00020000 		.4byte	.LFE70-.LFB70
 2026 0028 00000000 		.4byte	.LFB71
 2027 002c E8000000 		.4byte	.LFE71-.LFB71
 2028 0030 00000000 		.4byte	.LFB72
 2029 0034 78000000 		.4byte	.LFE72-.LFB72
 2030 0038 00000000 		.4byte	.LFB73
 2031 003c 1E000000 		.4byte	.LFE73-.LFB73
 2032 0040 00000000 		.4byte	.LFB74
 2033 0044 1A000000 		.4byte	.LFE74-.LFB74
 2034 0048 00000000 		.4byte	0
 2035 004c 00000000 		.4byte	0
 2036              		.section	.debug_ranges,"",%progbits
 2037              	.Ldebug_ranges0:
 2038 0000 00000000 		.4byte	.LFB68
 2039 0004 C4000000 		.4byte	.LFE68
 2040 0008 00000000 		.4byte	.LFB69
 2041 000c AC000000 		.4byte	.LFE69
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccP8kvyP.s 			page 46


 2042 0010 00000000 		.4byte	.LFB70
 2043 0014 00020000 		.4byte	.LFE70
 2044 0018 00000000 		.4byte	.LFB71
 2045 001c E8000000 		.4byte	.LFE71
 2046 0020 00000000 		.4byte	.LFB72
 2047 0024 78000000 		.4byte	.LFE72
 2048 0028 00000000 		.4byte	.LFB73
 2049 002c 1E000000 		.4byte	.LFE73
 2050 0030 00000000 		.4byte	.LFB74
 2051 0034 1A000000 		.4byte	.LFE74
 2052 0038 00000000 		.4byte	0
 2053 003c 00000000 		.4byte	0
 2054              		.section	.debug_line,"",%progbits
 2055              	.Ldebug_line0:
 2056 0000 10030000 		.section	.debug_str,"MS",%progbits,1
 2056      0200DA01 
 2056      00000201 
 2056      FB0E0D00 
 2056      01010101 
 2057              	.LASF71:
 2058 0000 444D415F 		.ascii	"DMA_config\000"
 2058      636F6E66 
 2058      696700
 2059              	.LASF45:
 2060 000b 72656365 		.ascii	"receive_data\000"
 2060      6976655F 
 2060      64617461 
 2060      00
 2061              	.LASF44:
 2062 0018 74656D70 		.ascii	"temp\000"
 2062      00
 2063              	.LASF31:
 2064 001d 6375725F 		.ascii	"cur_dest\000"
 2064      64657374 
 2064      00
 2065              	.LASF41:
 2066 0026 444D415F 		.ascii	"DMA_1_TD\000"
 2066      315F5444 
 2066      00
 2067              	.LASF23:
 2068 002f 73697A65 		.ascii	"sizetype\000"
 2068      74797065 
 2068      00
 2069              	.LASF48:
 2070 0038 78506F72 		.ascii	"xPortSysTickHandler\000"
 2070      74537973 
 2070      5469636B 
 2070      48616E64 
 2070      6C657200 
 2071              	.LASF26:
 2072 004c 5461736B 		.ascii	"TaskHandle_t\000"
 2072      48616E64 
 2072      6C655F74 
 2072      00
 2073              	.LASF70:
 2074 0059 6D61696E 		.ascii	"main\000"
 2074      00
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccP8kvyP.s 			page 47


 2075              	.LASF7:
 2076 005e 5F5F7569 		.ascii	"__uint32_t\000"
 2076      6E743332 
 2076      5F7400
 2077              	.LASF39:
 2078 0069 5049445F 		.ascii	"PID_data\000"
 2078      64617461 
 2078      00
 2079              	.LASF2:
 2080 0072 73686F72 		.ascii	"short int\000"
 2080      7420696E 
 2080      7400
 2081              	.LASF16:
 2082 007c 75696E74 		.ascii	"uint16\000"
 2082      313600
 2083              	.LASF12:
 2084 0083 75696E74 		.ascii	"uint8_t\000"
 2084      385F7400 
 2085              	.LASF15:
 2086 008b 75696E74 		.ascii	"uint8\000"
 2086      3800
 2087              	.LASF49:
 2088 0091 76506F72 		.ascii	"vPortSVCHandler\000"
 2088      74535643 
 2088      48616E64 
 2088      6C657200 
 2089              	.LASF50:
 2090 00a1 76417070 		.ascii	"vApplicationStackOverflowHook\000"
 2090      6C696361 
 2090      74696F6E 
 2090      53746163 
 2090      6B4F7665 
 2091              	.LASF51:
 2092 00bf 70785461 		.ascii	"pxTask\000"
 2092      736B00
 2093              	.LASF18:
 2094 00c6 666C6F61 		.ascii	"float\000"
 2094      7400
 2095              	.LASF9:
 2096 00cc 6C6F6E67 		.ascii	"long long int\000"
 2096      206C6F6E 
 2096      6720696E 
 2096      7400
 2097              	.LASF40:
 2098 00da 444D415F 		.ascii	"DMA_1_Chan\000"
 2098      315F4368 
 2098      616E00
 2099              	.LASF42:
 2100 00e5 6C6F6361 		.ascii	"local_write\000"
 2100      6C5F7772 
 2100      69746500 
 2101              	.LASF66:
 2102 00f1 433A5C55 		.ascii	"C:\\Users\\shevi\\Documents\\GitHub\\FYP_POSCCreato"
 2102      73657273 
 2102      5C736865 
 2102      76695C44 
 2102      6F63756D 
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccP8kvyP.s 			page 48


 2103 011f 725F4D61 		.ascii	"r_Master\\FYP_PSOCCreator_Master\\CORTEX_CY8C5588_P"
 2103      73746572 
 2103      5C465950 
 2103      5F50534F 
 2103      43437265 
 2104 0150 536F435F 		.ascii	"SoC_Creator_GCC\\FreeRTOS_Demo.cydsn\000"
 2104      43726561 
 2104      746F725F 
 2104      4743435C 
 2104      46726565 
 2105              	.LASF64:
 2106 0174 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2106      4320342E 
 2106      392E3320 
 2106      32303135 
 2106      30333033 
 2107 01a7 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 2107      20726576 
 2107      6973696F 
 2107      6E203232 
 2107      31323230 
 2108 01da 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2108      66756E63 
 2108      74696F6E 
 2108      2D736563 
 2108      74696F6E 
 2109              	.LASF37:
 2110 0202 74696D65 		.ascii	"time_prev\000"
 2110      5F707265 
 2110      7600
 2111              	.LASF38:
 2112 020c 77686565 		.ascii	"wheel_data\000"
 2112      6C5F6461 
 2112      746100
 2113              	.LASF55:
 2114 0217 43795261 		.ascii	"CyRamVectors\000"
 2114      6D566563 
 2114      746F7273 
 2114      00
 2115              	.LASF67:
 2116 0224 5461736B 		.ascii	"TaskControlBlock_t\000"
 2116      436F6E74 
 2116      726F6C42 
 2116      6C6F636B 
 2116      5F7400
 2117              	.LASF4:
 2118 0237 5F5F7569 		.ascii	"__uint8_t\000"
 2118      6E74385F 
 2118      7400
 2119              	.LASF54:
 2120 0241 7078506F 		.ascii	"pxPort\000"
 2120      727400
 2121              	.LASF53:
 2122 0248 76417070 		.ascii	"vApplicationMallocFailedHook\000"
 2122      6C696361 
 2122      74696F6E 
 2122      4D616C6C 
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccP8kvyP.s 			page 49


 2122      6F634661 
 2123              	.LASF63:
 2124 0265 69734D61 		.ascii	"isMaster\000"
 2124      73746572 
 2124      00
 2125              	.LASF1:
 2126 026e 756E7369 		.ascii	"unsigned char\000"
 2126      676E6564 
 2126      20636861 
 2126      7200
 2127              	.LASF25:
 2128 027c 5469636B 		.ascii	"TickType_t\000"
 2128      54797065 
 2128      5F7400
 2129              	.LASF34:
 2130 0287 6572726F 		.ascii	"error_sum\000"
 2130      725F7375 
 2130      6D00
 2131              	.LASF28:
 2132 0291 53656D61 		.ascii	"SemaphoreHandle_t\000"
 2132      70686F72 
 2132      6548616E 
 2132      646C655F 
 2132      7400
 2133              	.LASF22:
 2134 02a3 63796973 		.ascii	"cyisraddress\000"
 2134      72616464 
 2134      72657373 
 2134      00
 2135              	.LASF30:
 2136 02b0 70726576 		.ascii	"prev_dest\000"
 2136      5F646573 
 2136      7400
 2137              	.LASF0:
 2138 02ba 7369676E 		.ascii	"signed char\000"
 2138      65642063 
 2138      68617200 
 2139              	.LASF10:
 2140 02c6 6C6F6E67 		.ascii	"long long unsigned int\000"
 2140      206C6F6E 
 2140      6720756E 
 2140      7369676E 
 2140      65642069 
 2141              	.LASF14:
 2142 02dd 75696E74 		.ascii	"uint32_t\000"
 2142      33325F74 
 2142      00
 2143              	.LASF11:
 2144 02e6 756E7369 		.ascii	"unsigned int\000"
 2144      676E6564 
 2144      20696E74 
 2144      00
 2145              	.LASF24:
 2146 02f3 42617365 		.ascii	"BaseType_t\000"
 2146      54797065 
 2146      5F7400
 2147              	.LASF57:
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccP8kvyP.s 			page 50


 2148 02fe 67617465 		.ascii	"gatekeeper\000"
 2148      6B656570 
 2148      657200
 2149              	.LASF36:
 2150 0309 74696D65 		.ascii	"time\000"
 2150      00
 2151              	.LASF32:
 2152 030e 6572726F 		.ascii	"error_prev\000"
 2152      725F7072 
 2152      657600
 2153              	.LASF3:
 2154 0319 73686F72 		.ascii	"short unsigned int\000"
 2154      7420756E 
 2154      7369676E 
 2154      65642069 
 2154      6E7400
 2155              	.LASF20:
 2156 032c 63686172 		.ascii	"char\000"
 2156      00
 2157              	.LASF35:
 2158 0331 6D6F746F 		.ascii	"motor_volt\000"
 2158      725F766F 
 2158      6C7400
 2159              	.LASF43:
 2160 033c 74797065 		.ascii	"type\000"
 2160      00
 2161              	.LASF13:
 2162 0341 696E7433 		.ascii	"int32_t\000"
 2162      325F7400 
 2163              	.LASF47:
 2164 0349 78506F72 		.ascii	"xPortPendSVHandler\000"
 2164      7450656E 
 2164      64535648 
 2164      616E646C 
 2164      657200
 2165              	.LASF29:
 2166 035c 78436F6D 		.ascii	"xComPortHandle\000"
 2166      506F7274 
 2166      48616E64 
 2166      6C6500
 2167              	.LASF72:
 2168 036b 70727648 		.ascii	"prvHardwareSetup\000"
 2168      61726477 
 2168      61726553 
 2168      65747570 
 2168      00
 2169              	.LASF60:
 2170 037c 62756666 		.ascii	"buffer\000"
 2170      657200
 2171              	.LASF17:
 2172 0383 75696E74 		.ascii	"uint32\000"
 2172      333200
 2173              	.LASF65:
 2174 038a 6D61696E 		.ascii	"main.c\000"
 2174      2E6300
 2175              	.LASF21:
 2176 0391 72656738 		.ascii	"reg8\000"
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccP8kvyP.s 			page 51


 2176      00
 2177              	.LASF8:
 2178 0396 6C6F6E67 		.ascii	"long unsigned int\000"
 2178      20756E73 
 2178      69676E65 
 2178      6420696E 
 2178      7400
 2179              	.LASF19:
 2180 03a8 646F7562 		.ascii	"double\000"
 2180      6C6500
 2181              	.LASF59:
 2182 03af 72785F72 		.ascii	"rx_receive\000"
 2182      65636569 
 2182      766500
 2183              	.LASF58:
 2184 03ba 71756575 		.ascii	"queue_handle\000"
 2184      655F6861 
 2184      6E646C65 
 2184      00
 2185              	.LASF5:
 2186 03c7 5F5F696E 		.ascii	"__int32_t\000"
 2186      7433325F 
 2186      7400
 2187              	.LASF27:
 2188 03d1 51756575 		.ascii	"QueueHandle_t\000"
 2188      6548616E 
 2188      646C655F 
 2188      7400
 2189              	.LASF33:
 2190 03df 6572726F 		.ascii	"error\000"
 2190      7200
 2191              	.LASF68:
 2192 03e5 76506F72 		.ascii	"vPortRaiseBASEPRI\000"
 2192      74526169 
 2192      73654241 
 2192      53455052 
 2192      4900
 2193              	.LASF62:
 2194 03f7 72696768 		.ascii	"right_wheel\000"
 2194      745F7768 
 2194      65656C00 
 2195              	.LASF6:
 2196 0403 6C6F6E67 		.ascii	"long int\000"
 2196      20696E74 
 2196      00
 2197              	.LASF56:
 2198 040c 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2198      52784275 
 2198      66666572 
 2198      00
 2199              	.LASF61:
 2200 0419 6C656674 		.ascii	"left_wheel\000"
 2200      5F776865 
 2200      656C00
 2201              	.LASF46:
 2202 0424 5049445F 		.ascii	"PID_initialise\000"
 2202      696E6974 
ARM GAS  C:\Users\shevi\AppData\Local\Temp\ccP8kvyP.s 			page 52


 2202      69616C69 
 2202      736500
 2203              	.LASF69:
 2204 0433 756C4E65 		.ascii	"ulNewBASEPRI\000"
 2204      77424153 
 2204      45505249 
 2204      00
 2205              	.LASF52:
 2206 0440 70635461 		.ascii	"pcTaskName\000"
 2206      736B4E61 
 2206      6D6500
 2207              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
