ARM GAS  C:\Users\shevi\AppData\Local\Temp\cchpMgoP.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.bss
  20              		.align	2
  21              	pxPort:
  22 0000 00000000 		.space	4
  23              		.global	gatekeeper
  24              		.align	2
  25              		.type	gatekeeper, %object
  26              		.size	gatekeeper, 4
  27              	gatekeeper:
  28 0004 00000000 		.space	4
  29              		.global	queue_handle
  30              		.align	2
  31              		.type	queue_handle, %object
  32              		.size	queue_handle, 4
  33              	queue_handle:
  34 0008 00000000 		.space	4
  35              		.comm	rx_receive,1,1
  36              		.comm	buffer,64,4
  37              		.comm	left_wheel,36,4
  38              		.comm	right_wheel,36,4
  39              		.comm	k,24,8
  40              		.global	isMaster
  41              		.data
  42              		.align	2
  43              		.type	isMaster, %object
  44              		.size	isMaster, 4
  45              	isMaster:
  46 0000 01000000 		.word	1
  47              		.global	first_run
  48              		.align	2
  49              		.type	first_run, %object
  50              		.size	first_run, 4
  51              	first_run:
  52 0004 01000000 		.word	1
  53              		.section	.rodata
  54              		.align	2
  55              	.LC0:
  56 0000 0A3D3D3D 		.ascii	"\012=== Master ===\012\012\000"
  56      204D6173 
ARM GAS  C:\Users\shevi\AppData\Local\Temp\cchpMgoP.s 			page 2


  56      74657220 
  56      3D3D3D0A 
  56      0A00
  57 0012 0000     		.align	2
  58              	.LC1:
  59 0014 0A3D3D3D 		.ascii	"\012=== Slave ===\012\012\000"
  59      20536C61 
  59      7665203D 
  59      3D3D0A0A 
  59      00
  60 0025 000000   		.align	2
  61              	.LC2:
  62 0028 0A3D3D3D 		.ascii	"\012=== NEW RUN ===\012\012\000"
  62      204E4557 
  62      2052554E 
  62      203D3D3D 
  62      0A0A00
  63 003b 00       		.align	2
  64              	.LC3:
  65 003c 696E6974 		.ascii	"initialise the PID\000"
  65      69616C69 
  65      73652074 
  65      68652050 
  65      494400
  66 004f 00       		.align	2
  67              	.LC4:
  68 0050 77616974 		.ascii	"waiting for a serial bus to come in\000"
  68      696E6720 
  68      666F7220 
  68      61207365 
  68      7269616C 
  69              		.section	.text.main,"ax",%progbits
  70              		.align	2
  71              		.global	main
  72              		.thumb
  73              		.thumb_func
  74              		.type	main, %function
  75              	main:
  76              	.LFB69:
  77              		.file 1 "main.c"
   1:main.c        **** /*
   2:main.c        ****  * FreeRTOS Kernel V10.0.1
   3:main.c        ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:main.c        ****  *
   5:main.c        ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:main.c        ****  * this software and associated documentation files (the "Software"), to deal in
   7:main.c        ****  * the Software without restriction, including without limitation the rights to
   8:main.c        ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:main.c        ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:main.c        ****  * subject to the following conditions:
  11:main.c        ****  *
  12:main.c        ****  * The above copyright notice and this permission notice shall be included in all
  13:main.c        ****  * copies or substantial portions of the Software.
  14:main.c        ****  *
  15:main.c        ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:main.c        ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:main.c        ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
ARM GAS  C:\Users\shevi\AppData\Local\Temp\cchpMgoP.s 			page 3


  18:main.c        ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:main.c        ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:main.c        ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:main.c        ****  *
  22:main.c        ****  * http://www.FreeRTOS.org
  23:main.c        ****  * http://aws.amazon.com/freertos
  24:main.c        ****  *
  25:main.c        ****  * 1 tab == 4 spaces!
  26:main.c        ****  */
  27:main.c        **** 
  28:main.c        **** /* This is the master file !!!!!!  */
  29:main.c        **** 
  30:main.c        **** 
  31:main.c        **** 
  32:main.c        **** 
  33:main.c        **** /* Standard includes */
  34:main.c        **** #include <device.h>
  35:main.c        **** #include <stdio.h>
  36:main.c        **** #include <stdint.h>
  37:main.c        **** #include <stdio.h>
  38:main.c        **** #include <stdint.h>
  39:main.c        **** #include <stdlib.h>
  40:main.c        **** #include <string.h>
  41:main.c        ****  
  42:main.c        **** 
  43:main.c        **** /* FreeRTOS includes */
  44:main.c        **** #include "FreeRTOS.h"
  45:main.c        **** #include "task.h"
  46:main.c        **** #include "semphr.h"
  47:main.c        **** #include "serial.h"
  48:main.c        **** 
  49:main.c        **** /* My headers */
  50:main.c        **** #include "movement.h"
  51:main.c        **** 
  52:main.c        **** /* The time between cycles of the 'check' functionality (defined within the
  53:main.c        **** tick hook. */
  54:main.c        **** #define mainCHECK_DELAY						( ( TickType_t ) 5000 / portTICK_PERIOD_MS )
  55:main.c        **** #define mainCOM_LED							( 3 )
  56:main.c        **** 
  57:main.c        **** /* The number of nano seconds between each processor clock. */
  58:main.c        **** #define mainNS_PER_CLOCK ( ( unsigned long ) ( ( 1.0 / ( double ) configCPU_CLOCK_HZ ) * 1000000000
  59:main.c        **** 
  60:main.c        **** /* Task priorities. */
  61:main.c        **** #define mainSENDER_PRIORITY       			( tskIDLE_PRIORITY )
  62:main.c        **** #define mainRECEIVER_PRIORITY        		( tskIDLE_PRIORITY )
  63:main.c        **** 
  64:main.c        **** #define comRX_BLOCK_TIME			( ( TickType_t ) 0xffff )
  65:main.c        **** 
  66:main.c        **** 
  67:main.c        **** void PID_initialise( void *p );
  68:main.c        **** void receive_data( void *p );
  69:main.c        **** void DMA_config();
  70:main.c        **** static void prvHardwareSetup( void );
  71:main.c        **** 
  72:main.c        **** 
  73:main.c        **** static xComPortHandle pxPort = NULL;
  74:main.c        **** xSemaphoreHandle gatekeeper = 0;
ARM GAS  C:\Users\shevi\AppData\Local\Temp\cchpMgoP.s 			page 4


  75:main.c        **** xQueueHandle queue_handle = NULL;
  76:main.c        **** 
  77:main.c        **** 
  78:main.c        **** /* global variables */
  79:main.c        **** signed char rx_receive;
  80:main.c        **** unsigned char buffer[64];
  81:main.c        **** 
  82:main.c        **** 
  83:main.c        **** wheel_data left_wheel;
  84:main.c        **** wheel_data right_wheel;
  85:main.c        **** PID_data k;
  86:main.c        **** 
  87:main.c        **** int isMaster=1;          // use 1 if it is the master, 0 if it is the slave.
  88:main.c        **** int first_run=1;
  89:main.c        **** 
  90:main.c        **** // START OF FUNCTIONS
  91:main.c        **** int main( void ) {
  78              		.loc 1 91 0
  79              		.cfi_startproc
  80              		@ args = 0, pretend = 0, frame = 256
  81              		@ frame_needed = 1, uses_anonymous_args = 0
  82 0000 B0B5     		push	{r4, r5, r7, lr}
  83              		.cfi_def_cfa_offset 16
  84              		.cfi_offset 4, -16
  85              		.cfi_offset 5, -12
  86              		.cfi_offset 7, -8
  87              		.cfi_offset 14, -4
  88 0002 C2B0     		sub	sp, sp, #264
  89              		.cfi_def_cfa_offset 280
  90 0004 02AF     		add	r7, sp, #8
  91              		.cfi_def_cfa 7, 272
  92:main.c        **** 	const signed char * run[64];
  93:main.c        ****     
  94:main.c        ****     prvHardwareSetup(); 
  92              		.loc 1 94 0
  93 0006 FFF7FEFF 		bl	prvHardwareSetup
  95:main.c        ****     
  96:main.c        ****     if (isMaster){
  94              		.loc 1 96 0
  95 000a 2C4B     		ldr	r3, .L5
  96 000c 1B68     		ldr	r3, [r3]
  97 000e 002B     		cmp	r3, #0
  98 0010 0ED0     		beq	.L2
  97:main.c        ****     /* This is the for loop for the master system */
  98:main.c        ****         sprintf((char *) run, "\n=== Master ===\n\n");
  99              		.loc 1 98 0
 100 0012 3B46     		mov	r3, r7
 101 0014 2A4A     		ldr	r2, .L5+4
 102 0016 1C46     		mov	r4, r3
 103 0018 1546     		mov	r5, r2
 104 001a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 105 001c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 106 001e 2B68     		ldr	r3, [r5]
 107 0020 2380     		strh	r3, [r4]	@ movhi
  99:main.c        ****         vSerialPutString(pxPort, (const signed char *) run, 64);
 108              		.loc 1 99 0
 109 0022 284B     		ldr	r3, .L5+8
ARM GAS  C:\Users\shevi\AppData\Local\Temp\cchpMgoP.s 			page 5


 110 0024 1B68     		ldr	r3, [r3]
 111 0026 3946     		mov	r1, r7
 112 0028 4022     		movs	r2, #64
 113 002a 1846     		mov	r0, r3
 114 002c FFF7FEFF 		bl	vSerialPutString
 115              	.L2:
 100:main.c        ****     }
 101:main.c        ****     if (isMaster==0){
 116              		.loc 1 101 0
 117 0030 224B     		ldr	r3, .L5
 118 0032 1B68     		ldr	r3, [r3]
 119 0034 002B     		cmp	r3, #0
 120 0036 0ED1     		bne	.L3
 102:main.c        ****     /* This is the for loop for the slave system */
 103:main.c        ****         sprintf((char *) run, "\n=== Slave ===\n\n");
 121              		.loc 1 103 0
 122 0038 3B46     		mov	r3, r7
 123 003a 234A     		ldr	r2, .L5+12
 124 003c 1C46     		mov	r4, r3
 125 003e 1546     		mov	r5, r2
 126 0040 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 127 0042 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 128 0044 2B68     		ldr	r3, [r5]
 129 0046 2370     		strb	r3, [r4]
 104:main.c        ****         vSerialPutString(pxPort, (const signed char *) run, 64);
 130              		.loc 1 104 0
 131 0048 1E4B     		ldr	r3, .L5+8
 132 004a 1B68     		ldr	r3, [r3]
 133 004c 3946     		mov	r1, r7
 134 004e 4022     		movs	r2, #64
 135 0050 1846     		mov	r0, r3
 136 0052 FFF7FEFF 		bl	vSerialPutString
 137              	.L3:
 105:main.c        ****       }  
 106:main.c        ****     sprintf((char *) run, "\n=== NEW RUN ===\n\n");
 138              		.loc 1 106 0
 139 0056 3B46     		mov	r3, r7
 140 0058 1C4A     		ldr	r2, .L5+16
 141 005a 1C46     		mov	r4, r3
 142 005c 1546     		mov	r5, r2
 143 005e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 144 0060 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 145 0062 2B68     		ldr	r3, [r5]
 146 0064 1A46     		mov	r2, r3	@ movhi
 147 0066 2280     		strh	r2, [r4]	@ movhi
 148 0068 0234     		adds	r4, r4, #2
 149 006a 1B0C     		lsrs	r3, r3, #16
 150 006c 2370     		strb	r3, [r4]
 107:main.c        ****     vSerialPutString(pxPort, (const signed char *) run, 64);
 151              		.loc 1 107 0
 152 006e 154B     		ldr	r3, .L5+8
 153 0070 1B68     		ldr	r3, [r3]
 154 0072 3946     		mov	r1, r7
 155 0074 4022     		movs	r2, #64
 156 0076 1846     		mov	r0, r3
 157 0078 FFF7FEFF 		bl	vSerialPutString
 108:main.c        ****     
ARM GAS  C:\Users\shevi\AppData\Local\Temp\cchpMgoP.s 			page 6


 109:main.c        ****     gatekeeper = xSemaphoreCreateMutex();
 158              		.loc 1 109 0
 159 007c 0120     		movs	r0, #1
 160 007e FFF7FEFF 		bl	xQueueCreateMutex
 161 0082 0246     		mov	r2, r0
 162 0084 124B     		ldr	r3, .L5+20
 163 0086 1A60     		str	r2, [r3]
 110:main.c        ****     
 111:main.c        ****     xTaskCreate( PID_initialise, (const char*) "initialise the PID", 1024, NULL, 2, NULL );
 164              		.loc 1 111 0
 165 0088 0023     		movs	r3, #0
 166 008a 0193     		str	r3, [sp, #4]
 167 008c 0223     		movs	r3, #2
 168 008e 0093     		str	r3, [sp]
 169 0090 0023     		movs	r3, #0
 170 0092 4FF48062 		mov	r2, #1024
 171 0096 0F49     		ldr	r1, .L5+24
 172 0098 0F48     		ldr	r0, .L5+28
 173 009a FFF7FEFF 		bl	xTaskCreate
 112:main.c        ****     xTaskCreate( receive_data, (const char*) "waiting for a serial bus to come in", 1024, NULL, 1, 
 174              		.loc 1 112 0
 175 009e 0023     		movs	r3, #0
 176 00a0 0193     		str	r3, [sp, #4]
 177 00a2 0123     		movs	r3, #1
 178 00a4 0093     		str	r3, [sp]
 179 00a6 0023     		movs	r3, #0
 180 00a8 4FF48062 		mov	r2, #1024
 181 00ac 0B49     		ldr	r1, .L5+32
 182 00ae 0C48     		ldr	r0, .L5+36
 183 00b0 FFF7FEFF 		bl	xTaskCreate
 113:main.c        ****     
 114:main.c        **** 	vTaskStartScheduler();
 184              		.loc 1 114 0
 185 00b4 FFF7FEFF 		bl	vTaskStartScheduler
 186              	.L4:
 115:main.c        **** 
 116:main.c        **** 	for( ;; );  // You won't actually reach this for loop.
 187              		.loc 1 116 0 discriminator 1
 188 00b8 FEE7     		b	.L4
 189              	.L6:
 190 00ba 00BF     		.align	2
 191              	.L5:
 192 00bc 00000000 		.word	isMaster
 193 00c0 00000000 		.word	.LC0
 194 00c4 00000000 		.word	pxPort
 195 00c8 14000000 		.word	.LC1
 196 00cc 28000000 		.word	.LC2
 197 00d0 00000000 		.word	gatekeeper
 198 00d4 3C000000 		.word	.LC3
 199 00d8 00000000 		.word	PID_initialise
 200 00dc 50000000 		.word	.LC4
 201 00e0 00000000 		.word	receive_data
 202              		.cfi_endproc
 203              	.LFE69:
 204              		.size	main, .-main
 205              		.section	.rodata
 206              		.align	2
ARM GAS  C:\Users\shevi\AppData\Local\Temp\cchpMgoP.s 			page 7


 207              	.LC5:
 208 0074 62756666 		.ascii	"buffer read as %s\012\000"
 208      65722072 
 208      65616420 
 208      61732025 
 208      730A00
 209 0087 00       		.align	2
 210              	.LC6:
 211 0088 6C656674 		.ascii	"left inc: %i\012right inc: %i\012\000"
 211      20696E63 
 211      3A202569 
 211      0A726967 
 211      68742069 
 212              		.align	2
 213              	.LC7:
 214 00a4 56455254 		.ascii	"VERTICAL \012\000"
 214      4943414C 
 214      200A00
 215 00af 00       		.align	2
 216              	.LC8:
 217 00b0 484F5249 		.ascii	"HORIZONTAL \012\000"
 217      5A4F4E54 
 217      414C200A 
 217      00
 218 00bd 000000   		.align	2
 219              	.LC9:
 220 00c0 4C454420 		.ascii	"LED BLUE TURN ON\012\000"
 220      424C5545 
 220      20545552 
 220      4E204F4E 
 220      0A00
 221 00d2 0000     		.align	2
 222              	.LC10:
 223 00d4 4C454420 		.ascii	"LED RED TURN ON\012\000"
 223      52454420 
 223      5455524E 
 223      204F4E0A 
 223      00
 224 00e5 000000   		.align	2
 225              	.LC11:
 226 00e8 4C454420 		.ascii	"LED BLUE TURN OFF\012\000"
 226      424C5545 
 226      20545552 
 226      4E204F46 
 226      460A00
 227 00fb 00       		.align	2
 228              	.LC12:
 229 00fc 4C454420 		.ascii	"LED RED TURN OFF\012\000"
 229      52454420 
 229      5455524E 
 229      204F4646 
 229      0A00
 230              		.section	.text.receive_data,"ax",%progbits
 231              		.align	2
 232              		.global	receive_data
 233              		.thumb
 234              		.thumb_func
ARM GAS  C:\Users\shevi\AppData\Local\Temp\cchpMgoP.s 			page 8


 235              		.type	receive_data, %function
 236              	receive_data:
 237              	.LFB70:
 117:main.c        **** }
 118:main.c        **** 
 119:main.c        **** void receive_data( void *p ) {
 238              		.loc 1 119 0
 239              		.cfi_startproc
 240              		@ args = 0, pretend = 0, frame = 288
 241              		@ frame_needed = 1, uses_anonymous_args = 0
 242 0000 B0B5     		push	{r4, r5, r7, lr}
 243              		.cfi_def_cfa_offset 16
 244              		.cfi_offset 4, -16
 245              		.cfi_offset 5, -12
 246              		.cfi_offset 7, -8
 247              		.cfi_offset 14, -4
 248 0002 C8B0     		sub	sp, sp, #288
 249              		.cfi_def_cfa_offset 304
 250 0004 00AF     		add	r7, sp, #0
 251              		.cfi_def_cfa_register 7
 252 0006 3B1D     		adds	r3, r7, #4
 253 0008 1860     		str	r0, [r3]
 120:main.c        ****     
 121:main.c        ****     p = NULL;
 254              		.loc 1 121 0
 255 000a 3B1D     		adds	r3, r7, #4
 256 000c 0022     		movs	r2, #0
 257 000e 1A60     		str	r2, [r3]
 122:main.c        ****     
 123:main.c        ****     const signed char * local_write[64];
 124:main.c        ****     int i = 0;
 258              		.loc 1 124 0
 259 0010 0023     		movs	r3, #0
 260 0012 C7F81C31 		str	r3, [r7, #284]
 125:main.c        ****     int go = 0;
 261              		.loc 1 125 0
 262 0016 0023     		movs	r3, #0
 263 0018 C7F81831 		str	r3, [r7, #280]
 126:main.c        ****     signed char type = 0;
 264              		.loc 1 126 0
 265 001c 0023     		movs	r3, #0
 266 001e 87F81731 		strb	r3, [r7, #279]
 267              	.L21:
 127:main.c        ****     char temp[10];
 128:main.c        ****     
 129:main.c        ****     while(1) {
 130:main.c        ****         if (pdTRUE == xSerialGetChar(pxPort, &rx_receive, comRX_BLOCK_TIME)) {
 268              		.loc 1 130 0
 269 0022 A54B     		ldr	r3, .L22
 270 0024 1B68     		ldr	r3, [r3]
 271 0026 4FF6FF72 		movw	r2, #65535
 272 002a A449     		ldr	r1, .L22+4
 273 002c 1846     		mov	r0, r3
 274 002e FFF7FEFF 		bl	xSerialGetChar
 275 0032 0346     		mov	r3, r0
 276 0034 012B     		cmp	r3, #1
 277 0036 F4D1     		bne	.L21
ARM GAS  C:\Users\shevi\AppData\Local\Temp\cchpMgoP.s 			page 9


 131:main.c        ****             type = rx_receive;
 278              		.loc 1 131 0
 279 0038 A04B     		ldr	r3, .L22+4
 280 003a 1B78     		ldrb	r3, [r3]
 281 003c 87F81731 		strb	r3, [r7, #279]
 132:main.c        ****             if(xSemaphoreTake(gatekeeper, 50000)) {
 282              		.loc 1 132 0
 283 0040 9F4B     		ldr	r3, .L22+8
 284 0042 1B68     		ldr	r3, [r3]
 285 0044 4CF25031 		movw	r1, #50000
 286 0048 1846     		mov	r0, r3
 287 004a FFF7FEFF 		bl	xQueueSemaphoreTake
 288 004e 0346     		mov	r3, r0
 289 0050 002B     		cmp	r3, #0
 290 0052 E6D0     		beq	.L21
 133:main.c        ****                 if(type=='1'){//
 291              		.loc 1 133 0
 292 0054 97F91731 		ldrsb	r3, [r7, #279]
 293 0058 312B     		cmp	r3, #49
 294 005a 43D1     		bne	.L9
 134:main.c        ****                     for(i=0;i<8;i++){
 295              		.loc 1 134 0
 296 005c 0023     		movs	r3, #0
 297 005e C7F81C31 		str	r3, [r7, #284]
 298 0062 16E0     		b	.L10
 299              	.L11:
 135:main.c        ****                         xSerialGetChar(pxPort, &rx_receive, comRX_BLOCK_TIME);
 300              		.loc 1 135 0 discriminator 3
 301 0064 944B     		ldr	r3, .L22
 302 0066 1B68     		ldr	r3, [r3]
 303 0068 4FF6FF72 		movw	r2, #65535
 304 006c 9349     		ldr	r1, .L22+4
 305 006e 1846     		mov	r0, r3
 306 0070 FFF7FEFF 		bl	xSerialGetChar
 136:main.c        ****                         buffer[i] = rx_receive;
 307              		.loc 1 136 0 discriminator 3
 308 0074 914B     		ldr	r3, .L22+4
 309 0076 93F90030 		ldrsb	r3, [r3]
 310 007a D9B2     		uxtb	r1, r3
 311 007c 914A     		ldr	r2, .L22+12
 312 007e D7F81C31 		ldr	r3, [r7, #284]
 313 0082 1344     		add	r3, r3, r2
 314 0084 0A46     		mov	r2, r1
 315 0086 1A70     		strb	r2, [r3]
 134:main.c        ****                     for(i=0;i<8;i++){
 316              		.loc 1 134 0 discriminator 3
 317 0088 D7F81C31 		ldr	r3, [r7, #284]
 318 008c 0133     		adds	r3, r3, #1
 319 008e C7F81C31 		str	r3, [r7, #284]
 320              	.L10:
 134:main.c        ****                     for(i=0;i<8;i++){
 321              		.loc 1 134 0 is_stmt 0 discriminator 1
 322 0092 D7F81C31 		ldr	r3, [r7, #284]
 323 0096 072B     		cmp	r3, #7
 324 0098 E4DD     		ble	.L11
 137:main.c        ****                     }
 138:main.c        ****                     sprintf((char *) local_write, "buffer read as %s\n", buffer);
ARM GAS  C:\Users\shevi\AppData\Local\Temp\cchpMgoP.s 			page 10


 325              		.loc 1 138 0 is_stmt 1
 326 009a 07F11403 		add	r3, r7, #20
 327 009e 894A     		ldr	r2, .L22+12
 328 00a0 8949     		ldr	r1, .L22+16
 329 00a2 1846     		mov	r0, r3
 330 00a4 FFF7FEFF 		bl	sprintf
 139:main.c        ****                     vSerialPutString(pxPort, (const signed char *) local_write, 64);
 331              		.loc 1 139 0
 332 00a8 834B     		ldr	r3, .L22
 333 00aa 1B68     		ldr	r3, [r3]
 334 00ac 07F11401 		add	r1, r7, #20
 335 00b0 4022     		movs	r2, #64
 336 00b2 1846     		mov	r0, r3
 337 00b4 FFF7FEFF 		bl	vSerialPutString
 140:main.c        ****                     update_inc( &left_wheel, &right_wheel, buffer);
 338              		.loc 1 140 0
 339 00b8 824A     		ldr	r2, .L22+12
 340 00ba 8449     		ldr	r1, .L22+20
 341 00bc 8448     		ldr	r0, .L22+24
 342 00be FFF7FEFF 		bl	update_inc
 141:main.c        ****                     sprintf((char *) local_write, "left inc: %i\nright inc: %i\n", left_wheel.inc, 
 343              		.loc 1 141 0
 344 00c2 834B     		ldr	r3, .L22+24
 345 00c4 9A69     		ldr	r2, [r3, #24]
 346 00c6 814B     		ldr	r3, .L22+20
 347 00c8 9B69     		ldr	r3, [r3, #24]
 348 00ca 07F11400 		add	r0, r7, #20
 349 00ce 8149     		ldr	r1, .L22+28
 350 00d0 FFF7FEFF 		bl	sprintf
 142:main.c        ****                     vSerialPutString(pxPort, (const signed char *) local_write, 64);
 351              		.loc 1 142 0
 352 00d4 784B     		ldr	r3, .L22
 353 00d6 1B68     		ldr	r3, [r3]
 354 00d8 07F11401 		add	r1, r7, #20
 355 00dc 4022     		movs	r2, #64
 356 00de 1846     		mov	r0, r3
 357 00e0 FFF7FEFF 		bl	vSerialPutString
 358              	.L9:
 143:main.c        ****                 }
 144:main.c        ****                 if(type=='2'){
 359              		.loc 1 144 0
 360 00e4 97F91731 		ldrsb	r3, [r7, #279]
 361 00e8 322B     		cmp	r3, #50
 362 00ea 01D1     		bne	.L12
 145:main.c        ****                     CySoftwareReset();
 363              		.loc 1 145 0
 364 00ec FFF7FEFF 		bl	CySoftwareReset
 365              	.L12:
 146:main.c        ****                 }  
 147:main.c        ****             
 148:main.c        ****                 if (type=='4' && ~isMaster){//Camera position for LED CV
 366              		.loc 1 148 0
 367 00f0 97F91731 		ldrsb	r3, [r7, #279]
 368 00f4 342B     		cmp	r3, #52
 369 00f6 21D1     		bne	.L13
 370              		.loc 1 148 0 is_stmt 0 discriminator 1
 371 00f8 774B     		ldr	r3, .L22+32
ARM GAS  C:\Users\shevi\AppData\Local\Temp\cchpMgoP.s 			page 11


 372 00fa 1B68     		ldr	r3, [r3]
 373 00fc B3F1FF3F 		cmp	r3, #-1
 374 0100 1CD0     		beq	.L13
 149:main.c        ****                     sprintf((char *) local_write, "VERTICAL \n");
 375              		.loc 1 149 0 is_stmt 1
 376 0102 07F11403 		add	r3, r7, #20
 377 0106 754A     		ldr	r2, .L22+36
 378 0108 07CA     		ldmia	r2, {r0, r1, r2}
 379 010a 03C3     		stmia	r3!, {r0, r1}
 380 010c 1A80     		strh	r2, [r3]	@ movhi
 381 010e 0233     		adds	r3, r3, #2
 382 0110 120C     		lsrs	r2, r2, #16
 383 0112 1A70     		strb	r2, [r3]
 150:main.c        ****                     vSerialPutString(pxPort, (const signed char *) local_write, 64);
 384              		.loc 1 150 0
 385 0114 684B     		ldr	r3, .L22
 386 0116 1B68     		ldr	r3, [r3]
 387 0118 07F11401 		add	r1, r7, #20
 388 011c 4022     		movs	r2, #64
 389 011e 1846     		mov	r0, r3
 390 0120 FFF7FEFF 		bl	vSerialPutString
 151:main.c        ****                     PWM_1_Wakeup();                 
 391              		.loc 1 151 0
 392 0124 FFF7FEFF 		bl	PWM_1_Wakeup
 152:main.c        ****                     PWM_1_WriteCompare(1200);
 393              		.loc 1 152 0
 394 0128 4FF49660 		mov	r0, #1200
 395 012c FFF7FEFF 		bl	PWM_1_WriteCompare
 153:main.c        ****                     CyDelay(1000);
 396              		.loc 1 153 0
 397 0130 4FF47A70 		mov	r0, #1000
 398 0134 FFF7FEFF 		bl	CyDelay
 154:main.c        ****                     PWM_1_Sleep();
 399              		.loc 1 154 0
 400 0138 FFF7FEFF 		bl	PWM_1_Sleep
 401              	.L13:
 155:main.c        ****                     
 156:main.c        ****                 }
 157:main.c        ****                 if (type=='5' && ~isMaster){//Causes position for Laser DOT CV
 402              		.loc 1 157 0
 403 013c 97F91731 		ldrsb	r3, [r7, #279]
 404 0140 352B     		cmp	r3, #53
 405 0142 20D1     		bne	.L14
 406              		.loc 1 157 0 is_stmt 0 discriminator 1
 407 0144 644B     		ldr	r3, .L22+32
 408 0146 1B68     		ldr	r3, [r3]
 409 0148 B3F1FF3F 		cmp	r3, #-1
 410 014c 1BD0     		beq	.L14
 158:main.c        ****                     sprintf((char *) local_write, "HORIZONTAL \n");
 411              		.loc 1 158 0 is_stmt 1
 412 014e 07F11403 		add	r3, r7, #20
 413 0152 634A     		ldr	r2, .L22+40
 414 0154 1C46     		mov	r4, r3
 415 0156 1346     		mov	r3, r2
 416 0158 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 417 015a 07C4     		stmia	r4!, {r0, r1, r2}
 418 015c 2370     		strb	r3, [r4]
ARM GAS  C:\Users\shevi\AppData\Local\Temp\cchpMgoP.s 			page 12


 159:main.c        ****                     vSerialPutString(pxPort, (const signed char *) local_write, 64);
 419              		.loc 1 159 0
 420 015e 564B     		ldr	r3, .L22
 421 0160 1B68     		ldr	r3, [r3]
 422 0162 07F11401 		add	r1, r7, #20
 423 0166 4022     		movs	r2, #64
 424 0168 1846     		mov	r0, r3
 425 016a FFF7FEFF 		bl	vSerialPutString
 160:main.c        ****                     PWM_1_Wakeup();
 426              		.loc 1 160 0
 427 016e FFF7FEFF 		bl	PWM_1_Wakeup
 161:main.c        ****                     PWM_1_WriteCompare(2100);//0 deg;
 428              		.loc 1 161 0
 429 0172 40F63400 		movw	r0, #2100
 430 0176 FFF7FEFF 		bl	PWM_1_WriteCompare
 162:main.c        ****                     CyDelay(1000);
 431              		.loc 1 162 0
 432 017a 4FF47A70 		mov	r0, #1000
 433 017e FFF7FEFF 		bl	CyDelay
 163:main.c        ****                     PWM_1_Sleep();
 434              		.loc 1 163 0
 435 0182 FFF7FEFF 		bl	PWM_1_Sleep
 436              	.L14:
 164:main.c        ****                     
 165:main.c        ****                 }
 166:main.c        ****                  if (type=='6' && isMaster){//TURN ON LED_BLUE
 437              		.loc 1 166 0
 438 0186 97F91731 		ldrsb	r3, [r7, #279]
 439 018a 362B     		cmp	r3, #54
 440 018c 17D1     		bne	.L15
 441              		.loc 1 166 0 is_stmt 0 discriminator 1
 442 018e 524B     		ldr	r3, .L22+32
 443 0190 1B68     		ldr	r3, [r3]
 444 0192 002B     		cmp	r3, #0
 445 0194 13D0     		beq	.L15
 167:main.c        ****                     sprintf((char *) local_write, "LED BLUE TURN ON\n");
 446              		.loc 1 167 0 is_stmt 1
 447 0196 07F11403 		add	r3, r7, #20
 448 019a 524A     		ldr	r2, .L22+44
 449 019c 1C46     		mov	r4, r3
 450 019e 1546     		mov	r5, r2
 451 01a0 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 452 01a2 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 453 01a4 2B68     		ldr	r3, [r5]
 454 01a6 2380     		strh	r3, [r4]	@ movhi
 168:main.c        ****                     vSerialPutString(pxPort, (const signed char *) local_write, 64);
 455              		.loc 1 168 0
 456 01a8 434B     		ldr	r3, .L22
 457 01aa 1B68     		ldr	r3, [r3]
 458 01ac 07F11401 		add	r1, r7, #20
 459 01b0 4022     		movs	r2, #64
 460 01b2 1846     		mov	r0, r3
 461 01b4 FFF7FEFF 		bl	vSerialPutString
 169:main.c        ****                     LED_BLUE_Write(1);                    
 462              		.loc 1 169 0
 463 01b8 0120     		movs	r0, #1
 464 01ba FFF7FEFF 		bl	LED_BLUE_Write
ARM GAS  C:\Users\shevi\AppData\Local\Temp\cchpMgoP.s 			page 13


 465              	.L15:
 170:main.c        ****                 }
 171:main.c        ****                 if (type=='7' && isMaster){//TURN ON LED_RED
 466              		.loc 1 171 0
 467 01be 97F91731 		ldrsb	r3, [r7, #279]
 468 01c2 372B     		cmp	r3, #55
 469 01c4 17D1     		bne	.L16
 470              		.loc 1 171 0 is_stmt 0 discriminator 1
 471 01c6 444B     		ldr	r3, .L22+32
 472 01c8 1B68     		ldr	r3, [r3]
 473 01ca 002B     		cmp	r3, #0
 474 01cc 13D0     		beq	.L16
 172:main.c        ****                     sprintf((char *) local_write, "LED RED TURN ON\n");
 475              		.loc 1 172 0 is_stmt 1
 476 01ce 07F11403 		add	r3, r7, #20
 477 01d2 454A     		ldr	r2, .L22+48
 478 01d4 1C46     		mov	r4, r3
 479 01d6 1546     		mov	r5, r2
 480 01d8 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 481 01da 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 482 01dc 2B68     		ldr	r3, [r5]
 483 01de 2370     		strb	r3, [r4]
 173:main.c        ****                     vSerialPutString(pxPort, (const signed char *) local_write, 64);
 484              		.loc 1 173 0
 485 01e0 354B     		ldr	r3, .L22
 486 01e2 1B68     		ldr	r3, [r3]
 487 01e4 07F11401 		add	r1, r7, #20
 488 01e8 4022     		movs	r2, #64
 489 01ea 1846     		mov	r0, r3
 490 01ec FFF7FEFF 		bl	vSerialPutString
 174:main.c        ****                     LED_RED_Write(1);                    
 491              		.loc 1 174 0
 492 01f0 0120     		movs	r0, #1
 493 01f2 FFF7FEFF 		bl	LED_RED_Write
 494              	.L16:
 175:main.c        ****                 }
 176:main.c        ****                  if (type=='8' && isMaster){//TURN OFF LED_BLUE
 495              		.loc 1 176 0
 496 01f6 97F91731 		ldrsb	r3, [r7, #279]
 497 01fa 382B     		cmp	r3, #56
 498 01fc 1BD1     		bne	.L17
 499              		.loc 1 176 0 is_stmt 0 discriminator 1
 500 01fe 364B     		ldr	r3, .L22+32
 501 0200 1B68     		ldr	r3, [r3]
 502 0202 002B     		cmp	r3, #0
 503 0204 17D0     		beq	.L17
 177:main.c        ****                     sprintf((char *) local_write, "LED BLUE TURN OFF\n");
 504              		.loc 1 177 0 is_stmt 1
 505 0206 07F11403 		add	r3, r7, #20
 506 020a 384A     		ldr	r2, .L22+52
 507 020c 1C46     		mov	r4, r3
 508 020e 1546     		mov	r5, r2
 509 0210 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 510 0212 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 511 0214 2B68     		ldr	r3, [r5]
 512 0216 1A46     		mov	r2, r3	@ movhi
 513 0218 2280     		strh	r2, [r4]	@ movhi
ARM GAS  C:\Users\shevi\AppData\Local\Temp\cchpMgoP.s 			page 14


 514 021a 0234     		adds	r4, r4, #2
 515 021c 1B0C     		lsrs	r3, r3, #16
 516 021e 2370     		strb	r3, [r4]
 178:main.c        ****                     vSerialPutString(pxPort, (const signed char *) local_write, 64);
 517              		.loc 1 178 0
 518 0220 254B     		ldr	r3, .L22
 519 0222 1B68     		ldr	r3, [r3]
 520 0224 07F11401 		add	r1, r7, #20
 521 0228 4022     		movs	r2, #64
 522 022a 1846     		mov	r0, r3
 523 022c FFF7FEFF 		bl	vSerialPutString
 179:main.c        ****                     LED_BLUE_Write(0);                    
 524              		.loc 1 179 0
 525 0230 0020     		movs	r0, #0
 526 0232 FFF7FEFF 		bl	LED_BLUE_Write
 527              	.L17:
 180:main.c        ****                 }
 181:main.c        ****                 if (type=='9' && isMaster){//TURN OFF LED_RED
 528              		.loc 1 181 0
 529 0236 97F91731 		ldrsb	r3, [r7, #279]
 530 023a 392B     		cmp	r3, #57
 531 023c 17D1     		bne	.L18
 532              		.loc 1 181 0 is_stmt 0 discriminator 1
 533 023e 264B     		ldr	r3, .L22+32
 534 0240 1B68     		ldr	r3, [r3]
 535 0242 002B     		cmp	r3, #0
 536 0244 13D0     		beq	.L18
 182:main.c        ****                     sprintf((char *) local_write, "LED RED TURN OFF\n");
 537              		.loc 1 182 0 is_stmt 1
 538 0246 07F11403 		add	r3, r7, #20
 539 024a 294A     		ldr	r2, .L22+56
 540 024c 1C46     		mov	r4, r3
 541 024e 1546     		mov	r5, r2
 542 0250 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 543 0252 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 544 0254 2B68     		ldr	r3, [r5]
 545 0256 2380     		strh	r3, [r4]	@ movhi
 183:main.c        ****                     vSerialPutString(pxPort, (const signed char *) local_write, 64);
 546              		.loc 1 183 0
 547 0258 174B     		ldr	r3, .L22
 548 025a 1B68     		ldr	r3, [r3]
 549 025c 07F11401 		add	r1, r7, #20
 550 0260 4022     		movs	r2, #64
 551 0262 1846     		mov	r0, r3
 552 0264 FFF7FEFF 		bl	vSerialPutString
 184:main.c        ****                     LED_RED_Write(0);                    
 553              		.loc 1 184 0
 554 0268 0020     		movs	r0, #0
 555 026a FFF7FEFF 		bl	LED_RED_Write
 556              	.L18:
 185:main.c        ****                 }
 186:main.c        ****                 for (i=0; i<65; i++) {
 557              		.loc 1 186 0
 558 026e 0023     		movs	r3, #0
 559 0270 C7F81C31 		str	r3, [r7, #284]
 560 0274 0AE0     		b	.L19
 561              	.L20:
ARM GAS  C:\Users\shevi\AppData\Local\Temp\cchpMgoP.s 			page 15


 187:main.c        ****                     buffer[i] = ' ';
 562              		.loc 1 187 0 discriminator 3
 563 0276 134A     		ldr	r2, .L22+12
 564 0278 D7F81C31 		ldr	r3, [r7, #284]
 565 027c 1344     		add	r3, r3, r2
 566 027e 2022     		movs	r2, #32
 567 0280 1A70     		strb	r2, [r3]
 186:main.c        ****                     buffer[i] = ' ';
 568              		.loc 1 186 0 discriminator 3
 569 0282 D7F81C31 		ldr	r3, [r7, #284]
 570 0286 0133     		adds	r3, r3, #1
 571 0288 C7F81C31 		str	r3, [r7, #284]
 572              	.L19:
 186:main.c        ****                     buffer[i] = ' ';
 573              		.loc 1 186 0 is_stmt 0 discriminator 1
 574 028c D7F81C31 		ldr	r3, [r7, #284]
 575 0290 402B     		cmp	r3, #64
 576 0292 F0DD     		ble	.L20
 188:main.c        ****                 }
 189:main.c        ****                 go = 0;
 577              		.loc 1 189 0 is_stmt 1
 578 0294 0023     		movs	r3, #0
 579 0296 C7F81831 		str	r3, [r7, #280]
 190:main.c        ****                 i = 0;
 580              		.loc 1 190 0
 581 029a 0023     		movs	r3, #0
 582 029c C7F81C31 		str	r3, [r7, #284]
 191:main.c        ****                 type=0;                   
 583              		.loc 1 191 0
 584 02a0 0023     		movs	r3, #0
 585 02a2 87F81731 		strb	r3, [r7, #279]
 192:main.c        ****                 xSemaphoreGive(gatekeeper);
 586              		.loc 1 192 0
 587 02a6 064B     		ldr	r3, .L22+8
 588 02a8 1868     		ldr	r0, [r3]
 589 02aa 0023     		movs	r3, #0
 590 02ac 0022     		movs	r2, #0
 591 02ae 0021     		movs	r1, #0
 592 02b0 FFF7FEFF 		bl	xQueueGenericSend
 193:main.c        ****             }
 194:main.c        ****         }
 195:main.c        ****     }
 593              		.loc 1 195 0
 594 02b4 B5E6     		b	.L21
 595              	.L23:
 596 02b6 00BF     		.align	2
 597              	.L22:
 598 02b8 00000000 		.word	pxPort
 599 02bc 00000000 		.word	rx_receive
 600 02c0 00000000 		.word	gatekeeper
 601 02c4 00000000 		.word	buffer
 602 02c8 74000000 		.word	.LC5
 603 02cc 00000000 		.word	right_wheel
 604 02d0 00000000 		.word	left_wheel
 605 02d4 88000000 		.word	.LC6
 606 02d8 00000000 		.word	isMaster
 607 02dc A4000000 		.word	.LC7
ARM GAS  C:\Users\shevi\AppData\Local\Temp\cchpMgoP.s 			page 16


 608 02e0 B0000000 		.word	.LC8
 609 02e4 C0000000 		.word	.LC9
 610 02e8 D4000000 		.word	.LC10
 611 02ec E8000000 		.word	.LC11
 612 02f0 FC000000 		.word	.LC12
 613              		.cfi_endproc
 614              	.LFE70:
 615              		.size	receive_data, .-receive_data
 616              		.section	.rodata
 617 010e 0000     		.align	2
 618              	.LC13:
 619 0110 6C656674 		.ascii	"left wheel inc: %li\012\000"
 619      20776865 
 619      656C2069 
 619      6E633A20 
 619      256C690A 
 620              		.section	.text.PID_initialise,"ax",%progbits
 621              		.align	2
 622              		.global	PID_initialise
 623              		.thumb
 624              		.thumb_func
 625              		.type	PID_initialise, %function
 626              	PID_initialise:
 627              	.LFB71:
 196:main.c        **** }
 197:main.c        **** 
 198:main.c        **** void PID_initialise( void *p ) {
 628              		.loc 1 198 0
 629              		.cfi_startproc
 630              		@ args = 0, pretend = 0, frame = 264
 631              		@ frame_needed = 1, uses_anonymous_args = 0
 632 0000 90B5     		push	{r4, r7, lr}
 633              		.cfi_def_cfa_offset 12
 634              		.cfi_offset 4, -12
 635              		.cfi_offset 7, -8
 636              		.cfi_offset 14, -4
 637 0002 C3B0     		sub	sp, sp, #268
 638              		.cfi_def_cfa_offset 280
 639 0004 00AF     		add	r7, sp, #0
 640              		.cfi_def_cfa_register 7
 641 0006 3B1D     		adds	r3, r7, #4
 642 0008 1860     		str	r0, [r3]
 199:main.c        ****     
 200:main.c        ****     p = NULL;
 643              		.loc 1 200 0
 644 000a 3B1D     		adds	r3, r7, #4
 645 000c 0022     		movs	r2, #0
 646 000e 1A60     		str	r2, [r3]
 201:main.c        ****         
 202:main.c        ****     initialise_wheel_data(&left_wheel);
 647              		.loc 1 202 0
 648 0010 2748     		ldr	r0, .L28
 649 0012 FFF7FEFF 		bl	initialise_wheel_data
 203:main.c        ****     initialise_wheel_data(&right_wheel);
 650              		.loc 1 203 0
 651 0016 2748     		ldr	r0, .L28+4
 652 0018 FFF7FEFF 		bl	initialise_wheel_data
ARM GAS  C:\Users\shevi\AppData\Local\Temp\cchpMgoP.s 			page 17


 204:main.c        ****     
 205:main.c        ****     k.Kp = 40;
 653              		.loc 1 205 0
 654 001c 264A     		ldr	r2, .L28+8
 655 001e 4FF00003 		mov	r3, #0
 656 0022 264C     		ldr	r4, .L28+12
 657 0024 C2E90234 		strd	r3, [r2, #8]
 206:main.c        ****     k.Ki = 0;
 658              		.loc 1 206 0
 659 0028 234A     		ldr	r2, .L28+8
 660 002a 4FF00003 		mov	r3, #0
 661 002e 4FF00004 		mov	r4, #0
 662 0032 C2E90034 		strd	r3, [r2]
 207:main.c        ****     k.Kd = 20;
 663              		.loc 1 207 0
 664 0036 204A     		ldr	r2, .L28+8
 665 0038 4FF00003 		mov	r3, #0
 666 003c 204C     		ldr	r4, .L28+16
 667 003e C2E90434 		strd	r3, [r2, #16]
 668              	.L27:
 208:main.c        ****     
 209:main.c        ****     signed char *local_write[64];  
 210:main.c        ****     
 211:main.c        ****     while(1) {
 212:main.c        ****     	if(xSemaphoreTake(gatekeeper, 50000)) {              // wait until semaphore is free:
 669              		.loc 1 212 0
 670 0042 204B     		ldr	r3, .L28+20
 671 0044 1B68     		ldr	r3, [r3]
 672 0046 4CF25031 		movw	r1, #50000
 673 004a 1846     		mov	r0, r3
 674 004c FFF7FEFF 		bl	xQueueSemaphoreTake
 675 0050 0346     		mov	r3, r0
 676 0052 002B     		cmp	r3, #0
 677 0054 28D0     		beq	.L25
 213:main.c        ****             if (first_run==1){
 678              		.loc 1 213 0
 679 0056 1C4B     		ldr	r3, .L28+24
 680 0058 1B68     		ldr	r3, [r3]
 681 005a 012B     		cmp	r3, #1
 682 005c 08D1     		bne	.L26
 214:main.c        ****                 M1QuadDec_SetCounter(0);
 683              		.loc 1 214 0
 684 005e 0020     		movs	r0, #0
 685 0060 FFF7FEFF 		bl	M1QuadDec_SetCounter
 215:main.c        ****                 M2QuadDec_SetCounter(0);
 686              		.loc 1 215 0
 687 0064 0020     		movs	r0, #0
 688 0066 FFF7FEFF 		bl	M2QuadDec_SetCounter
 216:main.c        ****                 first_run=0;
 689              		.loc 1 216 0
 690 006a 174B     		ldr	r3, .L28+24
 691 006c 0022     		movs	r2, #0
 692 006e 1A60     		str	r2, [r3]
 693              	.L26:
 217:main.c        ****             }
 218:main.c        ****                 
 219:main.c        ****             mov_update_error(&left_wheel, &right_wheel);    // update error values
ARM GAS  C:\Users\shevi\AppData\Local\Temp\cchpMgoP.s 			page 18


 694              		.loc 1 219 0
 695 0070 1049     		ldr	r1, .L28+4
 696 0072 0F48     		ldr	r0, .L28
 697 0074 FFF7FEFF 		bl	mov_update_error
 220:main.c        ****             sprintf((char *) local_write, "left wheel inc: %li\n", left_wheel.cur_dest);
 698              		.loc 1 220 0
 699 0078 0D4B     		ldr	r3, .L28
 700 007a 5A68     		ldr	r2, [r3, #4]
 701 007c 07F10803 		add	r3, r7, #8
 702 0080 1249     		ldr	r1, .L28+28
 703 0082 1846     		mov	r0, r3
 704 0084 FFF7FEFF 		bl	sprintf
 221:main.c        ****             //vSerialPutString(pxPort, (signed char *) local_write, 64);
 222:main.c        ****             mov_get_PID(&left_wheel, &right_wheel, &k);     // calculate wheel voltage from errors 
 705              		.loc 1 222 0
 706 0088 0B4A     		ldr	r2, .L28+8
 707 008a 0A49     		ldr	r1, .L28+4
 708 008c 0848     		ldr	r0, .L28
 709 008e FFF7FEFF 		bl	mov_get_PID
 223:main.c        ****             
 224:main.c        ****             mov_Adj_Volt(&left_wheel, &right_wheel);        // adjust the voltage of the wheels
 710              		.loc 1 224 0
 711 0092 0849     		ldr	r1, .L28+4
 712 0094 0648     		ldr	r0, .L28
 713 0096 FFF7FEFF 		bl	mov_Adj_Volt
 225:main.c        **** 			xSemaphoreGive(gatekeeper);                     // give the semaphore back
 714              		.loc 1 225 0
 715 009a 0A4B     		ldr	r3, .L28+20
 716 009c 1868     		ldr	r0, [r3]
 717 009e 0023     		movs	r3, #0
 718 00a0 0022     		movs	r2, #0
 719 00a2 0021     		movs	r1, #0
 720 00a4 FFF7FEFF 		bl	xQueueGenericSend
 721              	.L25:
 226:main.c        ****     	}
 227:main.c        ****         vTaskDelay(10);                                     // wait 10ms before going again
 722              		.loc 1 227 0
 723 00a8 0A20     		movs	r0, #10
 724 00aa FFF7FEFF 		bl	vTaskDelay
 228:main.c        ****     }
 725              		.loc 1 228 0
 726 00ae C8E7     		b	.L27
 727              	.L29:
 728              		.align	2
 729              	.L28:
 730 00b0 00000000 		.word	left_wheel
 731 00b4 00000000 		.word	right_wheel
 732 00b8 00000000 		.word	k
 733 00bc 00004440 		.word	1078198272
 734 00c0 00003440 		.word	1077149696
 735 00c4 00000000 		.word	gatekeeper
 736 00c8 00000000 		.word	first_run
 737 00cc 10010000 		.word	.LC13
 738              		.cfi_endproc
 739              	.LFE71:
 740              		.size	PID_initialise, .-PID_initialise
 741              		.section	.text.prvHardwareSetup,"ax",%progbits
ARM GAS  C:\Users\shevi\AppData\Local\Temp\cchpMgoP.s 			page 19


 742              		.align	2
 743              		.thumb
 744              		.thumb_func
 745              		.type	prvHardwareSetup, %function
 746              	prvHardwareSetup:
 747              	.LFB72:
 229:main.c        **** }
 230:main.c        **** 
 231:main.c        **** void prvHardwareSetup( void ) {
 748              		.loc 1 231 0
 749              		.cfi_startproc
 750              		@ args = 0, pretend = 0, frame = 0
 751              		@ frame_needed = 1, uses_anonymous_args = 0
 752 0000 80B5     		push	{r7, lr}
 753              		.cfi_def_cfa_offset 8
 754              		.cfi_offset 7, -8
 755              		.cfi_offset 14, -4
 756 0002 00AF     		add	r7, sp, #0
 757              		.cfi_def_cfa_register 7
 232:main.c        ****     
 233:main.c        ****     /* Port layer functions that need to be copied into the vector table. */
 234:main.c        ****     extern void xPortPendSVHandler( void );
 235:main.c        ****     extern void xPortSysTickHandler( void );
 236:main.c        ****     extern void vPortSVCHandler( void );
 237:main.c        ****     extern cyisraddress CyRamVectors[];
 238:main.c        **** 
 239:main.c        **** 	/* Install the OS Interrupt Handlers. */
 240:main.c        **** 	CyRamVectors[ 11 ] = ( cyisraddress ) vPortSVCHandler;
 758              		.loc 1 240 0
 759 0004 1D4B     		ldr	r3, .L33
 760 0006 1E4A     		ldr	r2, .L33+4
 761 0008 DA62     		str	r2, [r3, #44]
 241:main.c        **** 	CyRamVectors[ 14 ] = ( cyisraddress ) xPortPendSVHandler;
 762              		.loc 1 241 0
 763 000a 1C4B     		ldr	r3, .L33
 764 000c 1D4A     		ldr	r2, .L33+8
 765 000e 9A63     		str	r2, [r3, #56]
 242:main.c        **** 	CyRamVectors[ 15 ] = ( cyisraddress ) xPortSysTickHandler;
 766              		.loc 1 242 0
 767 0010 1A4B     		ldr	r3, .L33
 768 0012 1D4A     		ldr	r2, .L33+12
 769 0014 DA63     		str	r2, [r3, #60]
 243:main.c        **** 
 244:main.c        **** 	/* Start-up the shared peripherals. */
 245:main.c        ****     PWM_M1_Start();
 770              		.loc 1 245 0
 771 0016 FFF7FEFF 		bl	PWM_M1_Start
 246:main.c        ****     PWM_M2_Start();
 772              		.loc 1 246 0
 773 001a FFF7FEFF 		bl	PWM_M2_Start
 247:main.c        ****     M1Clock_Start();
 774              		.loc 1 247 0
 775 001e FFF7FEFF 		bl	M1Clock_Start
 248:main.c        ****     MClock_Start();
 776              		.loc 1 248 0
 777 0022 FFF7FEFF 		bl	MClock_Start
 249:main.c        ****     
ARM GAS  C:\Users\shevi\AppData\Local\Temp\cchpMgoP.s 			page 20


 250:main.c        ****     M1QuadDec_Start();
 778              		.loc 1 250 0
 779 0026 FFF7FEFF 		bl	M1QuadDec_Start
 251:main.c        ****     M1QuadDec_Enable();
 780              		.loc 1 251 0
 781 002a FFF7FEFF 		bl	M1QuadDec_Enable
 252:main.c        ****     M1QuadDec_SetCounter(0);
 782              		.loc 1 252 0
 783 002e 0020     		movs	r0, #0
 784 0030 FFF7FEFF 		bl	M1QuadDec_SetCounter
 253:main.c        ****     
 254:main.c        ****     M2QuadDec_Start();
 785              		.loc 1 254 0
 786 0034 FFF7FEFF 		bl	M2QuadDec_Start
 255:main.c        ****     M2QuadDec_Enable();
 787              		.loc 1 255 0
 788 0038 FFF7FEFF 		bl	M2QuadDec_Enable
 256:main.c        ****     M2QuadDec_SetCounter(0);
 789              		.loc 1 256 0
 790 003c 0020     		movs	r0, #0
 791 003e FFF7FEFF 		bl	M2QuadDec_SetCounter
 257:main.c        **** 
 258:main.c        **** 	UART_1_Start();                         // Start the UART
 792              		.loc 1 258 0
 793 0042 FFF7FEFF 		bl	UART_1_Start
 259:main.c        ****     xSerialPortInitMinimal( 57600, 64 );    // Set the serial baud rate and buffer size in bytes
 794              		.loc 1 259 0
 795 0046 4021     		movs	r1, #64
 796 0048 4FF46140 		mov	r0, #57600
 797 004c FFF7FEFF 		bl	xSerialPortInitMinimal
 260:main.c        ****     
 261:main.c        ****     Timer_1_Start();
 798              		.loc 1 261 0
 799 0050 FFF7FEFF 		bl	Timer_1_Start
 262:main.c        **** 
 263:main.c        ****     /* Start up the master peripherals. */
 264:main.c        ****     if (isMaster){
 265:main.c        ****          
 266:main.c        ****     }
 267:main.c        ****     
 268:main.c        ****     /* Start up the slave peripherals. */
 269:main.c        ****     if (isMaster==0){
 800              		.loc 1 269 0
 801 0054 0D4B     		ldr	r3, .L33+16
 802 0056 1B68     		ldr	r3, [r3]
 803 0058 002B     		cmp	r3, #0
 804 005a 0DD1     		bne	.L32
 270:main.c        ****         
 271:main.c        ****         Clock_1_Start();
 805              		.loc 1 271 0
 806 005c FFF7FEFF 		bl	Clock_1_Start
 272:main.c        ****         PWM_1_Start();
 807              		.loc 1 272 0
 808 0060 FFF7FEFF 		bl	PWM_1_Start
 273:main.c        ****         PWM_1_WriteCompare(2100);//90 deg Camera;
 809              		.loc 1 273 0
 810 0064 40F63400 		movw	r0, #2100
ARM GAS  C:\Users\shevi\AppData\Local\Temp\cchpMgoP.s 			page 21


 811 0068 FFF7FEFF 		bl	PWM_1_WriteCompare
 274:main.c        ****         CyDelay(1000);
 812              		.loc 1 274 0
 813 006c 4FF47A70 		mov	r0, #1000
 814 0070 FFF7FEFF 		bl	CyDelay
 275:main.c        ****         PWM_1_Sleep();
 815              		.loc 1 275 0
 816 0074 FFF7FEFF 		bl	PWM_1_Sleep
 817              	.L32:
 276:main.c        ****         
 277:main.c        ****         
 278:main.c        ****         
 279:main.c        ****     }
 280:main.c        **** }
 818              		.loc 1 280 0
 819 0078 00BF     		nop
 820 007a 80BD     		pop	{r7, pc}
 821              	.L34:
 822              		.align	2
 823              	.L33:
 824 007c 00000000 		.word	CyRamVectors
 825 0080 00000000 		.word	vPortSVCHandler
 826 0084 00000000 		.word	xPortPendSVHandler
 827 0088 00000000 		.word	xPortSysTickHandler
 828 008c 00000000 		.word	isMaster
 829              		.cfi_endproc
 830              	.LFE72:
 831              		.size	prvHardwareSetup, .-prvHardwareSetup
 832              		.section	.text.vApplicationStackOverflowHook,"ax",%progbits
 833              		.align	2
 834              		.global	vApplicationStackOverflowHook
 835              		.thumb
 836              		.thumb_func
 837              		.type	vApplicationStackOverflowHook, %function
 838              	vApplicationStackOverflowHook:
 839              	.LFB73:
 281:main.c        **** 
 282:main.c        **** 
 283:main.c        **** // DON'T TOUCH THESE (PART OF FREERTOS)
 284:main.c        **** void vApplicationStackOverflowHook( TaskHandle_t pxTask, char *pcTaskName ) {
 840              		.loc 1 284 0
 841              		.cfi_startproc
 842              		@ args = 0, pretend = 0, frame = 16
 843              		@ frame_needed = 1, uses_anonymous_args = 0
 844              		@ link register save eliminated.
 845 0000 80B4     		push	{r7}
 846              		.cfi_def_cfa_offset 4
 847              		.cfi_offset 7, -4
 848 0002 85B0     		sub	sp, sp, #20
 849              		.cfi_def_cfa_offset 24
 850 0004 00AF     		add	r7, sp, #0
 851              		.cfi_def_cfa_register 7
 852 0006 7860     		str	r0, [r7, #4]
 853 0008 3960     		str	r1, [r7]
 854              	.LBB6:
 855              	.LBB7:
 856              		.file 2 "..\\..\\FreeRTOS_Source\\portable\\GCC\\ARM_CM3/portmacro.h"
ARM GAS  C:\Users\shevi\AppData\Local\Temp\cchpMgoP.s 			page 22


   1:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /*
   2:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * FreeRTOS Kernel V10.0.1
   3:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  *
   5:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * subject to the following conditions:
  11:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  12:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * copies or substantial portions of the Software.
  14:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  15:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  22:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * http://www.FreeRTOS.org
  23:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * http://aws.amazon.com/freertos
  24:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  25:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * 1 tab == 4 spaces!
  26:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  */
  27:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
  28:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
  29:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #ifndef PORTMACRO_H
  30:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define PORTMACRO_H
  31:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
  32:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #ifdef __cplusplus
  33:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** extern "C" {
  34:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
  35:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
  36:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------
  37:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * Port specific definitions.
  38:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  39:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * given hardware and compiler.
  41:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  42:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  * These settings should not be altered.
  43:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  *-----------------------------------------------------------
  44:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h ****  */
  45:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
  46:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /* Type definitions. */
  47:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portCHAR		char
  48:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portFLOAT		float
  49:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portDOUBLE		double
  50:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portLONG		long
  51:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portSHORT		short
  52:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portBASE_TYPE	long
  54:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
  55:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** typedef long BaseType_t;
  57:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** typedef unsigned long UBaseType_t;
ARM GAS  C:\Users\shevi\AppData\Local\Temp\cchpMgoP.s 			page 23


  58:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
  59:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	typedef uint16_t TickType_t;
  61:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #else
  63:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	typedef uint32_t TickType_t;
  64:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
  66:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	not need to be guarded with a critical section. */
  68:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
  70:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  71:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
  72:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /* Architecture specifics. */
  73:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  77:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
  78:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /* Scheduler utilities. */
  79:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portYIELD() 															\
  80:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** {																				\
  81:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 																				\
  84:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile( "isb" );													\
  88:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** }
  89:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
  90:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  95:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
  96:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /* Critical section management. */
  97:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** extern void vPortEnterCritical( void );
  98:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** extern void vPortExitCritical( void );
  99:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 106:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 107:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 108:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** (which build with all the ports) will build. */
 111:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 114:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
ARM GAS  C:\Users\shevi\AppData\Local\Temp\cchpMgoP.s 			page 24


 115:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /* Tickless idle/low power functionality. */
 116:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 117:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 118:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 119:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
 120:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 121:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 122:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /* Architecture specific optimisations. */
 123:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 124:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 125:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
 126:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 127:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 128:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 129:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Generic helper function. */
 130:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 131:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	{
 132:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	uint8_t ucReturn;
 133:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 134:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 135:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 		return ucReturn;
 136:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	}
 137:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 138:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Check the configuration. */
 139:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 140:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 141:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	#endif
 142:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 143:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 144:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 145:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 146:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 147:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	/*-----------------------------------------------------------*/
 148:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 149:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 150:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 151:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 152:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 153:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 154:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 155:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #ifdef configASSERT
 156:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 157:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 158:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
 159:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 160:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /* portNOP() is not required by this port. */
 161:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portNOP()
 162:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 163:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #define portINLINE	__inline
 164:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 165:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #ifndef portFORCE_INLINE
 166:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 167:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
 168:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 169:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 170:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** {
 171:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** uint32_t ulCurrentInterrupt;
ARM GAS  C:\Users\shevi\AppData\Local\Temp\cchpMgoP.s 			page 25


 172:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** BaseType_t xReturn;
 173:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 174:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 175:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 176:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 177:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 178:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	{
 179:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 		xReturn = pdFALSE;
 180:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	}
 181:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	else
 182:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	{
 183:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 		xReturn = pdTRUE;
 184:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	}
 185:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 186:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	return xReturn;
 187:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** }
 188:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 189:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 190:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 191:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 192:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** {
 193:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** uint32_t ulNewBASEPRI;
 194:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 
 195:..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile
 857              		.loc 2 195 0
 858              		.syntax unified
 859              	@ 195 "..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h" 1
 860 000a 4FF0A003 			mov r3, #160												
 861 000e 83F31188 		msr basepri, r3											
 862 0012 BFF36F8F 		isb														
 863 0016 BFF34F8F 		dsb														
 864              	
 865              	@ 0 "" 2
 866              		.thumb
 867              		.syntax unified
 868 001a FB60     		str	r3, [r7, #12]
 869              	.L36:
 870              	.LBE7:
 871              	.LBE6:
 285:main.c        **** 	/* The stack space has been execeeded for a task, considering allocating more. */
 286:main.c        **** 	taskDISABLE_INTERRUPTS();
 287:main.c        **** 	for( ;; );
 872              		.loc 1 287 0 discriminator 1
 873 001c FEE7     		b	.L36
 874              		.cfi_endproc
 875              	.LFE73:
 876              		.size	vApplicationStackOverflowHook, .-vApplicationStackOverflowHook
 877 001e 00BF     		.section	.text.vApplicationMallocFailedHook,"ax",%progbits
 878              		.align	2
 879              		.global	vApplicationMallocFailedHook
 880              		.thumb
 881              		.thumb_func
 882              		.type	vApplicationMallocFailedHook, %function
 883              	vApplicationMallocFailedHook:
 884              	.LFB74:
 288:main.c        **** }
 289:main.c        **** void vApplicationMallocFailedHook( void ) {
ARM GAS  C:\Users\shevi\AppData\Local\Temp\cchpMgoP.s 			page 26


 885              		.loc 1 289 0
 886              		.cfi_startproc
 887              		@ args = 0, pretend = 0, frame = 8
 888              		@ frame_needed = 1, uses_anonymous_args = 0
 889              		@ link register save eliminated.
 890 0000 80B4     		push	{r7}
 891              		.cfi_def_cfa_offset 4
 892              		.cfi_offset 7, -4
 893 0002 83B0     		sub	sp, sp, #12
 894              		.cfi_def_cfa_offset 16
 895 0004 00AF     		add	r7, sp, #0
 896              		.cfi_def_cfa_register 7
 897              	.LBB8:
 898              	.LBB9:
 899              		.loc 2 195 0
 900              		.syntax unified
 901              	@ 195 "..\..\FreeRTOS_Source\portable\GCC\ARM_CM3/portmacro.h" 1
 902 0006 4FF0A003 			mov r3, #160												
 903 000a 83F31188 		msr basepri, r3											
 904 000e BFF36F8F 		isb														
 905 0012 BFF34F8F 		dsb														
 906              	
 907              	@ 0 "" 2
 908              		.thumb
 909              		.syntax unified
 910 0016 7B60     		str	r3, [r7, #4]
 911              	.L38:
 912              	.LBE9:
 913              	.LBE8:
 290:main.c        **** 	/* The heap space has been execeeded. */
 291:main.c        **** 	taskDISABLE_INTERRUPTS();
 292:main.c        **** 	for( ;; );
 914              		.loc 1 292 0 discriminator 1
 915 0018 FEE7     		b	.L38
 916              		.cfi_endproc
 917              	.LFE74:
 918              		.size	vApplicationMallocFailedHook, .-vApplicationMallocFailedHook
 919 001a 00BF     		.text
 920              	.Letext0:
 921              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 922              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 923              		.file 5 "Generated_Source\\PSoC5/cytypes.h"
 924              		.file 6 "..\\..\\FreeRTOS_Source\\include/task.h"
 925              		.file 7 "..\\..\\FreeRTOS_Source\\include/queue.h"
 926              		.file 8 "..\\..\\FreeRTOS_Source\\include/semphr.h"
 927              		.file 9 "..\\..\\FreeRTOS_Source\\include/serial.h"
 928              		.file 10 "movement.h"
 929              		.file 11 "Generated_Source\\PSoC5/core_cm3.h"
 930              		.section	.debug_info,"",%progbits
 931              	.Ldebug_info0:
 932 0000 AD040000 		.4byte	0x4ad
 933 0004 0400     		.2byte	0x4
 934 0006 00000000 		.4byte	.Ldebug_abbrev0
 935 000a 04       		.byte	0x4
 936 000b 01       		.uleb128 0x1
 937 000c FB000000 		.4byte	.LASF60
 938 0010 0C       		.byte	0xc
ARM GAS  C:\Users\shevi\AppData\Local\Temp\cchpMgoP.s 			page 27


 939 0011 A9030000 		.4byte	.LASF61
 940 0015 00000000 		.4byte	.LASF62
 941 0019 00000000 		.4byte	.Ldebug_ranges0+0
 942 001d 00000000 		.4byte	0
 943 0021 00000000 		.4byte	.Ldebug_line0
 944 0025 02       		.uleb128 0x2
 945 0026 01       		.byte	0x1
 946 0027 06       		.byte	0x6
 947 0028 DB020000 		.4byte	.LASF0
 948 002c 03       		.uleb128 0x3
 949 002d 65020000 		.4byte	.LASF4
 950 0031 03       		.byte	0x3
 951 0032 1D       		.byte	0x1d
 952 0033 37000000 		.4byte	0x37
 953 0037 02       		.uleb128 0x2
 954 0038 01       		.byte	0x1
 955 0039 08       		.byte	0x8
 956 003a 9C020000 		.4byte	.LASF1
 957 003e 02       		.uleb128 0x2
 958 003f 02       		.byte	0x2
 959 0040 05       		.byte	0x5
 960 0041 B6010000 		.4byte	.LASF2
 961 0045 02       		.uleb128 0x2
 962 0046 02       		.byte	0x2
 963 0047 07       		.byte	0x7
 964 0048 3A030000 		.4byte	.LASF3
 965 004c 03       		.uleb128 0x3
 966 004d D4030000 		.4byte	.LASF5
 967 0051 03       		.byte	0x3
 968 0052 3F       		.byte	0x3f
 969 0053 57000000 		.4byte	0x57
 970 0057 02       		.uleb128 0x2
 971 0058 04       		.byte	0x4
 972 0059 05       		.byte	0x5
 973 005a 34020000 		.4byte	.LASF6
 974 005e 03       		.uleb128 0x3
 975 005f 95010000 		.4byte	.LASF7
 976 0063 03       		.byte	0x3
 977 0064 41       		.byte	0x41
 978 0065 69000000 		.4byte	0x69
 979 0069 02       		.uleb128 0x2
 980 006a 04       		.byte	0x4
 981 006b 07       		.byte	0x7
 982 006c B0030000 		.4byte	.LASF8
 983 0070 02       		.uleb128 0x2
 984 0071 08       		.byte	0x8
 985 0072 05       		.byte	0x5
 986 0073 0D020000 		.4byte	.LASF9
 987 0077 02       		.uleb128 0x2
 988 0078 08       		.byte	0x8
 989 0079 07       		.byte	0x7
 990 007a E7020000 		.4byte	.LASF10
 991 007e 04       		.uleb128 0x4
 992 007f 04       		.byte	0x4
 993 0080 05       		.byte	0x5
 994 0081 696E7400 		.ascii	"int\000"
 995 0085 02       		.uleb128 0x2
ARM GAS  C:\Users\shevi\AppData\Local\Temp\cchpMgoP.s 			page 28


 996 0086 04       		.byte	0x4
 997 0087 07       		.byte	0x7
 998 0088 07030000 		.4byte	.LASF11
 999 008c 03       		.uleb128 0x3
 1000 008d CA010000 		.4byte	.LASF12
 1001 0091 04       		.byte	0x4
 1002 0092 18       		.byte	0x18
 1003 0093 2C000000 		.4byte	0x2c
 1004 0097 03       		.uleb128 0x3
 1005 0098 67030000 		.4byte	.LASF13
 1006 009c 04       		.byte	0x4
 1007 009d 2C       		.byte	0x2c
 1008 009e 4C000000 		.4byte	0x4c
 1009 00a2 03       		.uleb128 0x3
 1010 00a3 FE020000 		.4byte	.LASF14
 1011 00a7 04       		.byte	0x4
 1012 00a8 30       		.byte	0x30
 1013 00a9 5E000000 		.4byte	0x5e
 1014 00ad 02       		.uleb128 0x2
 1015 00ae 04       		.byte	0x4
 1016 00af 04       		.byte	0x4
 1017 00b0 07020000 		.4byte	.LASF15
 1018 00b4 02       		.uleb128 0x2
 1019 00b5 08       		.byte	0x8
 1020 00b6 04       		.byte	0x4
 1021 00b7 C2030000 		.4byte	.LASF16
 1022 00bb 02       		.uleb128 0x2
 1023 00bc 01       		.byte	0x1
 1024 00bd 08       		.byte	0x8
 1025 00be 4D030000 		.4byte	.LASF17
 1026 00c2 05       		.uleb128 0x5
 1027 00c3 A9010000 		.4byte	.LASF18
 1028 00c7 05       		.byte	0x5
 1029 00c8 4E02     		.2byte	0x24e
 1030 00ca CE000000 		.4byte	0xce
 1031 00ce 06       		.uleb128 0x6
 1032 00cf 04       		.byte	0x4
 1033 00d0 D4000000 		.4byte	0xd4
 1034 00d4 07       		.uleb128 0x7
 1035 00d5 02       		.uleb128 0x2
 1036 00d6 08       		.byte	0x8
 1037 00d7 04       		.byte	0x4
 1038 00d8 89010000 		.4byte	.LASF19
 1039 00dc 02       		.uleb128 0x2
 1040 00dd 04       		.byte	0x4
 1041 00de 07       		.byte	0x7
 1042 00df D1000000 		.4byte	.LASF20
 1043 00e3 08       		.uleb128 0x8
 1044 00e4 04       		.byte	0x4
 1045 00e5 06       		.uleb128 0x6
 1046 00e6 04       		.byte	0x4
 1047 00e7 BB000000 		.4byte	0xbb
 1048 00eb 03       		.uleb128 0x3
 1049 00ec 14030000 		.4byte	.LASF21
 1050 00f0 02       		.byte	0x2
 1051 00f1 38       		.byte	0x38
 1052 00f2 57000000 		.4byte	0x57
ARM GAS  C:\Users\shevi\AppData\Local\Temp\cchpMgoP.s 			page 29


 1053 00f6 03       		.uleb128 0x3
 1054 00f7 AA020000 		.4byte	.LASF22
 1055 00fb 02       		.byte	0x2
 1056 00fc 3F       		.byte	0x3f
 1057 00fd A2000000 		.4byte	0xa2
 1058 0101 03       		.uleb128 0x3
 1059 0102 EE000000 		.4byte	.LASF23
 1060 0106 06       		.byte	0x6
 1061 0107 3E       		.byte	0x3e
 1062 0108 0C010000 		.4byte	0x10c
 1063 010c 06       		.uleb128 0x6
 1064 010d 04       		.byte	0x4
 1065 010e 12010000 		.4byte	0x112
 1066 0112 09       		.uleb128 0x9
 1067 0113 52020000 		.4byte	.LASF63
 1068 0117 03       		.uleb128 0x3
 1069 0118 DE030000 		.4byte	.LASF24
 1070 011c 07       		.byte	0x7
 1071 011d 2E       		.byte	0x2e
 1072 011e E3000000 		.4byte	0xe3
 1073 0122 03       		.uleb128 0x3
 1074 0123 BF020000 		.4byte	.LASF25
 1075 0127 08       		.byte	0x8
 1076 0128 25       		.byte	0x25
 1077 0129 17010000 		.4byte	0x117
 1078 012d 03       		.uleb128 0x3
 1079 012e 82030000 		.4byte	.LASF26
 1080 0132 09       		.byte	0x9
 1081 0133 1F       		.byte	0x1f
 1082 0134 E3000000 		.4byte	0xe3
 1083 0138 0A       		.uleb128 0xa
 1084 0139 24       		.byte	0x24
 1085 013a 0A       		.byte	0xa
 1086 013b 03       		.byte	0x3
 1087 013c AD010000 		.4byte	0x1ad
 1088 0140 0B       		.uleb128 0xb
 1089 0141 D1020000 		.4byte	.LASF27
 1090 0145 0A       		.byte	0xa
 1091 0146 04       		.byte	0x4
 1092 0147 57000000 		.4byte	0x57
 1093 014b 00       		.byte	0
 1094 014c 0B       		.uleb128 0xb
 1095 014d C8000000 		.4byte	.LASF28
 1096 0151 0A       		.byte	0xa
 1097 0152 05       		.byte	0x5
 1098 0153 57000000 		.4byte	0x57
 1099 0157 04       		.byte	0x4
 1100 0158 0B       		.uleb128 0xb
 1101 0159 2F030000 		.4byte	.LASF29
 1102 015d 0A       		.byte	0xa
 1103 015e 06       		.byte	0x6
 1104 015f 7E000000 		.4byte	0x7e
 1105 0163 08       		.byte	0x8
 1106 0164 0B       		.uleb128 0xb
 1107 0165 EC030000 		.4byte	.LASF30
 1108 0169 0A       		.byte	0xa
 1109 016a 07       		.byte	0x7
ARM GAS  C:\Users\shevi\AppData\Local\Temp\cchpMgoP.s 			page 30


 1110 016b 7E000000 		.4byte	0x7e
 1111 016f 0C       		.byte	0xc
 1112 0170 0B       		.uleb128 0xb
 1113 0171 B5020000 		.4byte	.LASF31
 1114 0175 0A       		.byte	0xa
 1115 0176 08       		.byte	0x8
 1116 0177 7E000000 		.4byte	0x7e
 1117 017b 10       		.byte	0x10
 1118 017c 0B       		.uleb128 0xb
 1119 017d 52030000 		.4byte	.LASF32
 1120 0181 0A       		.byte	0xa
 1121 0182 09       		.byte	0x9
 1122 0183 7E000000 		.4byte	0x7e
 1123 0187 14       		.byte	0x14
 1124 0188 0C       		.uleb128 0xc
 1125 0189 696E6300 		.ascii	"inc\000"
 1126 018d 0A       		.byte	0xa
 1127 018e 0A       		.byte	0xa
 1128 018f 7E000000 		.4byte	0x7e
 1129 0193 18       		.byte	0x18
 1130 0194 0B       		.uleb128 0xb
 1131 0195 2A030000 		.4byte	.LASF33
 1132 0199 0A       		.byte	0xa
 1133 019a 0B       		.byte	0xb
 1134 019b A2000000 		.4byte	0xa2
 1135 019f 1C       		.byte	0x1c
 1136 01a0 0B       		.uleb128 0xb
 1137 01a1 48020000 		.4byte	.LASF34
 1138 01a5 0A       		.byte	0xa
 1139 01a6 0C       		.byte	0xc
 1140 01a7 A2000000 		.4byte	0xa2
 1141 01ab 20       		.byte	0x20
 1142 01ac 00       		.byte	0
 1143 01ad 03       		.uleb128 0x3
 1144 01ae 3D020000 		.4byte	.LASF35
 1145 01b2 0A       		.byte	0xa
 1146 01b3 0D       		.byte	0xd
 1147 01b4 38010000 		.4byte	0x138
 1148 01b8 0A       		.uleb128 0xa
 1149 01b9 18       		.byte	0x18
 1150 01ba 0A       		.byte	0xa
 1151 01bb 0F       		.byte	0xf
 1152 01bc E2010000 		.4byte	0x1e2
 1153 01c0 0C       		.uleb128 0xc
 1154 01c1 4B6900   		.ascii	"Ki\000"
 1155 01c4 0A       		.byte	0xa
 1156 01c5 10       		.byte	0x10
 1157 01c6 B4000000 		.4byte	0xb4
 1158 01ca 00       		.byte	0
 1159 01cb 0C       		.uleb128 0xc
 1160 01cc 4B7000   		.ascii	"Kp\000"
 1161 01cf 0A       		.byte	0xa
 1162 01d0 11       		.byte	0x11
 1163 01d1 B4000000 		.4byte	0xb4
 1164 01d5 08       		.byte	0x8
 1165 01d6 0C       		.uleb128 0xc
 1166 01d7 4B6400   		.ascii	"Kd\000"
ARM GAS  C:\Users\shevi\AppData\Local\Temp\cchpMgoP.s 			page 31


 1167 01da 0A       		.byte	0xa
 1168 01db 12       		.byte	0x12
 1169 01dc B4000000 		.4byte	0xb4
 1170 01e0 10       		.byte	0x10
 1171 01e1 00       		.byte	0
 1172 01e2 03       		.uleb128 0x3
 1173 01e3 A0010000 		.4byte	.LASF36
 1174 01e7 0A       		.byte	0xa
 1175 01e8 13       		.byte	0x13
 1176 01e9 B8010000 		.4byte	0x1b8
 1177 01ed 0D       		.uleb128 0xd
 1178 01ee F2030000 		.4byte	.LASF64
 1179 01f2 02       		.byte	0x2
 1180 01f3 BF       		.byte	0xbf
 1181 01f4 03       		.byte	0x3
 1182 01f5 05020000 		.4byte	0x205
 1183 01f9 0E       		.uleb128 0xe
 1184 01fa 37040000 		.4byte	.LASF65
 1185 01fe 02       		.byte	0x2
 1186 01ff C1       		.byte	0xc1
 1187 0200 A2000000 		.4byte	0xa2
 1188 0204 00       		.byte	0
 1189 0205 0F       		.uleb128 0xf
 1190 0206 5D030000 		.4byte	.LASF66
 1191 020a 01       		.byte	0x1
 1192 020b 5B       		.byte	0x5b
 1193 020c 7E000000 		.4byte	0x7e
 1194 0210 00000000 		.4byte	.LFB69
 1195 0214 E4000000 		.4byte	.LFE69-.LFB69
 1196 0218 01       		.uleb128 0x1
 1197 0219 9C       		.byte	0x9c
 1198 021a 2E020000 		.4byte	0x22e
 1199 021e 10       		.uleb128 0x10
 1200 021f 72756E00 		.ascii	"run\000"
 1201 0223 01       		.byte	0x1
 1202 0224 5C       		.byte	0x5c
 1203 0225 2E020000 		.4byte	0x22e
 1204 0229 03       		.uleb128 0x3
 1205 022a 91       		.byte	0x91
 1206 022b F07D     		.sleb128 -272
 1207 022d 00       		.byte	0
 1208 022e 11       		.uleb128 0x11
 1209 022f 3E020000 		.4byte	0x23e
 1210 0233 3E020000 		.4byte	0x23e
 1211 0237 12       		.uleb128 0x12
 1212 0238 DC000000 		.4byte	0xdc
 1213 023c 3F       		.byte	0x3f
 1214 023d 00       		.byte	0
 1215 023e 06       		.uleb128 0x6
 1216 023f 04       		.byte	0x4
 1217 0240 44020000 		.4byte	0x244
 1218 0244 13       		.uleb128 0x13
 1219 0245 25000000 		.4byte	0x25
 1220 0249 14       		.uleb128 0x14
 1221 024a B6000000 		.4byte	.LASF40
 1222 024e 01       		.byte	0x1
 1223 024f 77       		.byte	0x77
ARM GAS  C:\Users\shevi\AppData\Local\Temp\cchpMgoP.s 			page 32


 1224 0250 00000000 		.4byte	.LFB70
 1225 0254 F4020000 		.4byte	.LFE70-.LFB70
 1226 0258 01       		.uleb128 0x1
 1227 0259 9C       		.byte	0x9c
 1228 025a B1020000 		.4byte	0x2b1
 1229 025e 15       		.uleb128 0x15
 1230 025f 7000     		.ascii	"p\000"
 1231 0261 01       		.byte	0x1
 1232 0262 77       		.byte	0x77
 1233 0263 E3000000 		.4byte	0xe3
 1234 0267 03       		.uleb128 0x3
 1235 0268 91       		.byte	0x91
 1236 0269 D47D     		.sleb128 -300
 1237 026b 16       		.uleb128 0x16
 1238 026c 28020000 		.4byte	.LASF37
 1239 0270 01       		.byte	0x1
 1240 0271 7B       		.byte	0x7b
 1241 0272 2E020000 		.4byte	0x22e
 1242 0276 03       		.uleb128 0x3
 1243 0277 91       		.byte	0x91
 1244 0278 E47D     		.sleb128 -284
 1245 027a 10       		.uleb128 0x10
 1246 027b 6900     		.ascii	"i\000"
 1247 027d 01       		.byte	0x1
 1248 027e 7C       		.byte	0x7c
 1249 027f 7E000000 		.4byte	0x7e
 1250 0283 02       		.uleb128 0x2
 1251 0284 91       		.byte	0x91
 1252 0285 6C       		.sleb128 -20
 1253 0286 10       		.uleb128 0x10
 1254 0287 676F00   		.ascii	"go\000"
 1255 028a 01       		.byte	0x1
 1256 028b 7D       		.byte	0x7d
 1257 028c 7E000000 		.4byte	0x7e
 1258 0290 02       		.uleb128 0x2
 1259 0291 91       		.byte	0x91
 1260 0292 68       		.sleb128 -24
 1261 0293 16       		.uleb128 0x16
 1262 0294 62030000 		.4byte	.LASF38
 1263 0298 01       		.byte	0x1
 1264 0299 7E       		.byte	0x7e
 1265 029a 25000000 		.4byte	0x25
 1266 029e 02       		.uleb128 0x2
 1267 029f 91       		.byte	0x91
 1268 02a0 67       		.sleb128 -25
 1269 02a1 16       		.uleb128 0x16
 1270 02a2 C3000000 		.4byte	.LASF39
 1271 02a6 01       		.byte	0x1
 1272 02a7 7F       		.byte	0x7f
 1273 02a8 B1020000 		.4byte	0x2b1
 1274 02ac 03       		.uleb128 0x3
 1275 02ad 91       		.byte	0x91
 1276 02ae D87D     		.sleb128 -296
 1277 02b0 00       		.byte	0
 1278 02b1 11       		.uleb128 0x11
 1279 02b2 BB000000 		.4byte	0xbb
 1280 02b6 C1020000 		.4byte	0x2c1
ARM GAS  C:\Users\shevi\AppData\Local\Temp\cchpMgoP.s 			page 33


 1281 02ba 12       		.uleb128 0x12
 1282 02bb DC000000 		.4byte	0xdc
 1283 02bf 09       		.byte	0x9
 1284 02c0 00       		.byte	0
 1285 02c1 14       		.uleb128 0x14
 1286 02c2 28040000 		.4byte	.LASF41
 1287 02c6 01       		.byte	0x1
 1288 02c7 C6       		.byte	0xc6
 1289 02c8 00000000 		.4byte	.LFB71
 1290 02cc D0000000 		.4byte	.LFE71-.LFB71
 1291 02d0 01       		.uleb128 0x1
 1292 02d1 9C       		.byte	0x9c
 1293 02d2 F3020000 		.4byte	0x2f3
 1294 02d6 15       		.uleb128 0x15
 1295 02d7 7000     		.ascii	"p\000"
 1296 02d9 01       		.byte	0x1
 1297 02da C6       		.byte	0xc6
 1298 02db E3000000 		.4byte	0xe3
 1299 02df 03       		.uleb128 0x3
 1300 02e0 91       		.byte	0x91
 1301 02e1 EC7D     		.sleb128 -276
 1302 02e3 16       		.uleb128 0x16
 1303 02e4 28020000 		.4byte	.LASF37
 1304 02e8 01       		.byte	0x1
 1305 02e9 D1       		.byte	0xd1
 1306 02ea F3020000 		.4byte	0x2f3
 1307 02ee 03       		.uleb128 0x3
 1308 02ef 91       		.byte	0x91
 1309 02f0 F07D     		.sleb128 -272
 1310 02f2 00       		.byte	0
 1311 02f3 11       		.uleb128 0x11
 1312 02f4 03030000 		.4byte	0x303
 1313 02f8 03030000 		.4byte	0x303
 1314 02fc 12       		.uleb128 0x12
 1315 02fd DC000000 		.4byte	0xdc
 1316 0301 3F       		.byte	0x3f
 1317 0302 00       		.byte	0
 1318 0303 06       		.uleb128 0x6
 1319 0304 04       		.byte	0x4
 1320 0305 25000000 		.4byte	0x25
 1321 0309 17       		.uleb128 0x17
 1322 030a 91030000 		.4byte	.LASF67
 1323 030e 01       		.byte	0x1
 1324 030f E7       		.byte	0xe7
 1325 0310 00000000 		.4byte	.LFB72
 1326 0314 90000000 		.4byte	.LFE72-.LFB72
 1327 0318 01       		.uleb128 0x1
 1328 0319 9C       		.byte	0x9c
 1329 031a 3F030000 		.4byte	0x33f
 1330 031e 18       		.uleb128 0x18
 1331 031f 6F030000 		.4byte	.LASF42
 1332 0323 01       		.byte	0x1
 1333 0324 EA       		.byte	0xea
 1334 0325 18       		.uleb128 0x18
 1335 0326 DA000000 		.4byte	.LASF43
 1336 032a 01       		.byte	0x1
 1337 032b EB       		.byte	0xeb
ARM GAS  C:\Users\shevi\AppData\Local\Temp\cchpMgoP.s 			page 34


 1338 032c 18       		.uleb128 0x18
 1339 032d D2010000 		.4byte	.LASF44
 1340 0331 01       		.byte	0x1
 1341 0332 EC       		.byte	0xec
 1342 0333 19       		.uleb128 0x19
 1343 0334 A9000000 		.4byte	.LASF50
 1344 0338 01       		.byte	0x1
 1345 0339 ED       		.byte	0xed
 1346 033a 3F030000 		.4byte	0x33f
 1347 033e 00       		.byte	0
 1348 033f 11       		.uleb128 0x11
 1349 0340 C2000000 		.4byte	0xc2
 1350 0344 4A030000 		.4byte	0x34a
 1351 0348 1A       		.uleb128 0x1a
 1352 0349 00       		.byte	0
 1353 034a 1B       		.uleb128 0x1b
 1354 034b E2010000 		.4byte	.LASF45
 1355 034f 01       		.byte	0x1
 1356 0350 1C01     		.2byte	0x11c
 1357 0352 00000000 		.4byte	.LFB73
 1358 0356 1E000000 		.4byte	.LFE73-.LFB73
 1359 035a 01       		.uleb128 0x1
 1360 035b 9C       		.byte	0x9c
 1361 035c A2030000 		.4byte	0x3a2
 1362 0360 1C       		.uleb128 0x1c
 1363 0361 00020000 		.4byte	.LASF46
 1364 0365 01       		.byte	0x1
 1365 0366 1C01     		.2byte	0x11c
 1366 0368 01010000 		.4byte	0x101
 1367 036c 02       		.uleb128 0x2
 1368 036d 91       		.byte	0x91
 1369 036e 6C       		.sleb128 -20
 1370 036f 1C       		.uleb128 0x1c
 1371 0370 44040000 		.4byte	.LASF47
 1372 0374 01       		.byte	0x1
 1373 0375 1C01     		.2byte	0x11c
 1374 0377 E5000000 		.4byte	0xe5
 1375 037b 02       		.uleb128 0x2
 1376 037c 91       		.byte	0x91
 1377 037d 68       		.sleb128 -24
 1378 037e 1D       		.uleb128 0x1d
 1379 037f ED010000 		.4byte	0x1ed
 1380 0383 0A000000 		.4byte	.LBB6
 1381 0387 12000000 		.4byte	.LBE6-.LBB6
 1382 038b 01       		.byte	0x1
 1383 038c 1E01     		.2byte	0x11e
 1384 038e 1E       		.uleb128 0x1e
 1385 038f 0A000000 		.4byte	.LBB7
 1386 0393 12000000 		.4byte	.LBE7-.LBB7
 1387 0397 1F       		.uleb128 0x1f
 1388 0398 F9010000 		.4byte	0x1f9
 1389 039c 02       		.uleb128 0x2
 1390 039d 91       		.byte	0x91
 1391 039e 74       		.sleb128 -12
 1392 039f 00       		.byte	0
 1393 03a0 00       		.byte	0
 1394 03a1 00       		.byte	0
ARM GAS  C:\Users\shevi\AppData\Local\Temp\cchpMgoP.s 			page 35


 1395 03a2 1B       		.uleb128 0x1b
 1396 03a3 76020000 		.4byte	.LASF48
 1397 03a7 01       		.byte	0x1
 1398 03a8 2101     		.2byte	0x121
 1399 03aa 00000000 		.4byte	.LFB74
 1400 03ae 1A000000 		.4byte	.LFE74-.LFB74
 1401 03b2 01       		.uleb128 0x1
 1402 03b3 9C       		.byte	0x9c
 1403 03b4 DC030000 		.4byte	0x3dc
 1404 03b8 1D       		.uleb128 0x1d
 1405 03b9 ED010000 		.4byte	0x1ed
 1406 03bd 06000000 		.4byte	.LBB8
 1407 03c1 12000000 		.4byte	.LBE8-.LBB8
 1408 03c5 01       		.byte	0x1
 1409 03c6 2301     		.2byte	0x123
 1410 03c8 1E       		.uleb128 0x1e
 1411 03c9 06000000 		.4byte	.LBB9
 1412 03cd 12000000 		.4byte	.LBE9-.LBB9
 1413 03d1 1F       		.uleb128 0x1f
 1414 03d2 F9010000 		.4byte	0x1f9
 1415 03d6 02       		.uleb128 0x2
 1416 03d7 91       		.byte	0x91
 1417 03d8 74       		.sleb128 -12
 1418 03d9 00       		.byte	0
 1419 03da 00       		.byte	0
 1420 03db 00       		.byte	0
 1421 03dc 16       		.uleb128 0x16
 1422 03dd 6F020000 		.4byte	.LASF49
 1423 03e1 01       		.byte	0x1
 1424 03e2 49       		.byte	0x49
 1425 03e3 2D010000 		.4byte	0x12d
 1426 03e7 05       		.uleb128 0x5
 1427 03e8 03       		.byte	0x3
 1428 03e9 00000000 		.4byte	pxPort
 1429 03ed 20       		.uleb128 0x20
 1430 03ee 10040000 		.4byte	.LASF51
 1431 03f2 0B       		.byte	0xb
 1432 03f3 9606     		.2byte	0x696
 1433 03f5 F9030000 		.4byte	0x3f9
 1434 03f9 21       		.uleb128 0x21
 1435 03fa 97000000 		.4byte	0x97
 1436 03fe 22       		.uleb128 0x22
 1437 03ff 1F030000 		.4byte	.LASF52
 1438 0403 01       		.byte	0x1
 1439 0404 4A       		.byte	0x4a
 1440 0405 22010000 		.4byte	0x122
 1441 0409 05       		.uleb128 0x5
 1442 040a 03       		.byte	0x3
 1443 040b 00000000 		.4byte	gatekeeper
 1444 040f 22       		.uleb128 0x22
 1445 0410 1B020000 		.4byte	.LASF53
 1446 0414 01       		.byte	0x1
 1447 0415 4B       		.byte	0x4b
 1448 0416 17010000 		.4byte	0x117
 1449 041a 05       		.uleb128 0x5
 1450 041b 03       		.byte	0x3
 1451 041c 00000000 		.4byte	queue_handle
ARM GAS  C:\Users\shevi\AppData\Local\Temp\cchpMgoP.s 			page 36


 1452 0420 22       		.uleb128 0x22
 1453 0421 C9030000 		.4byte	.LASF54
 1454 0425 01       		.byte	0x1
 1455 0426 4F       		.byte	0x4f
 1456 0427 25000000 		.4byte	0x25
 1457 042b 05       		.uleb128 0x5
 1458 042c 03       		.byte	0x3
 1459 042d 00000000 		.4byte	rx_receive
 1460 0431 11       		.uleb128 0x11
 1461 0432 37000000 		.4byte	0x37
 1462 0436 41040000 		.4byte	0x441
 1463 043a 12       		.uleb128 0x12
 1464 043b DC000000 		.4byte	0xdc
 1465 043f 3F       		.byte	0x3f
 1466 0440 00       		.byte	0
 1467 0441 22       		.uleb128 0x22
 1468 0442 A2030000 		.4byte	.LASF55
 1469 0446 01       		.byte	0x1
 1470 0447 50       		.byte	0x50
 1471 0448 31040000 		.4byte	0x431
 1472 044c 05       		.uleb128 0x5
 1473 044d 03       		.byte	0x3
 1474 044e 00000000 		.4byte	buffer
 1475 0452 22       		.uleb128 0x22
 1476 0453 1D040000 		.4byte	.LASF56
 1477 0457 01       		.byte	0x1
 1478 0458 53       		.byte	0x53
 1479 0459 AD010000 		.4byte	0x1ad
 1480 045d 05       		.uleb128 0x5
 1481 045e 03       		.byte	0x3
 1482 045f 00000000 		.4byte	left_wheel
 1483 0463 22       		.uleb128 0x22
 1484 0464 04040000 		.4byte	.LASF57
 1485 0468 01       		.byte	0x1
 1486 0469 54       		.byte	0x54
 1487 046a AD010000 		.4byte	0x1ad
 1488 046e 05       		.uleb128 0x5
 1489 046f 03       		.byte	0x3
 1490 0470 00000000 		.4byte	right_wheel
 1491 0474 23       		.uleb128 0x23
 1492 0475 6B00     		.ascii	"k\000"
 1493 0477 01       		.byte	0x1
 1494 0478 55       		.byte	0x55
 1495 0479 E2010000 		.4byte	0x1e2
 1496 047d 05       		.uleb128 0x5
 1497 047e 03       		.byte	0x3
 1498 047f 00000000 		.4byte	k
 1499 0483 22       		.uleb128 0x22
 1500 0484 93020000 		.4byte	.LASF58
 1501 0488 01       		.byte	0x1
 1502 0489 57       		.byte	0x57
 1503 048a 7E000000 		.4byte	0x7e
 1504 048e 05       		.uleb128 0x5
 1505 048f 03       		.byte	0x3
 1506 0490 00000000 		.4byte	isMaster
 1507 0494 22       		.uleb128 0x22
 1508 0495 C0010000 		.4byte	.LASF59
ARM GAS  C:\Users\shevi\AppData\Local\Temp\cchpMgoP.s 			page 37


 1509 0499 01       		.byte	0x1
 1510 049a 58       		.byte	0x58
 1511 049b 7E000000 		.4byte	0x7e
 1512 049f 05       		.uleb128 0x5
 1513 04a0 03       		.byte	0x3
 1514 04a1 00000000 		.4byte	first_run
 1515 04a5 19       		.uleb128 0x19
 1516 04a6 A9000000 		.4byte	.LASF50
 1517 04aa 01       		.byte	0x1
 1518 04ab ED       		.byte	0xed
 1519 04ac 3F030000 		.4byte	0x33f
 1520 04b0 00       		.byte	0
 1521              		.section	.debug_abbrev,"",%progbits
 1522              	.Ldebug_abbrev0:
 1523 0000 01       		.uleb128 0x1
 1524 0001 11       		.uleb128 0x11
 1525 0002 01       		.byte	0x1
 1526 0003 25       		.uleb128 0x25
 1527 0004 0E       		.uleb128 0xe
 1528 0005 13       		.uleb128 0x13
 1529 0006 0B       		.uleb128 0xb
 1530 0007 03       		.uleb128 0x3
 1531 0008 0E       		.uleb128 0xe
 1532 0009 1B       		.uleb128 0x1b
 1533 000a 0E       		.uleb128 0xe
 1534 000b 55       		.uleb128 0x55
 1535 000c 17       		.uleb128 0x17
 1536 000d 11       		.uleb128 0x11
 1537 000e 01       		.uleb128 0x1
 1538 000f 10       		.uleb128 0x10
 1539 0010 17       		.uleb128 0x17
 1540 0011 00       		.byte	0
 1541 0012 00       		.byte	0
 1542 0013 02       		.uleb128 0x2
 1543 0014 24       		.uleb128 0x24
 1544 0015 00       		.byte	0
 1545 0016 0B       		.uleb128 0xb
 1546 0017 0B       		.uleb128 0xb
 1547 0018 3E       		.uleb128 0x3e
 1548 0019 0B       		.uleb128 0xb
 1549 001a 03       		.uleb128 0x3
 1550 001b 0E       		.uleb128 0xe
 1551 001c 00       		.byte	0
 1552 001d 00       		.byte	0
 1553 001e 03       		.uleb128 0x3
 1554 001f 16       		.uleb128 0x16
 1555 0020 00       		.byte	0
 1556 0021 03       		.uleb128 0x3
 1557 0022 0E       		.uleb128 0xe
 1558 0023 3A       		.uleb128 0x3a
 1559 0024 0B       		.uleb128 0xb
 1560 0025 3B       		.uleb128 0x3b
 1561 0026 0B       		.uleb128 0xb
 1562 0027 49       		.uleb128 0x49
 1563 0028 13       		.uleb128 0x13
 1564 0029 00       		.byte	0
 1565 002a 00       		.byte	0
ARM GAS  C:\Users\shevi\AppData\Local\Temp\cchpMgoP.s 			page 38


 1566 002b 04       		.uleb128 0x4
 1567 002c 24       		.uleb128 0x24
 1568 002d 00       		.byte	0
 1569 002e 0B       		.uleb128 0xb
 1570 002f 0B       		.uleb128 0xb
 1571 0030 3E       		.uleb128 0x3e
 1572 0031 0B       		.uleb128 0xb
 1573 0032 03       		.uleb128 0x3
 1574 0033 08       		.uleb128 0x8
 1575 0034 00       		.byte	0
 1576 0035 00       		.byte	0
 1577 0036 05       		.uleb128 0x5
 1578 0037 16       		.uleb128 0x16
 1579 0038 00       		.byte	0
 1580 0039 03       		.uleb128 0x3
 1581 003a 0E       		.uleb128 0xe
 1582 003b 3A       		.uleb128 0x3a
 1583 003c 0B       		.uleb128 0xb
 1584 003d 3B       		.uleb128 0x3b
 1585 003e 05       		.uleb128 0x5
 1586 003f 49       		.uleb128 0x49
 1587 0040 13       		.uleb128 0x13
 1588 0041 00       		.byte	0
 1589 0042 00       		.byte	0
 1590 0043 06       		.uleb128 0x6
 1591 0044 0F       		.uleb128 0xf
 1592 0045 00       		.byte	0
 1593 0046 0B       		.uleb128 0xb
 1594 0047 0B       		.uleb128 0xb
 1595 0048 49       		.uleb128 0x49
 1596 0049 13       		.uleb128 0x13
 1597 004a 00       		.byte	0
 1598 004b 00       		.byte	0
 1599 004c 07       		.uleb128 0x7
 1600 004d 15       		.uleb128 0x15
 1601 004e 00       		.byte	0
 1602 004f 27       		.uleb128 0x27
 1603 0050 19       		.uleb128 0x19
 1604 0051 00       		.byte	0
 1605 0052 00       		.byte	0
 1606 0053 08       		.uleb128 0x8
 1607 0054 0F       		.uleb128 0xf
 1608 0055 00       		.byte	0
 1609 0056 0B       		.uleb128 0xb
 1610 0057 0B       		.uleb128 0xb
 1611 0058 00       		.byte	0
 1612 0059 00       		.byte	0
 1613 005a 09       		.uleb128 0x9
 1614 005b 13       		.uleb128 0x13
 1615 005c 00       		.byte	0
 1616 005d 03       		.uleb128 0x3
 1617 005e 0E       		.uleb128 0xe
 1618 005f 3C       		.uleb128 0x3c
 1619 0060 19       		.uleb128 0x19
 1620 0061 00       		.byte	0
 1621 0062 00       		.byte	0
 1622 0063 0A       		.uleb128 0xa
ARM GAS  C:\Users\shevi\AppData\Local\Temp\cchpMgoP.s 			page 39


 1623 0064 13       		.uleb128 0x13
 1624 0065 01       		.byte	0x1
 1625 0066 0B       		.uleb128 0xb
 1626 0067 0B       		.uleb128 0xb
 1627 0068 3A       		.uleb128 0x3a
 1628 0069 0B       		.uleb128 0xb
 1629 006a 3B       		.uleb128 0x3b
 1630 006b 0B       		.uleb128 0xb
 1631 006c 01       		.uleb128 0x1
 1632 006d 13       		.uleb128 0x13
 1633 006e 00       		.byte	0
 1634 006f 00       		.byte	0
 1635 0070 0B       		.uleb128 0xb
 1636 0071 0D       		.uleb128 0xd
 1637 0072 00       		.byte	0
 1638 0073 03       		.uleb128 0x3
 1639 0074 0E       		.uleb128 0xe
 1640 0075 3A       		.uleb128 0x3a
 1641 0076 0B       		.uleb128 0xb
 1642 0077 3B       		.uleb128 0x3b
 1643 0078 0B       		.uleb128 0xb
 1644 0079 49       		.uleb128 0x49
 1645 007a 13       		.uleb128 0x13
 1646 007b 38       		.uleb128 0x38
 1647 007c 0B       		.uleb128 0xb
 1648 007d 00       		.byte	0
 1649 007e 00       		.byte	0
 1650 007f 0C       		.uleb128 0xc
 1651 0080 0D       		.uleb128 0xd
 1652 0081 00       		.byte	0
 1653 0082 03       		.uleb128 0x3
 1654 0083 08       		.uleb128 0x8
 1655 0084 3A       		.uleb128 0x3a
 1656 0085 0B       		.uleb128 0xb
 1657 0086 3B       		.uleb128 0x3b
 1658 0087 0B       		.uleb128 0xb
 1659 0088 49       		.uleb128 0x49
 1660 0089 13       		.uleb128 0x13
 1661 008a 38       		.uleb128 0x38
 1662 008b 0B       		.uleb128 0xb
 1663 008c 00       		.byte	0
 1664 008d 00       		.byte	0
 1665 008e 0D       		.uleb128 0xd
 1666 008f 2E       		.uleb128 0x2e
 1667 0090 01       		.byte	0x1
 1668 0091 03       		.uleb128 0x3
 1669 0092 0E       		.uleb128 0xe
 1670 0093 3A       		.uleb128 0x3a
 1671 0094 0B       		.uleb128 0xb
 1672 0095 3B       		.uleb128 0x3b
 1673 0096 0B       		.uleb128 0xb
 1674 0097 27       		.uleb128 0x27
 1675 0098 19       		.uleb128 0x19
 1676 0099 20       		.uleb128 0x20
 1677 009a 0B       		.uleb128 0xb
 1678 009b 01       		.uleb128 0x1
 1679 009c 13       		.uleb128 0x13
ARM GAS  C:\Users\shevi\AppData\Local\Temp\cchpMgoP.s 			page 40


 1680 009d 00       		.byte	0
 1681 009e 00       		.byte	0
 1682 009f 0E       		.uleb128 0xe
 1683 00a0 34       		.uleb128 0x34
 1684 00a1 00       		.byte	0
 1685 00a2 03       		.uleb128 0x3
 1686 00a3 0E       		.uleb128 0xe
 1687 00a4 3A       		.uleb128 0x3a
 1688 00a5 0B       		.uleb128 0xb
 1689 00a6 3B       		.uleb128 0x3b
 1690 00a7 0B       		.uleb128 0xb
 1691 00a8 49       		.uleb128 0x49
 1692 00a9 13       		.uleb128 0x13
 1693 00aa 00       		.byte	0
 1694 00ab 00       		.byte	0
 1695 00ac 0F       		.uleb128 0xf
 1696 00ad 2E       		.uleb128 0x2e
 1697 00ae 01       		.byte	0x1
 1698 00af 3F       		.uleb128 0x3f
 1699 00b0 19       		.uleb128 0x19
 1700 00b1 03       		.uleb128 0x3
 1701 00b2 0E       		.uleb128 0xe
 1702 00b3 3A       		.uleb128 0x3a
 1703 00b4 0B       		.uleb128 0xb
 1704 00b5 3B       		.uleb128 0x3b
 1705 00b6 0B       		.uleb128 0xb
 1706 00b7 27       		.uleb128 0x27
 1707 00b8 19       		.uleb128 0x19
 1708 00b9 49       		.uleb128 0x49
 1709 00ba 13       		.uleb128 0x13
 1710 00bb 11       		.uleb128 0x11
 1711 00bc 01       		.uleb128 0x1
 1712 00bd 12       		.uleb128 0x12
 1713 00be 06       		.uleb128 0x6
 1714 00bf 40       		.uleb128 0x40
 1715 00c0 18       		.uleb128 0x18
 1716 00c1 9642     		.uleb128 0x2116
 1717 00c3 19       		.uleb128 0x19
 1718 00c4 01       		.uleb128 0x1
 1719 00c5 13       		.uleb128 0x13
 1720 00c6 00       		.byte	0
 1721 00c7 00       		.byte	0
 1722 00c8 10       		.uleb128 0x10
 1723 00c9 34       		.uleb128 0x34
 1724 00ca 00       		.byte	0
 1725 00cb 03       		.uleb128 0x3
 1726 00cc 08       		.uleb128 0x8
 1727 00cd 3A       		.uleb128 0x3a
 1728 00ce 0B       		.uleb128 0xb
 1729 00cf 3B       		.uleb128 0x3b
 1730 00d0 0B       		.uleb128 0xb
 1731 00d1 49       		.uleb128 0x49
 1732 00d2 13       		.uleb128 0x13
 1733 00d3 02       		.uleb128 0x2
 1734 00d4 18       		.uleb128 0x18
 1735 00d5 00       		.byte	0
 1736 00d6 00       		.byte	0
ARM GAS  C:\Users\shevi\AppData\Local\Temp\cchpMgoP.s 			page 41


 1737 00d7 11       		.uleb128 0x11
 1738 00d8 01       		.uleb128 0x1
 1739 00d9 01       		.byte	0x1
 1740 00da 49       		.uleb128 0x49
 1741 00db 13       		.uleb128 0x13
 1742 00dc 01       		.uleb128 0x1
 1743 00dd 13       		.uleb128 0x13
 1744 00de 00       		.byte	0
 1745 00df 00       		.byte	0
 1746 00e0 12       		.uleb128 0x12
 1747 00e1 21       		.uleb128 0x21
 1748 00e2 00       		.byte	0
 1749 00e3 49       		.uleb128 0x49
 1750 00e4 13       		.uleb128 0x13
 1751 00e5 2F       		.uleb128 0x2f
 1752 00e6 0B       		.uleb128 0xb
 1753 00e7 00       		.byte	0
 1754 00e8 00       		.byte	0
 1755 00e9 13       		.uleb128 0x13
 1756 00ea 26       		.uleb128 0x26
 1757 00eb 00       		.byte	0
 1758 00ec 49       		.uleb128 0x49
 1759 00ed 13       		.uleb128 0x13
 1760 00ee 00       		.byte	0
 1761 00ef 00       		.byte	0
 1762 00f0 14       		.uleb128 0x14
 1763 00f1 2E       		.uleb128 0x2e
 1764 00f2 01       		.byte	0x1
 1765 00f3 3F       		.uleb128 0x3f
 1766 00f4 19       		.uleb128 0x19
 1767 00f5 03       		.uleb128 0x3
 1768 00f6 0E       		.uleb128 0xe
 1769 00f7 3A       		.uleb128 0x3a
 1770 00f8 0B       		.uleb128 0xb
 1771 00f9 3B       		.uleb128 0x3b
 1772 00fa 0B       		.uleb128 0xb
 1773 00fb 27       		.uleb128 0x27
 1774 00fc 19       		.uleb128 0x19
 1775 00fd 11       		.uleb128 0x11
 1776 00fe 01       		.uleb128 0x1
 1777 00ff 12       		.uleb128 0x12
 1778 0100 06       		.uleb128 0x6
 1779 0101 40       		.uleb128 0x40
 1780 0102 18       		.uleb128 0x18
 1781 0103 9642     		.uleb128 0x2116
 1782 0105 19       		.uleb128 0x19
 1783 0106 01       		.uleb128 0x1
 1784 0107 13       		.uleb128 0x13
 1785 0108 00       		.byte	0
 1786 0109 00       		.byte	0
 1787 010a 15       		.uleb128 0x15
 1788 010b 05       		.uleb128 0x5
 1789 010c 00       		.byte	0
 1790 010d 03       		.uleb128 0x3
 1791 010e 08       		.uleb128 0x8
 1792 010f 3A       		.uleb128 0x3a
 1793 0110 0B       		.uleb128 0xb
ARM GAS  C:\Users\shevi\AppData\Local\Temp\cchpMgoP.s 			page 42


 1794 0111 3B       		.uleb128 0x3b
 1795 0112 0B       		.uleb128 0xb
 1796 0113 49       		.uleb128 0x49
 1797 0114 13       		.uleb128 0x13
 1798 0115 02       		.uleb128 0x2
 1799 0116 18       		.uleb128 0x18
 1800 0117 00       		.byte	0
 1801 0118 00       		.byte	0
 1802 0119 16       		.uleb128 0x16
 1803 011a 34       		.uleb128 0x34
 1804 011b 00       		.byte	0
 1805 011c 03       		.uleb128 0x3
 1806 011d 0E       		.uleb128 0xe
 1807 011e 3A       		.uleb128 0x3a
 1808 011f 0B       		.uleb128 0xb
 1809 0120 3B       		.uleb128 0x3b
 1810 0121 0B       		.uleb128 0xb
 1811 0122 49       		.uleb128 0x49
 1812 0123 13       		.uleb128 0x13
 1813 0124 02       		.uleb128 0x2
 1814 0125 18       		.uleb128 0x18
 1815 0126 00       		.byte	0
 1816 0127 00       		.byte	0
 1817 0128 17       		.uleb128 0x17
 1818 0129 2E       		.uleb128 0x2e
 1819 012a 01       		.byte	0x1
 1820 012b 03       		.uleb128 0x3
 1821 012c 0E       		.uleb128 0xe
 1822 012d 3A       		.uleb128 0x3a
 1823 012e 0B       		.uleb128 0xb
 1824 012f 3B       		.uleb128 0x3b
 1825 0130 0B       		.uleb128 0xb
 1826 0131 27       		.uleb128 0x27
 1827 0132 19       		.uleb128 0x19
 1828 0133 11       		.uleb128 0x11
 1829 0134 01       		.uleb128 0x1
 1830 0135 12       		.uleb128 0x12
 1831 0136 06       		.uleb128 0x6
 1832 0137 40       		.uleb128 0x40
 1833 0138 18       		.uleb128 0x18
 1834 0139 9642     		.uleb128 0x2116
 1835 013b 19       		.uleb128 0x19
 1836 013c 01       		.uleb128 0x1
 1837 013d 13       		.uleb128 0x13
 1838 013e 00       		.byte	0
 1839 013f 00       		.byte	0
 1840 0140 18       		.uleb128 0x18
 1841 0141 2E       		.uleb128 0x2e
 1842 0142 00       		.byte	0
 1843 0143 3F       		.uleb128 0x3f
 1844 0144 19       		.uleb128 0x19
 1845 0145 03       		.uleb128 0x3
 1846 0146 0E       		.uleb128 0xe
 1847 0147 3A       		.uleb128 0x3a
 1848 0148 0B       		.uleb128 0xb
 1849 0149 3B       		.uleb128 0x3b
 1850 014a 0B       		.uleb128 0xb
ARM GAS  C:\Users\shevi\AppData\Local\Temp\cchpMgoP.s 			page 43


 1851 014b 27       		.uleb128 0x27
 1852 014c 19       		.uleb128 0x19
 1853 014d 3C       		.uleb128 0x3c
 1854 014e 19       		.uleb128 0x19
 1855 014f 00       		.byte	0
 1856 0150 00       		.byte	0
 1857 0151 19       		.uleb128 0x19
 1858 0152 34       		.uleb128 0x34
 1859 0153 00       		.byte	0
 1860 0154 03       		.uleb128 0x3
 1861 0155 0E       		.uleb128 0xe
 1862 0156 3A       		.uleb128 0x3a
 1863 0157 0B       		.uleb128 0xb
 1864 0158 3B       		.uleb128 0x3b
 1865 0159 0B       		.uleb128 0xb
 1866 015a 49       		.uleb128 0x49
 1867 015b 13       		.uleb128 0x13
 1868 015c 3F       		.uleb128 0x3f
 1869 015d 19       		.uleb128 0x19
 1870 015e 3C       		.uleb128 0x3c
 1871 015f 19       		.uleb128 0x19
 1872 0160 00       		.byte	0
 1873 0161 00       		.byte	0
 1874 0162 1A       		.uleb128 0x1a
 1875 0163 21       		.uleb128 0x21
 1876 0164 00       		.byte	0
 1877 0165 00       		.byte	0
 1878 0166 00       		.byte	0
 1879 0167 1B       		.uleb128 0x1b
 1880 0168 2E       		.uleb128 0x2e
 1881 0169 01       		.byte	0x1
 1882 016a 3F       		.uleb128 0x3f
 1883 016b 19       		.uleb128 0x19
 1884 016c 03       		.uleb128 0x3
 1885 016d 0E       		.uleb128 0xe
 1886 016e 3A       		.uleb128 0x3a
 1887 016f 0B       		.uleb128 0xb
 1888 0170 3B       		.uleb128 0x3b
 1889 0171 05       		.uleb128 0x5
 1890 0172 27       		.uleb128 0x27
 1891 0173 19       		.uleb128 0x19
 1892 0174 11       		.uleb128 0x11
 1893 0175 01       		.uleb128 0x1
 1894 0176 12       		.uleb128 0x12
 1895 0177 06       		.uleb128 0x6
 1896 0178 40       		.uleb128 0x40
 1897 0179 18       		.uleb128 0x18
 1898 017a 9742     		.uleb128 0x2117
 1899 017c 19       		.uleb128 0x19
 1900 017d 01       		.uleb128 0x1
 1901 017e 13       		.uleb128 0x13
 1902 017f 00       		.byte	0
 1903 0180 00       		.byte	0
 1904 0181 1C       		.uleb128 0x1c
 1905 0182 05       		.uleb128 0x5
 1906 0183 00       		.byte	0
 1907 0184 03       		.uleb128 0x3
ARM GAS  C:\Users\shevi\AppData\Local\Temp\cchpMgoP.s 			page 44


 1908 0185 0E       		.uleb128 0xe
 1909 0186 3A       		.uleb128 0x3a
 1910 0187 0B       		.uleb128 0xb
 1911 0188 3B       		.uleb128 0x3b
 1912 0189 05       		.uleb128 0x5
 1913 018a 49       		.uleb128 0x49
 1914 018b 13       		.uleb128 0x13
 1915 018c 02       		.uleb128 0x2
 1916 018d 18       		.uleb128 0x18
 1917 018e 00       		.byte	0
 1918 018f 00       		.byte	0
 1919 0190 1D       		.uleb128 0x1d
 1920 0191 1D       		.uleb128 0x1d
 1921 0192 01       		.byte	0x1
 1922 0193 31       		.uleb128 0x31
 1923 0194 13       		.uleb128 0x13
 1924 0195 11       		.uleb128 0x11
 1925 0196 01       		.uleb128 0x1
 1926 0197 12       		.uleb128 0x12
 1927 0198 06       		.uleb128 0x6
 1928 0199 58       		.uleb128 0x58
 1929 019a 0B       		.uleb128 0xb
 1930 019b 59       		.uleb128 0x59
 1931 019c 05       		.uleb128 0x5
 1932 019d 00       		.byte	0
 1933 019e 00       		.byte	0
 1934 019f 1E       		.uleb128 0x1e
 1935 01a0 0B       		.uleb128 0xb
 1936 01a1 01       		.byte	0x1
 1937 01a2 11       		.uleb128 0x11
 1938 01a3 01       		.uleb128 0x1
 1939 01a4 12       		.uleb128 0x12
 1940 01a5 06       		.uleb128 0x6
 1941 01a6 00       		.byte	0
 1942 01a7 00       		.byte	0
 1943 01a8 1F       		.uleb128 0x1f
 1944 01a9 34       		.uleb128 0x34
 1945 01aa 00       		.byte	0
 1946 01ab 31       		.uleb128 0x31
 1947 01ac 13       		.uleb128 0x13
 1948 01ad 02       		.uleb128 0x2
 1949 01ae 18       		.uleb128 0x18
 1950 01af 00       		.byte	0
 1951 01b0 00       		.byte	0
 1952 01b1 20       		.uleb128 0x20
 1953 01b2 34       		.uleb128 0x34
 1954 01b3 00       		.byte	0
 1955 01b4 03       		.uleb128 0x3
 1956 01b5 0E       		.uleb128 0xe
 1957 01b6 3A       		.uleb128 0x3a
 1958 01b7 0B       		.uleb128 0xb
 1959 01b8 3B       		.uleb128 0x3b
 1960 01b9 05       		.uleb128 0x5
 1961 01ba 49       		.uleb128 0x49
 1962 01bb 13       		.uleb128 0x13
 1963 01bc 3F       		.uleb128 0x3f
 1964 01bd 19       		.uleb128 0x19
ARM GAS  C:\Users\shevi\AppData\Local\Temp\cchpMgoP.s 			page 45


 1965 01be 3C       		.uleb128 0x3c
 1966 01bf 19       		.uleb128 0x19
 1967 01c0 00       		.byte	0
 1968 01c1 00       		.byte	0
 1969 01c2 21       		.uleb128 0x21
 1970 01c3 35       		.uleb128 0x35
 1971 01c4 00       		.byte	0
 1972 01c5 49       		.uleb128 0x49
 1973 01c6 13       		.uleb128 0x13
 1974 01c7 00       		.byte	0
 1975 01c8 00       		.byte	0
 1976 01c9 22       		.uleb128 0x22
 1977 01ca 34       		.uleb128 0x34
 1978 01cb 00       		.byte	0
 1979 01cc 03       		.uleb128 0x3
 1980 01cd 0E       		.uleb128 0xe
 1981 01ce 3A       		.uleb128 0x3a
 1982 01cf 0B       		.uleb128 0xb
 1983 01d0 3B       		.uleb128 0x3b
 1984 01d1 0B       		.uleb128 0xb
 1985 01d2 49       		.uleb128 0x49
 1986 01d3 13       		.uleb128 0x13
 1987 01d4 3F       		.uleb128 0x3f
 1988 01d5 19       		.uleb128 0x19
 1989 01d6 02       		.uleb128 0x2
 1990 01d7 18       		.uleb128 0x18
 1991 01d8 00       		.byte	0
 1992 01d9 00       		.byte	0
 1993 01da 23       		.uleb128 0x23
 1994 01db 34       		.uleb128 0x34
 1995 01dc 00       		.byte	0
 1996 01dd 03       		.uleb128 0x3
 1997 01de 08       		.uleb128 0x8
 1998 01df 3A       		.uleb128 0x3a
 1999 01e0 0B       		.uleb128 0xb
 2000 01e1 3B       		.uleb128 0x3b
 2001 01e2 0B       		.uleb128 0xb
 2002 01e3 49       		.uleb128 0x49
 2003 01e4 13       		.uleb128 0x13
 2004 01e5 3F       		.uleb128 0x3f
 2005 01e6 19       		.uleb128 0x19
 2006 01e7 02       		.uleb128 0x2
 2007 01e8 18       		.uleb128 0x18
 2008 01e9 00       		.byte	0
 2009 01ea 00       		.byte	0
 2010 01eb 00       		.byte	0
 2011              		.section	.debug_aranges,"",%progbits
 2012 0000 44000000 		.4byte	0x44
 2013 0004 0200     		.2byte	0x2
 2014 0006 00000000 		.4byte	.Ldebug_info0
 2015 000a 04       		.byte	0x4
 2016 000b 00       		.byte	0
 2017 000c 0000     		.2byte	0
 2018 000e 0000     		.2byte	0
 2019 0010 00000000 		.4byte	.LFB69
 2020 0014 E4000000 		.4byte	.LFE69-.LFB69
 2021 0018 00000000 		.4byte	.LFB70
ARM GAS  C:\Users\shevi\AppData\Local\Temp\cchpMgoP.s 			page 46


 2022 001c F4020000 		.4byte	.LFE70-.LFB70
 2023 0020 00000000 		.4byte	.LFB71
 2024 0024 D0000000 		.4byte	.LFE71-.LFB71
 2025 0028 00000000 		.4byte	.LFB72
 2026 002c 90000000 		.4byte	.LFE72-.LFB72
 2027 0030 00000000 		.4byte	.LFB73
 2028 0034 1E000000 		.4byte	.LFE73-.LFB73
 2029 0038 00000000 		.4byte	.LFB74
 2030 003c 1A000000 		.4byte	.LFE74-.LFB74
 2031 0040 00000000 		.4byte	0
 2032 0044 00000000 		.4byte	0
 2033              		.section	.debug_ranges,"",%progbits
 2034              	.Ldebug_ranges0:
 2035 0000 00000000 		.4byte	.LFB69
 2036 0004 E4000000 		.4byte	.LFE69
 2037 0008 00000000 		.4byte	.LFB70
 2038 000c F4020000 		.4byte	.LFE70
 2039 0010 00000000 		.4byte	.LFB71
 2040 0014 D0000000 		.4byte	.LFE71
 2041 0018 00000000 		.4byte	.LFB72
 2042 001c 90000000 		.4byte	.LFE72
 2043 0020 00000000 		.4byte	.LFB73
 2044 0024 1E000000 		.4byte	.LFE73
 2045 0028 00000000 		.4byte	.LFB74
 2046 002c 1A000000 		.4byte	.LFE74
 2047 0030 00000000 		.4byte	0
 2048 0034 00000000 		.4byte	0
 2049              		.section	.debug_line,"",%progbits
 2050              	.Ldebug_line0:
 2051 0000 26030000 		.section	.debug_str,"MS",%progbits,1
 2051      0200DF01 
 2051      00000201 
 2051      FB0E0D00 
 2051      01010101 
 2052              	.LASF62:
 2053 0000 433A5C55 		.ascii	"C:\\Users\\shevi\\Documents\\FYP\\FYP_POSCCreator_M"
 2053      73657273 
 2053      5C736865 
 2053      76695C44 
 2053      6F63756D 
 2054 002e 61737465 		.ascii	"aster-cb49844c11f80dd632253a3ce6c772ad769288bc\\FYP"
 2054      722D6362 
 2054      34393834 
 2054      34633131 
 2054      66383064 
 2055 0060 5F50534F 		.ascii	"_PSOCCreator_Master\\CORTEX_CY8C5588_PSoC_Creator_G"
 2055      43437265 
 2055      61746F72 
 2055      5F4D6173 
 2055      7465725C 
 2056 0092 43435C46 		.ascii	"CC\\FreeRTOS_Demo.cydsn\000"
 2056      72656552 
 2056      544F535F 
 2056      44656D6F 
 2056      2E637964 
 2057              	.LASF50:
 2058 00a9 43795261 		.ascii	"CyRamVectors\000"
ARM GAS  C:\Users\shevi\AppData\Local\Temp\cchpMgoP.s 			page 47


 2058      6D566563 
 2058      746F7273 
 2058      00
 2059              	.LASF40:
 2060 00b6 72656365 		.ascii	"receive_data\000"
 2060      6976655F 
 2060      64617461 
 2060      00
 2061              	.LASF39:
 2062 00c3 74656D70 		.ascii	"temp\000"
 2062      00
 2063              	.LASF28:
 2064 00c8 6375725F 		.ascii	"cur_dest\000"
 2064      64657374 
 2064      00
 2065              	.LASF20:
 2066 00d1 73697A65 		.ascii	"sizetype\000"
 2066      74797065 
 2066      00
 2067              	.LASF43:
 2068 00da 78506F72 		.ascii	"xPortSysTickHandler\000"
 2068      74537973 
 2068      5469636B 
 2068      48616E64 
 2068      6C657200 
 2069              	.LASF23:
 2070 00ee 5461736B 		.ascii	"TaskHandle_t\000"
 2070      48616E64 
 2070      6C655F74 
 2070      00
 2071              	.LASF60:
 2072 00fb 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2072      43313120 
 2072      352E342E 
 2072      31203230 
 2072      31363036 
 2073 012e 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2073      20726576 
 2073      6973696F 
 2073      6E203233 
 2073      37373135 
 2074 0161 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2074      66756E63 
 2074      74696F6E 
 2074      2D736563 
 2074      74696F6E 
 2075              	.LASF19:
 2076 0189 6C6F6E67 		.ascii	"long double\000"
 2076      20646F75 
 2076      626C6500 
 2077              	.LASF7:
 2078 0195 5F5F7569 		.ascii	"__uint32_t\000"
 2078      6E743332 
 2078      5F7400
 2079              	.LASF36:
 2080 01a0 5049445F 		.ascii	"PID_data\000"
 2080      64617461 
ARM GAS  C:\Users\shevi\AppData\Local\Temp\cchpMgoP.s 			page 48


 2080      00
 2081              	.LASF18:
 2082 01a9 63796973 		.ascii	"cyisraddress\000"
 2082      72616464 
 2082      72657373 
 2082      00
 2083              	.LASF2:
 2084 01b6 73686F72 		.ascii	"short int\000"
 2084      7420696E 
 2084      7400
 2085              	.LASF59:
 2086 01c0 66697273 		.ascii	"first_run\000"
 2086      745F7275 
 2086      6E00
 2087              	.LASF12:
 2088 01ca 75696E74 		.ascii	"uint8_t\000"
 2088      385F7400 
 2089              	.LASF44:
 2090 01d2 76506F72 		.ascii	"vPortSVCHandler\000"
 2090      74535643 
 2090      48616E64 
 2090      6C657200 
 2091              	.LASF45:
 2092 01e2 76417070 		.ascii	"vApplicationStackOverflowHook\000"
 2092      6C696361 
 2092      74696F6E 
 2092      53746163 
 2092      6B4F7665 
 2093              	.LASF46:
 2094 0200 70785461 		.ascii	"pxTask\000"
 2094      736B00
 2095              	.LASF15:
 2096 0207 666C6F61 		.ascii	"float\000"
 2096      7400
 2097              	.LASF9:
 2098 020d 6C6F6E67 		.ascii	"long long int\000"
 2098      206C6F6E 
 2098      6720696E 
 2098      7400
 2099              	.LASF53:
 2100 021b 71756575 		.ascii	"queue_handle\000"
 2100      655F6861 
 2100      6E646C65 
 2100      00
 2101              	.LASF37:
 2102 0228 6C6F6361 		.ascii	"local_write\000"
 2102      6C5F7772 
 2102      69746500 
 2103              	.LASF6:
 2104 0234 6C6F6E67 		.ascii	"long int\000"
 2104      20696E74 
 2104      00
 2105              	.LASF35:
 2106 023d 77686565 		.ascii	"wheel_data\000"
 2106      6C5F6461 
 2106      746100
 2107              	.LASF34:
ARM GAS  C:\Users\shevi\AppData\Local\Temp\cchpMgoP.s 			page 49


 2108 0248 74696D65 		.ascii	"time_prev\000"
 2108      5F707265 
 2108      7600
 2109              	.LASF63:
 2110 0252 5461736B 		.ascii	"TaskControlBlock_t\000"
 2110      436F6E74 
 2110      726F6C42 
 2110      6C6F636B 
 2110      5F7400
 2111              	.LASF4:
 2112 0265 5F5F7569 		.ascii	"__uint8_t\000"
 2112      6E74385F 
 2112      7400
 2113              	.LASF49:
 2114 026f 7078506F 		.ascii	"pxPort\000"
 2114      727400
 2115              	.LASF48:
 2116 0276 76417070 		.ascii	"vApplicationMallocFailedHook\000"
 2116      6C696361 
 2116      74696F6E 
 2116      4D616C6C 
 2116      6F634661 
 2117              	.LASF58:
 2118 0293 69734D61 		.ascii	"isMaster\000"
 2118      73746572 
 2118      00
 2119              	.LASF1:
 2120 029c 756E7369 		.ascii	"unsigned char\000"
 2120      676E6564 
 2120      20636861 
 2120      7200
 2121              	.LASF22:
 2122 02aa 5469636B 		.ascii	"TickType_t\000"
 2122      54797065 
 2122      5F7400
 2123              	.LASF31:
 2124 02b5 6572726F 		.ascii	"error_sum\000"
 2124      725F7375 
 2124      6D00
 2125              	.LASF25:
 2126 02bf 53656D61 		.ascii	"SemaphoreHandle_t\000"
 2126      70686F72 
 2126      6548616E 
 2126      646C655F 
 2126      7400
 2127              	.LASF27:
 2128 02d1 70726576 		.ascii	"prev_dest\000"
 2128      5F646573 
 2128      7400
 2129              	.LASF0:
 2130 02db 7369676E 		.ascii	"signed char\000"
 2130      65642063 
 2130      68617200 
 2131              	.LASF10:
 2132 02e7 6C6F6E67 		.ascii	"long long unsigned int\000"
 2132      206C6F6E 
 2132      6720756E 
ARM GAS  C:\Users\shevi\AppData\Local\Temp\cchpMgoP.s 			page 50


 2132      7369676E 
 2132      65642069 
 2133              	.LASF14:
 2134 02fe 75696E74 		.ascii	"uint32_t\000"
 2134      33325F74 
 2134      00
 2135              	.LASF11:
 2136 0307 756E7369 		.ascii	"unsigned int\000"
 2136      676E6564 
 2136      20696E74 
 2136      00
 2137              	.LASF21:
 2138 0314 42617365 		.ascii	"BaseType_t\000"
 2138      54797065 
 2138      5F7400
 2139              	.LASF52:
 2140 031f 67617465 		.ascii	"gatekeeper\000"
 2140      6B656570 
 2140      657200
 2141              	.LASF33:
 2142 032a 74696D65 		.ascii	"time\000"
 2142      00
 2143              	.LASF29:
 2144 032f 6572726F 		.ascii	"error_prev\000"
 2144      725F7072 
 2144      657600
 2145              	.LASF3:
 2146 033a 73686F72 		.ascii	"short unsigned int\000"
 2146      7420756E 
 2146      7369676E 
 2146      65642069 
 2146      6E7400
 2147              	.LASF17:
 2148 034d 63686172 		.ascii	"char\000"
 2148      00
 2149              	.LASF32:
 2150 0352 6D6F746F 		.ascii	"motor_volt\000"
 2150      725F766F 
 2150      6C7400
 2151              	.LASF66:
 2152 035d 6D61696E 		.ascii	"main\000"
 2152      00
 2153              	.LASF38:
 2154 0362 74797065 		.ascii	"type\000"
 2154      00
 2155              	.LASF13:
 2156 0367 696E7433 		.ascii	"int32_t\000"
 2156      325F7400 
 2157              	.LASF42:
 2158 036f 78506F72 		.ascii	"xPortPendSVHandler\000"
 2158      7450656E 
 2158      64535648 
 2158      616E646C 
 2158      657200
 2159              	.LASF26:
 2160 0382 78436F6D 		.ascii	"xComPortHandle\000"
 2160      506F7274 
ARM GAS  C:\Users\shevi\AppData\Local\Temp\cchpMgoP.s 			page 51


 2160      48616E64 
 2160      6C6500
 2161              	.LASF67:
 2162 0391 70727648 		.ascii	"prvHardwareSetup\000"
 2162      61726477 
 2162      61726553 
 2162      65747570 
 2162      00
 2163              	.LASF55:
 2164 03a2 62756666 		.ascii	"buffer\000"
 2164      657200
 2165              	.LASF61:
 2166 03a9 6D61696E 		.ascii	"main.c\000"
 2166      2E6300
 2167              	.LASF8:
 2168 03b0 6C6F6E67 		.ascii	"long unsigned int\000"
 2168      20756E73 
 2168      69676E65 
 2168      6420696E 
 2168      7400
 2169              	.LASF16:
 2170 03c2 646F7562 		.ascii	"double\000"
 2170      6C6500
 2171              	.LASF54:
 2172 03c9 72785F72 		.ascii	"rx_receive\000"
 2172      65636569 
 2172      766500
 2173              	.LASF5:
 2174 03d4 5F5F696E 		.ascii	"__int32_t\000"
 2174      7433325F 
 2174      7400
 2175              	.LASF24:
 2176 03de 51756575 		.ascii	"QueueHandle_t\000"
 2176      6548616E 
 2176      646C655F 
 2176      7400
 2177              	.LASF30:
 2178 03ec 6572726F 		.ascii	"error\000"
 2178      7200
 2179              	.LASF64:
 2180 03f2 76506F72 		.ascii	"vPortRaiseBASEPRI\000"
 2180      74526169 
 2180      73654241 
 2180      53455052 
 2180      4900
 2181              	.LASF57:
 2182 0404 72696768 		.ascii	"right_wheel\000"
 2182      745F7768 
 2182      65656C00 
 2183              	.LASF51:
 2184 0410 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2184      52784275 
 2184      66666572 
 2184      00
 2185              	.LASF56:
 2186 041d 6C656674 		.ascii	"left_wheel\000"
 2186      5F776865 
ARM GAS  C:\Users\shevi\AppData\Local\Temp\cchpMgoP.s 			page 52


 2186      656C00
 2187              	.LASF41:
 2188 0428 5049445F 		.ascii	"PID_initialise\000"
 2188      696E6974 
 2188      69616C69 
 2188      736500
 2189              	.LASF65:
 2190 0437 756C4E65 		.ascii	"ulNewBASEPRI\000"
 2190      77424153 
 2190      45505249 
 2190      00
 2191              	.LASF47:
 2192 0444 70635461 		.ascii	"pcTaskName\000"
 2192      736B4E61 
 2192      6D6500
 2193              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
